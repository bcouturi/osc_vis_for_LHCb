#!/bin/sh -f

#set -x

bin=
FILE_NAME=$1
SUFFIX=$2
WRAP_NAME=$3

#echo ${FILE_NAME}
#echo ${WRAP_NAME}

# To find include files :
if [ "${SLASHROOT}" = "" ] ; then
  echo "BatchLab : makcdll : environment variable SLASHROOT not defined."
  exit
fi
if [ "${INLIBROOT}" = "" ] ; then
  echo "BatchLab : makcdll : environment variable INLIBROOT not defined."
  exit
fi
if [ "${EXLIBROOT}" = "" ] ; then
  echo "BatchLab : makcdll : environment variable EXLIBROOT not defined."
  exit
fi
if [ "${LIBROOT}" = "" ] ; then
  echo "Environment variable LIBROOT not defined."
  exit
fi
if [ "${BATCHLABROOT}" = "" ] ; then
  echo "Environment variable BATCHLABROOT not defined."
  exit
fi

# To find libraries :
if [ "${LIBDIRLIB}" = "" ] ; then
  echo "Environment variable LIBDIRLIB not defined."
  exit
fi
if [ "${BATCHLABDIRLIB}" = "" ] ; then
  echo "Environment variable BATCHLABDIRLIB not defined."
  exit
fi

if [ "${LIBDIRLIB}" = "" ] ; then
  echo "LIBDIRLIB variable not defined."
  exit
fi

if [ "${BATCHLABDIRLIB}" = "" ] ; then
  echo "BATCHLABDIRLIB variable not defined."
  exit
fi


/bin/rm -f ${bin}${FILE_NAME}.o
/bin/rm -f ${bin}${WRAP_NAME}.o

c_compiler=""
cxx_compiler=""
so="so"
if [ `uname` = "Linux" ] ; then
  c_compiler="gcc -fPIC"
  cxx_compiler="g++ -fPIC"
elif [ `uname` = "Darwin" ] ; then
  c_compiler=cc
  cxx_compiler=c++
  so="dylib"
elif [ "`uname | grep CYGWIN`" != "" ] ; then
  echo "BatchLab : makcdll : CYGWIN : not yet ready."
  exit
  cxx_compiler=g++
  so="dll.a"
else
  echo "BatchLab : makcdll : unknow platform."
  exit
fi

incs='-I"${INLIBROOT}" -I"${EXLIBROOT}" -I"${SLASHROOT}" -I"${LIBROOT}/include" -I"${BATCHLABROOT}" -I"${BATCHLABROOT}/BatchLab/HBOOK"'
libs='"${BATCHLABDIRLIB}"/libBatchLabHBOOK.${so} "${LIBDIRLIB}"/libLibUtils.${so}'

if [ "${SUFFIX}" = "c" ] ; then
  eval ${c_compiler} -c ${incs} -o ${bin}${FILE_NAME}.o ${FILE_NAME}.${SUFFIX}
  if [ $? != 0 ] ; then
    echo "BatchLab : makcdll : C compilation of ${FILE_NAME}.${SUFFIX} failed."
    exit
  fi
else
  eval ${cxx_compiler} -c ${incs} -o ${bin}${FILE_NAME}.o ${FILE_NAME}.${SUFFIX}
  if [ $? != 0 ] ; then
    echo "BatchLab : makcdll : C++ compilation of ${FILE_NAME}.${SUFFIX} failed."
    exit
  fi
fi

${cxx_compiler} -c -I"${SLASHROOT}" -o ${bin}${WRAP_NAME}.o ${WRAP_NAME}.cpp
if [ $? != 0 ] ; then
  echo "BatchLab : makcdll : compilation of ${WRAP_NAME}.cpp failed."
  exit
fi

if [ `uname` = "Linux" ] ; then
/bin/rm -f ${bin}lib${FILE_NAME}.so
eval g++ -shared -o ${bin}lib${FILE_NAME}.so ${bin}${WRAP_NAME}.o ${bin}${FILE_NAME}.o ${libs}
fi

if [ `uname` = "Darwin" ] ; then
/bin/rm -f ${bin}${FILE_NAME}.bundle
eval c++ -bundle -twolevel_namespace -o ${bin}${FILE_NAME}.bundle ${bin}${WRAP_NAME}.o ${bin}${FILE_NAME}.o ${libs}
fi

if [ "`uname | grep CYGWIN`" != "" ] ; then
/bin/rm -f ${bin}${FILE_NAME}.dll
eval g++ -shared -o ${bin}${FILE_NAME}.dll ${bin}${WRAP_NAME}.o ${bin}${FILE_NAME}.o ${libs}
fi

/bin/rm -f ${bin}${FILE_NAME}.o
/bin/rm -f ${bin}${WRAP_NAME}.o
