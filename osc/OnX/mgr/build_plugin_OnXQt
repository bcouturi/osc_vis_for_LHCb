#!/bin/sh -f

build_args=
while test $# -ge 1 ; do build_args="${build_args} $1";shift; done

inlib_mgr=../../../inexlib/inlib/mgr
exlib_mgr=../../../inexlib/exlib/mgr
ourex_mgr=../../../inexlib/ourex/mgr

. ${ourex_mgr}/build_header

build_pack=plugin_OnXQt
plugin=OnXQt

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
# we need mac_exe variable :
use_Qt=yes
. ${exlib_mgr}/use_Qt

if [ ${build_compile} = "yes" ] ; then

cppflags="${cppflags} -I${inlib_mgr}/.."
cppflags="${cppflags} -I${exlib_mgr}/.."

cppflags="${cppflags} -I../include"
cppflags="${cppflags} -I../../Slash"
cppflags="${cppflags} -I../../Lib/include"

#//////////////////////////////////////////////////////
#/// namespace protected copy of some code of 4.5.2 ///
#//////////////////////////////////////////////////////
${moc_exe} -o ../source/Qt/moc_q3_frame.cxx ../source/Qt/q3_frame.h
${moc_exe} -o ../source/Qt/moc_q3_hbox.cxx ../source/Qt/q3_hbox.h
${moc_exe} -o ../source/Qt/moc_q3_vbox.cxx ../source/Qt/q3_vbox.h

cppfiles="${cppfiles} ../source/Qt/q3frame.cpp"
cppfiles="${cppfiles} ../source/Qt/q3hbox.cpp"

cxxfiles="${cxxfiles} ../source/Qt/moc_q3_frame.cxx"
cxxfiles="${cxxfiles} ../source/Qt/moc_q3_hbox.cxx"
cxxfiles="${cxxfiles} ../source/Qt/moc_q3_vbox.cxx"

#/////////////////////////////////////////////////////
#/////////////////////////////////////////////////////
#/////////////////////////////////////////////////////
# Produce moc files :
${moc_exe} -o ../source/Qt/moc_QTk.cxx ../include/OnX/Qt/QTk.h
${moc_exe} -o ../source/Qt/moc_QCommandLine.cxx ../include/OnX/Qt/QCommandLine.h
${moc_exe} -o ../source/Qt/moc_QPageViewer.cxx ../include/OnX/Qt/QPageViewer.h
${moc_exe} -o ../source/Qt/moc_Callbacks.cxx ../include/OnX/Qt/Callbacks.h


cfiles="${cfiles} ../source/Core/gl2ps.c"

cxxfiles="${cxxfiles} ../source/Qt/QtTools.cxx"
cxxfiles="${cxxfiles} ../source/Qt/QTk.cxx"
cxxfiles="${cxxfiles} ../source/Qt/Callbacks.cxx"
cxxfiles="${cxxfiles} ../source/Qt/QtUI.cxx"

# moc files :
cxxfiles="${cxxfiles} ../source/Qt/moc_QCommandLine.cxx"
cxxfiles="${cxxfiles} ../source/Qt/moc_QPageViewer.cxx"
cxxfiles="${cxxfiles} ../source/Qt/moc_Callbacks.cxx"
cxxfiles="${cxxfiles} ../source/Qt/moc_QTk.cxx"

# related to Inventor Xt :
cxxfiles="${cxxfiles} ../source/Qt/QPageViewer.cxx"

# plugin :
cxxfiles="${cxxfiles} ../source/Qt/LoadQt.cxx"

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////

libs="${libs} -L${build_path} -lOnXCore -lOnXInventor"
libs="${libs} -L../../Lib/mgr/${build_dir} -lLibUtils"

use_CoinQt=yes
use_HEPVis=yes
use_CoinGL=yes
use_expat=yes
use_GL=yes
use_freetype=yes
use_png=yes
use_jpeg=yes
use_zlib=yes

. ${exlib_mgr}/use_CoinQt
. ${exlib_mgr}/use_HEPVis
. ${exlib_mgr}/use_CoinGL
. ${exlib_mgr}/use_expat
. ${exlib_mgr}/use_GL
. ${exlib_mgr}/use_Xm
. ${exlib_mgr}/use_X11
. ${exlib_mgr}/use_png
. ${exlib_mgr}/use_jpeg
. ${exlib_mgr}/use_freetype
. ${exlib_mgr}/use_zlib

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////

. ${inlib_mgr}/build_compile

fi # end build_compile
 
if [ ${build_plugin} = "yes" ] ; then . ${inlib_mgr}/build_plugin; fi

. ${inlib_mgr}/build_clean
