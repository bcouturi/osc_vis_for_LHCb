#!/bin/sh -f

#
# osc_wget_run permits to get a binary kit from the OpenScientist
# download area, install it locally and then run an application.
#
# The binary kit file name is of the form :
#   <kit>-<version>-<platform>.zip
# The <platform> is composed of :
#   <os>-<processor>-<compiler>
# For example :
#   osc_batch-v16r6-Linux-x86_64-gcc_346.zip
#
# Usage of the command :
#   OS> ./osc_wget_run -kit <kit> -version <version> [options] -application <application> [<application_arguments>]
# The -application along with the optional arguments passed to the
# application should come at end.
#
# [options] could be :
#   -platform : enforce a platform string.
#   -no_clean : do not remove the kit at end.
#
# Usage example :
#   OS> ./osc_wget_run -kit osc_batch -version 16.7 -application AIDA_example_Store
#   OS> ./osc_wget_run -kit osc_batch -version 16.7 -platform Darwin-i386-gcc_401  -no_clean -application AIDA_example_Store root
#
#

#set -x

osc_wget_run_kit=
osc_wget_run_version=
osc_wget_run_clean=yes

osc_wget_run_platform=

osc_wget_run_application=
osc_wget_run_app_args=

while test $# -ge 1 ; do
  case $1 in
    -h) 
        echo "Arguments :"
        echo "  -kit : [osc_batch,osc_vis,...]."
        echo "  -version : version to use."
        echo "  -application : application to run."
        echo "Optional :"
        echo "  -platform : enforce a platform string."
        echo "  -no_clean : do not remove the kit when finished."
        echo ""
        exit ;;
    -kit) shift
        if [ "${osc_wget_run_application}" != "" ] ; then
          echo "-application should come after all other options."
          exit 
        fi
        if [ $# != 0 ] ; then
          osc_wget_run_kit=$1 
        else         
          echo "give a name after the -kit option."
          exit 
        fi ;;
    -version) shift
        if [ "${osc_wget_run_application}" != "" ] ; then
          echo "-application should come after all other options."
          exit 
        fi
        if [ $# != 0 ] ; then
          osc_wget_run_version=$1 
        else         
          echo "give a version after the -version option."
          exit 
        fi ;;
    -platform) shift
        if [ "${osc_wget_run_application}" != "" ] ; then
          echo "-application should come after all other options."
          exit 
        fi
        if [ $# != 0 ] ; then
          osc_wget_run_platform=$1 
        else         
          echo "give a platform after the -platform option."
          exit 
        fi ;;
    -no_clean) 
        if [ "${osc_wget_run_application}" != "" ] ; then
          echo "-application should come after all other options."
          exit 
        fi
        osc_wget_run_clean=no ;;
    -application) shift
        if [ $# != 0 ] ; then
          osc_wget_run_application=$1 
        else         
          echo "give an application to run."
          exit 
        fi ;;   
     *) if [ "${osc_wget_run_application}" = "" ] ; then
          echo "arguments to the application should come at end."
          exit 
        else         
          osc_wget_run_app_args="${osc_wget_run_app_args} $1"
        fi ;;   
  esac
  shift
done

#///////////////////////////
#// mendatory input : //////
#///////////////////////////
if [ "${osc_wget_run_kit}" = "" ] ; then
  echo 'No package given.'
  exit
fi

if [ "${osc_wget_run_version}" = "" ] ; then
  echo 'No version given.'
  exit
fi

if [ "${osc_wget_run_application}" = "" ] ; then
  echo 'No application given.'
  exit
fi

#///////////////////////////
#// web getter : ///////////
#///////////////////////////

osc_wget_run_web_getter=
if [ `uname` = "Darwin" ] ; then
  osc_wget_run_web_getter="curl -s -O"
elif [ `uname` = "Linux" ] ; then
  osc_wget_run_web_getter="wget -q"
elif [ "`uname | grep CYGWIN`" != "" ] ; then
  osc_wget_run_web_getter="wget -q"
fi

if [ "${osc_wget_run_web_getter}" = "" ] ; then
  echo "No web getter."
  exit
fi

#///////////////////////////
#// download area : ////////
#///////////////////////////

osc_wget_run_download_area="http://OpenScientist.lal.in2p3.fr/download/tmpup"
#osc_wget_run_download_area="http://OpenScientist.lal.in2p3.fr/download/${osc_wget_run_version}/${osc_wget_run_kit_file}"

#///////////////////////////
#// guess platform : ///////
#///////////////////////////
if [ "${osc_wget_run_platform}" = "" ] ; then

  # we are going to use the obuild_platform program.

  # check for the compiler :
  osc_wget_run_compiler=c++
  osc_wget_run_found=false
  osc_wget_run_old_IFS="${IFS}"
  IFS=:
  for osc_wget_run_path in $PATH ; do
    if [ -f ${osc_wget_run_path}/${osc_wget_run_compiler} ] ; then
      osc_wget_run_found=true
      break
    fi
  done
  IFS="${osc_wget_run_old_IFS}"
  if [ ${osc_wget_run_found} = "false" ] ; then
    echo "compiler ${osc_wget_run_compiler} not found."
    exit
  fi

  # get obuild_platform.cpp :
  ${osc_wget_run_web_getter} ${osc_wget_run_download_area}/obuild_platform.cpp
  if [ $? != 0 ] ; then
    echo "Unable to web get obuild_platform.cpp"
    exit
  fi 
  if [ ! -e obuild_platform.cpp ] ; then
    echo "File obuild_platform.cpp not found."
    exit
  fi

  ${osc_wget_run_compiler} obuild_platform.cpp
  osc_wget_run_platform=`./a.out`
  if [ ${osc_wget_run_clean} = yes ] ; then
    /bin/rm -f ./a.out
    /bin/rm -f ./obuild_platform.cpp
  fi

fi

#echo ${osc_wget_run_platform}

#///////////////////////////
#// web get the kit : //////
#///////////////////////////

osc_wget_run_kit_file=${osc_wget_run_kit}-${osc_wget_run_version}-${osc_wget_run_platform}.zip

${osc_wget_run_web_getter} ${osc_wget_run_download_area}/${osc_wget_run_kit_file}
if [ $? != 0 ] ; then
  echo "Unable to web get ${osc_wget_run_download_area}/${osc_wget_run_url}"
  exit
fi 

if [ ! -e ${osc_wget_run_kit_file} ] ; then
  echo "File ${osc_wget_run_kit_file} not found."
  exit
fi

unzip -q ${osc_wget_run_kit_file}
if [ ${osc_wget_run_clean} = yes ] ; then
  /bin/rm -f ${osc_wget_run_kit_file}
fi
cd ${osc_wget_run_kit}/${osc_wget_run_version}
./install
cd ../..

#///////////////////////////
#// run the application : //
#///////////////////////////

# source setup the kit :
. ${osc_wget_run_kit}/${osc_wget_run_version}/setup.sh

if [ "${osc_wget_run_application}" = "check" ] ; then

  cd ${osc_wget_run_kit}/${osc_wget_run_version}
  ./check_install

else

  osc_wget_run_app_file=${osc_wget_run_kit}/${osc_wget_run_version}/bin/${osc_wget_run_application}

  # check if the application is around :
  if [ ! -e ${osc_wget_run_app_file} ] ; then
    echo "Application file ${osc_wget_run_app_file} not found."
  else
  ./${osc_wget_run_app_file} ${osc_wget_run_app_args}
  fi

fi

if [ ${osc_wget_run_clean} = yes ] ; then
  /bin/rm -R -f ${osc_wget_run_kit}
fi
