#!/bin/sh -f

#
# WARNING : the python program must be the one coming from the Python installation
#           used to build the plugins ([Coin,HEPVis,OnX,OnXLab]_SWIG_Python.so).
#           You must be aware that multiple python programs may exist on your machine.
#           On macOS, you must use the "pythonw" program.
#

version="`./version`"

run_what=
run_gui=

build_args=
while test $# -ge 1 ; do
  case $1 in
        -gtk) run_gui=Gtk;;  
         -Qt) run_gui=Qt;;  
         -Xt) run_gui=Xt;;  
         -Xm) run_gui=Xt;;  
   -NextStep) run_gui=NextStep;;
          -*) build_args="${build_args} $1";;  
           *) run_what=$1;;  
  esac
  shift
done

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
inlib_mgr=../../../inexlib/inlib/mgr
ourex_mgr=../../../inexlib/ourex/mgr

. ${ourex_mgr}/build_header

save_dir=`pwd`

#//////////////////////////////////////////
#//////////////////////////////////////////
#//////////////////////////////////////////

cd ${build_path}/distrib/osc_vis/${version}
./install
. ./setup.sh

use_Python=yes
. ./Resources/exlib/mgr/use_Python

. ./Python-setup.sh

#printenv PYTHONPATH
# if using the Qt driver :
use_Qt=yes
. ./Resources/exlib/mgr/use_Qt
if [ "${Qt_ld_library_path}" != "" ] ; then
  ld_path="${Qt_ld_library_path}"
  . ./Resources/inlib/mgr/build_ld_library_path
fi

#////////////////////////////////////
#/// run : //////////////////////////
#////////////////////////////////////

OSC_ARGS="-balance"
export OSC_ARGS

if [ "${run_gui}" != "" ] ; then
  OSC_GUI_TOOLKIT=${run_gui}
  export OSC_GUI_TOOLKIT
  #if [ "${run_gui}" = "Gtk" ] ; then
  #  LC_CTYPE=C;export LC_CTYPE
  #fi
fi

if [ "${run_what}" = "" ] ; then run_what=aida_0; fi

cd ./Resources/AIDA/examples/Python

options=
#options=-i

${py_exe} ${options} ${run_what}.py

cd ${OSC_HOME_DIR}

cd ${save_dir}
