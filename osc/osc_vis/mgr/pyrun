#!/bin/sh -f

#
# WARNING : the python program must be the one coming from the Python installation
#           used to build the plugins ([Coin,HEPVis,OnX,OnXLab]_SWIG_Python.so).
#           You must be aware that multiple python programs may exist on your machine.
#

version="`../../osc_source/version`"

run_what=
run_gui=
run_gdb=no

run_expat_debug=no
verbose_x=no
do_ls=no
run_all=no
run_show_py_exe=no

OSC_ARGS="-balance"

build_args=
while test $# -ge 1 ; do
  case $1 in
        -gtk) run_gui=Gtk;;  
         -Qt) run_gui=Qt;;  
         -qt) run_gui=Qt;;  
         -Xt) run_gui=Xt;;  
         -Xm) run_gui=Xt;;  
   -NextStep) run_gui=NextStep;;
        -gdb) run_gdb=yes;;
          -x) verbose_x=yes;;
         -ls) do_ls=yes;;
   
         -all) run_all=yes;;
 -expat_debug) run_expat_debug=yes;;
      -py_exe) run_show_py_exe=yes;;
    
   -stdout)   OSC_ARGS="${OSC_ARGS} -stdout";;
   -verbose)  OSC_ARGS="${OSC_ARGS} -verbose";;
	
          -*) build_args="${build_args} $1";;  
           *) run_what=$1;;  
  esac
  shift
done

if [ ${verbose_x} = yes ] ; then set -x;fi

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
inlib_mgr=../../../inexlib/inlib/mgr
ourex_mgr=../../../inexlib/ourex/mgr

. ${ourex_mgr}/build_header

save_dir=`pwd`

#//////////////////////////////////////////
#//////////////////////////////////////////
#//////////////////////////////////////////

cd ${build_path}/distrib/osc_vis/${version}
./install
. ./setup.sh

. ./py-setup.sh

. ./Python-setup.sh

. ./Qt-setup.sh

#////////////////////////////////////
#/// run : //////////////////////////
#////////////////////////////////////
if [ ${run_show_py_exe} = yes ] ; then
  if [ "${Python_exe}" = "" ] ; then
    echo "Python_exe not set."
  else
    echo "${Python_exe}"
  fi
  exit
fi

export OSC_ARGS

if [ "${run_gui}" != "" ] ; then
  OSC_GUI_TOOLKIT=${run_gui}
  export OSC_GUI_TOOLKIT
  #if [ "${run_gui}" = "Gtk" ] ; then
  #  LC_CTYPE=C;export LC_CTYPE
  #fi
fi

if [ "${run_what}" = "" ] ; then run_what=Resources/AIDA/examples/Python/aida_0.py; fi

what_dir="`dirname ${run_what}`"
what_name="`basename ${run_what}`"
cd ./${what_dir}

if [ ${do_ls} = yes ] ; then
  pwd
  ls
  exit
fi

if [ ${run_expat_debug} = yes ] ; then
  export LD_LIBRARY_PATH=".:${LD_LIBRARY_PATH}"
  cp /lib64/libexpat.so.1 .
fi

options=
#options=-i

if [ ${run_gdb} = yes ] ; then
  echo "gdb> r ${options} ${what_name}"
  if [ `uname` = Darwin ] ; then
    lldb ${Python_exe}
  else
    gdb ${Python_exe}
  fi	
elif [ ${run_all} = yes ] ; then
  find . -name '*.py' -print > ./tmp_0
  for item in $(cat ./tmp_0) ; do
    echo "do ${item} ..."
    ${Python_exe} ${options} ${item}
  done
  /bin/rm -f ./tmp_0
else    
  ${Python_exe} ${options} ${what_name}
fi

cd ${OSC_HOME_DIR}

cd ${save_dir}
