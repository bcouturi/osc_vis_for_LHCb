#!/bin/sh -f

build_args=
while test $# -ge 1 ; do build_args="${build_args} $1";shift; done

inlib_mgr=../../../inexlib/inlib/mgr
exlib_mgr=../../../inexlib/exlib/mgr
ourex_mgr=../../../inexlib/ourex/mgr

. ${ourex_mgr}/build_header

plugin=OnXLab

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
if [ ${build_compile} = "yes" ] ; then

cppflags="${cppflags} -I${inlib_mgr}/.."
cppflags="${cppflags} -I${exlib_mgr}/.."

cppflags="${cppflags} -I../../AIDA/v3r2p1"
cppflags="${cppflags} -I../../Slash"
cppflags="${cppflags} -I../../amanip/src/cpp"

cppflags="${cppflags} -I.."
cppflags="${cppflags} -I../../BatchLab"
cppflags="${cppflags} -I../../Lib/include"
cppflags="${cppflags} -I../../Minuit"

cxxfiles=
cxxfiles="${cxxfiles} ../source/Callbacks/Deprecated.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/SessionCallbacks.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/TupleAction.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/HistogramAction.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/Accessors.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/Callbacks.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/TupleExplorer.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/CloudExplorer.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/FitterCallbacks.cxx"
cxxfiles="${cxxfiles} ../source/Callbacks/Plotter.cxx"

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
libs="${libs} -L../../BatchLab/mgr/${build_dir} -lBatchLabAIDA"
libs="${libs} -L../../Minuit/mgr/${build_dir} -losc_Minuit"
libs="${libs} -L../../Lib/mgr/${build_dir} -lLibUtils"

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
use_HEPVis=yes
use_CoinGL=yes
use_GL=yes
use_expat=yes
use_png=yes
use_jpeg=yes
use_freetype=yes
use_zlib=yes

. ${exlib_mgr}/use_HEPVis
. ${exlib_mgr}/use_CoinGL
. ${exlib_mgr}/use_GL
. ${exlib_mgr}/use_expat
. ${exlib_mgr}/use_png
. ${exlib_mgr}/use_jpeg
. ${exlib_mgr}/use_freetype
. ${exlib_mgr}/use_zlib

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////

. ${inlib_mgr}/build_compile

fi # end build_compile
 
if [ ${build_plugin} = "yes" ] ; then . ${inlib_mgr}/build_plugin; fi

. ${inlib_mgr}/build_clean
