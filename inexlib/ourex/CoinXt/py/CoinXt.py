# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.

import CoinXt_SWIG_Python
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class charp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_charp(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_charp
    __del__ = lambda self : None;
    def assign(*args): return CoinXt_SWIG_Python.charp_assign(*args)
    def value(*args): return CoinXt_SWIG_Python.charp_value(*args)
    def cast(*args): return CoinXt_SWIG_Python.charp_cast(*args)
    frompointer = staticmethod(CoinXt_SWIG_Python.charp_frompointer)
charp_swigregister = CoinXt_SWIG_Python.charp_swigregister
charp_swigregister(charp)
cast = CoinXt_SWIG_Python.cast
charp_frompointer = CoinXt_SWIG_Python.charp_frompointer

class intp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_intp(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_intp
    __del__ = lambda self : None;
    def assign(*args): return CoinXt_SWIG_Python.intp_assign(*args)
    def value(*args): return CoinXt_SWIG_Python.intp_value(*args)
    def cast(*args): return CoinXt_SWIG_Python.intp_cast(*args)
    frompointer = staticmethod(CoinXt_SWIG_Python.intp_frompointer)
intp_swigregister = CoinXt_SWIG_Python.intp_swigregister
intp_swigregister(intp)
intp_frompointer = CoinXt_SWIG_Python.intp_frompointer

class longp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_longp(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_longp
    __del__ = lambda self : None;
    def assign(*args): return CoinXt_SWIG_Python.longp_assign(*args)
    def value(*args): return CoinXt_SWIG_Python.longp_value(*args)
    def cast(*args): return CoinXt_SWIG_Python.longp_cast(*args)
    frompointer = staticmethod(CoinXt_SWIG_Python.longp_frompointer)
longp_swigregister = CoinXt_SWIG_Python.longp_swigregister
longp_swigregister(longp)
longp_frompointer = CoinXt_SWIG_Python.longp_frompointer

class floatp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_floatp(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_floatp
    __del__ = lambda self : None;
    def assign(*args): return CoinXt_SWIG_Python.floatp_assign(*args)
    def value(*args): return CoinXt_SWIG_Python.floatp_value(*args)
    def cast(*args): return CoinXt_SWIG_Python.floatp_cast(*args)
    frompointer = staticmethod(CoinXt_SWIG_Python.floatp_frompointer)
floatp_swigregister = CoinXt_SWIG_Python.floatp_swigregister
floatp_swigregister(floatp)
floatp_frompointer = CoinXt_SWIG_Python.floatp_frompointer

class doublep(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_doublep(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_doublep
    __del__ = lambda self : None;
    def assign(*args): return CoinXt_SWIG_Python.doublep_assign(*args)
    def value(*args): return CoinXt_SWIG_Python.doublep_value(*args)
    def cast(*args): return CoinXt_SWIG_Python.doublep_cast(*args)
    frompointer = staticmethod(CoinXt_SWIG_Python.doublep_frompointer)
doublep_swigregister = CoinXt_SWIG_Python.doublep_swigregister
doublep_swigregister(doublep)
doublep_frompointer = CoinXt_SWIG_Python.doublep_frompointer

FALSE = CoinXt_SWIG_Python.FALSE
TRUE = CoinXt_SWIG_Python.TRUE
HAVE_INTTYPES_H = CoinXt_SWIG_Python.HAVE_INTTYPES_H
HAVE_STDINT_H = CoinXt_SWIG_Python.HAVE_STDINT_H
HAVE_SYS_TYPES_H = CoinXt_SWIG_Python.HAVE_SYS_TYPES_H
HAVE_STDDEF_H = CoinXt_SWIG_Python.HAVE_STDDEF_H
HAVE_INT8_T = CoinXt_SWIG_Python.HAVE_INT8_T
HAVE_UINT8_T = CoinXt_SWIG_Python.HAVE_UINT8_T
HAVE_INT16_T = CoinXt_SWIG_Python.HAVE_INT16_T
HAVE_UINT16_T = CoinXt_SWIG_Python.HAVE_UINT16_T
HAVE_INT32_T = CoinXt_SWIG_Python.HAVE_INT32_T
HAVE_UINT32_T = CoinXt_SWIG_Python.HAVE_UINT32_T
HAVE_INT64_T = CoinXt_SWIG_Python.HAVE_INT64_T
HAVE_UINT64_T = CoinXt_SWIG_Python.HAVE_UINT64_T
HAVE_INTPTR_T = CoinXt_SWIG_Python.HAVE_INTPTR_T
HAVE_UINTPTR_T = CoinXt_SWIG_Python.HAVE_UINTPTR_T
M_E = CoinXt_SWIG_Python.M_E
M_LOG2E = CoinXt_SWIG_Python.M_LOG2E
M_LOG10E = CoinXt_SWIG_Python.M_LOG10E
M_LN2 = CoinXt_SWIG_Python.M_LN2
M_LN10 = CoinXt_SWIG_Python.M_LN10
M_PI = CoinXt_SWIG_Python.M_PI
M_TWOPI = CoinXt_SWIG_Python.M_TWOPI
M_PI_2 = CoinXt_SWIG_Python.M_PI_2
M_PI_4 = CoinXt_SWIG_Python.M_PI_4
M_3PI_4 = CoinXt_SWIG_Python.M_3PI_4
M_SQRTPI = CoinXt_SWIG_Python.M_SQRTPI
M_1_PI = CoinXt_SWIG_Python.M_1_PI
M_2_PI = CoinXt_SWIG_Python.M_2_PI
M_2_SQRTPI = CoinXt_SWIG_Python.M_2_SQRTPI
M_SQRT2 = CoinXt_SWIG_Python.M_SQRT2
M_SQRT1_2 = CoinXt_SWIG_Python.M_SQRT1_2
M_LN2LO = CoinXt_SWIG_Python.M_LN2LO
M_LN2HI = CoinXt_SWIG_Python.M_LN2HI
M_SQRT3 = CoinXt_SWIG_Python.M_SQRT3
M_IVLN10 = CoinXt_SWIG_Python.M_IVLN10
M_LOG2_E = CoinXt_SWIG_Python.M_LOG2_E
M_INVLN2 = CoinXt_SWIG_Python.M_INVLN2
COIN_MAJOR_VERSION = CoinXt_SWIG_Python.COIN_MAJOR_VERSION
COIN_MINOR_VERSION = CoinXt_SWIG_Python.COIN_MINOR_VERSION
COIN_MICRO_VERSION = CoinXt_SWIG_Python.COIN_MICRO_VERSION
COIN_VERSION = CoinXt_SWIG_Python.COIN_VERSION
HAVE_HASH_QUOTING = CoinXt_SWIG_Python.HAVE_HASH_QUOTING
SUN_CC_4_0_SOTYPE_INIT_BUG = CoinXt_SWIG_Python.SUN_CC_4_0_SOTYPE_INIT_BUG
class SbDict(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbDict(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbDict
    __del__ = lambda self : None;
    def applyToAll(*args): return CoinXt_SWIG_Python.SbDict_applyToAll(*args)
    def clear(*args): return CoinXt_SWIG_Python.SbDict_clear(*args)
    def enter(*args): return CoinXt_SWIG_Python.SbDict_enter(*args)
    def find(*args): return CoinXt_SWIG_Python.SbDict_find(*args)
    def makePList(*args): return CoinXt_SWIG_Python.SbDict_makePList(*args)
    def remove(*args): return CoinXt_SWIG_Python.SbDict_remove(*args)
    def setHashingFunction(*args): return CoinXt_SWIG_Python.SbDict_setHashingFunction(*args)
SbDict_swigregister = CoinXt_SWIG_Python.SbDict_swigregister
SbDict_swigregister(SbDict)

class SoType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fromName = staticmethod(CoinXt_SWIG_Python.SoType_fromName)
    def getName(*args): return CoinXt_SWIG_Python.SoType_getName(*args)
    def getParent(*args): return CoinXt_SWIG_Python.SoType_getParent(*args)
    def isDerivedFrom(*args): return CoinXt_SWIG_Python.SoType_isDerivedFrom(*args)
    getAllDerivedFrom = staticmethod(CoinXt_SWIG_Python.SoType_getAllDerivedFrom)
    def canCreateInstance(*args): return CoinXt_SWIG_Python.SoType_canCreateInstance(*args)
    def getData(*args): return CoinXt_SWIG_Python.SoType_getData(*args)
    def getKey(*args): return CoinXt_SWIG_Python.SoType_getKey(*args)
    def __eq__(*args): return CoinXt_SWIG_Python.SoType___eq__(*args)
    def __ne__(*args): return CoinXt_SWIG_Python.SoType___ne__(*args)
    def __lt__(*args): return CoinXt_SWIG_Python.SoType___lt__(*args)
    def __le__(*args): return CoinXt_SWIG_Python.SoType___le__(*args)
    def __ge__(*args): return CoinXt_SWIG_Python.SoType___ge__(*args)
    def __gt__(*args): return CoinXt_SWIG_Python.SoType___gt__(*args)
    init = staticmethod(CoinXt_SWIG_Python.SoType_init)
    fromKey = staticmethod(CoinXt_SWIG_Python.SoType_fromKey)
    badType = staticmethod(CoinXt_SWIG_Python.SoType_badType)
    def isBad(*args): return CoinXt_SWIG_Python.SoType_isBad(*args)
    def makeInternal(*args): return CoinXt_SWIG_Python.SoType_makeInternal(*args)
    def isInternal(*args): return CoinXt_SWIG_Python.SoType_isInternal(*args)
    getNumTypes = staticmethod(CoinXt_SWIG_Python.SoType_getNumTypes)
    def getInstantiationMethod(*args): return CoinXt_SWIG_Python.SoType_getInstantiationMethod(*args)
    def createInstance(*args): return CoinXt_SWIG_Python.SoType_createInstance(*args)
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoType(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoType
    __del__ = lambda self : None;
SoType_swigregister = CoinXt_SWIG_Python.SoType_swigregister
SoType_swigregister(SoType)
SoType_fromName = CoinXt_SWIG_Python.SoType_fromName
SoType_getAllDerivedFrom = CoinXt_SWIG_Python.SoType_getAllDerivedFrom
SoType_init = CoinXt_SWIG_Python.SoType_init
SoType_fromKey = CoinXt_SWIG_Python.SoType_fromKey
SoType_badType = CoinXt_SWIG_Python.SoType_badType
SoType_getNumTypes = CoinXt_SWIG_Python.SoType_getNumTypes

class SbVec2s(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbVec2s(*args)
        try: self.this.append(this)
        except: self.this = this
    def dot(*args): return CoinXt_SWIG_Python.SbVec2s_dot(*args)
    def getValue(*args): return CoinXt_SWIG_Python.SbVec2s_getValue(*args)
    def negate(*args): return CoinXt_SWIG_Python.SbVec2s_negate(*args)
    def setValue(*args): return CoinXt_SWIG_Python.SbVec2s_setValue(*args)
    def __imul__(*args): return CoinXt_SWIG_Python.SbVec2s___imul__(*args)
    def __idiv__(*args): return CoinXt_SWIG_Python.SbVec2s___idiv__(*args)
    def __iadd__(*args): return CoinXt_SWIG_Python.SbVec2s___iadd__(*args)
    def __isub__(*args): return CoinXt_SWIG_Python.SbVec2s___isub__(*args)
    def __neg__(*args): return CoinXt_SWIG_Python.SbVec2s___neg__(*args)
    def output(*args): return CoinXt_SWIG_Python.SbVec2s_output(*args)
    def __add__(*args): return CoinXt_SWIG_Python.SbVec2s___add__(*args)
    def __sub__(*args): return CoinXt_SWIG_Python.SbVec2s___sub__(*args)
    def __mul__(*args): return CoinXt_SWIG_Python.SbVec2s___mul__(*args)
    def __rmul__(*args): return CoinXt_SWIG_Python.SbVec2s___rmul__(*args)
    def __div__(*args): return CoinXt_SWIG_Python.SbVec2s___div__(*args)
    def __eq__(*args): return CoinXt_SWIG_Python.SbVec2s___eq__(*args)
    def __nq__(*args): return CoinXt_SWIG_Python.SbVec2s___nq__(*args)
    def __getitem__(*args): return CoinXt_SWIG_Python.SbVec2s___getitem__(*args)
    def __setitem__(*args): return CoinXt_SWIG_Python.SbVec2s___setitem__(*args)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbVec2s
    __del__ = lambda self : None;
SbVec2s_swigregister = CoinXt_SWIG_Python.SbVec2s_swigregister
SbVec2s_swigregister(SbVec2s)

class SbPList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbPList(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbPList
    __del__ = lambda self : None;
    def copy(*args): return CoinXt_SWIG_Python.SbPList_copy(*args)
    def fit(*args): return CoinXt_SWIG_Python.SbPList_fit(*args)
    def append(*args): return CoinXt_SWIG_Python.SbPList_append(*args)
    def find(*args): return CoinXt_SWIG_Python.SbPList_find(*args)
    def insert(*args): return CoinXt_SWIG_Python.SbPList_insert(*args)
    def removeItem(*args): return CoinXt_SWIG_Python.SbPList_removeItem(*args)
    def remove(*args): return CoinXt_SWIG_Python.SbPList_remove(*args)
    def removeFast(*args): return CoinXt_SWIG_Python.SbPList_removeFast(*args)
    def getLength(*args): return CoinXt_SWIG_Python.SbPList_getLength(*args)
    def truncate(*args): return CoinXt_SWIG_Python.SbPList_truncate(*args)
    def getArrayPtr(*args): return CoinXt_SWIG_Python.SbPList_getArrayPtr(*args)
    def __eq__(*args): return CoinXt_SWIG_Python.SbPList___eq__(*args)
    def __ne__(*args): return CoinXt_SWIG_Python.SbPList___ne__(*args)
    def get(*args): return CoinXt_SWIG_Python.SbPList_get(*args)
    def set(*args): return CoinXt_SWIG_Python.SbPList_set(*args)
    def __getitem__(*args): return CoinXt_SWIG_Python.SbPList___getitem__(*args)
    def __setitem__(*args): return CoinXt_SWIG_Python.SbPList___setitem__(*args)
    def __iter__(self):
       for i in range(self.getLength()):
          yield self[i]

SbPList_swigregister = CoinXt_SWIG_Python.SbPList_swigregister
SbPList_swigregister(SbPList)

class SbIntList(SbPList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbIntList(*args)
        try: self.this.append(this)
        except: self.this = this
    def append(*args): return CoinXt_SWIG_Python.SbIntList_append(*args)
    def find(*args): return CoinXt_SWIG_Python.SbIntList_find(*args)
    def insert(*args): return CoinXt_SWIG_Python.SbIntList_insert(*args)
    def __setitem__(*args): return CoinXt_SWIG_Python.SbIntList___setitem__(*args)
    def __getitem__(*args): return CoinXt_SWIG_Python.SbIntList___getitem__(*args)
    def get(*args): return CoinXt_SWIG_Python.SbIntList_get(*args)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbIntList
    __del__ = lambda self : None;
SbIntList_swigregister = CoinXt_SWIG_Python.SbIntList_swigregister
SbIntList_swigregister(SbIntList)

class SbString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbString(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbString
    __del__ = lambda self : None;
    hash = staticmethod(CoinXt_SWIG_Python.SbString_hash)
    def getLength(*args): return CoinXt_SWIG_Python.SbString_getLength(*args)
    def makeEmpty(*args): return CoinXt_SWIG_Python.SbString_makeEmpty(*args)
    def getString(*args): return CoinXt_SWIG_Python.SbString_getString(*args)
    def getSubString(*args): return CoinXt_SWIG_Python.SbString_getSubString(*args)
    def deleteSubString(*args): return CoinXt_SWIG_Python.SbString_deleteSubString(*args)
    def addIntString(*args): return CoinXt_SWIG_Python.SbString_addIntString(*args)
    def __iadd__(*args): return CoinXt_SWIG_Python.SbString___iadd__(*args)
    def compareSubString(*args): return CoinXt_SWIG_Python.SbString_compareSubString(*args)
    def sprintf(*args): return CoinXt_SWIG_Python.SbString_sprintf(*args)
    def apply(*args): return CoinXt_SWIG_Python.SbString_apply(*args)
    def find(*args): return CoinXt_SWIG_Python.SbString_find(*args)
    def findAll(*args): return CoinXt_SWIG_Python.SbString_findAll(*args)
    def __eq__(*args): return CoinXt_SWIG_Python.SbString___eq__(*args)
    def __nq__(*args): return CoinXt_SWIG_Python.SbString___nq__(*args)
    def __getitem__(*args): return CoinXt_SWIG_Python.SbString___getitem__(*args)
    def __iter__(self):
      return getString().__iter__()

    def __repr__(*args): return CoinXt_SWIG_Python.SbString___repr__(*args)
SbString_swigregister = CoinXt_SWIG_Python.SbString_swigregister
SbString_swigregister(SbString)
SbString_hash = CoinXt_SWIG_Python.SbString_hash

class SbName(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbName(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbName
    __del__ = lambda self : None;
    def getString(*args): return CoinXt_SWIG_Python.SbName_getString(*args)
    def getLength(*args): return CoinXt_SWIG_Python.SbName_getLength(*args)
    isIdentStartChar = staticmethod(CoinXt_SWIG_Python.SbName_isIdentStartChar)
    isIdentChar = staticmethod(CoinXt_SWIG_Python.SbName_isIdentChar)
    isBaseNameStartChar = staticmethod(CoinXt_SWIG_Python.SbName_isBaseNameStartChar)
    isBaseNameChar = staticmethod(CoinXt_SWIG_Python.SbName_isBaseNameChar)
    def __eq__(*args): return CoinXt_SWIG_Python.SbName___eq__(*args)
    def __nq__(*args): return CoinXt_SWIG_Python.SbName___nq__(*args)
    def __getitem__(*args): return CoinXt_SWIG_Python.SbName___getitem__(*args)
    def __iter__(self):
      return getString().__iter__()

    def __repr__(*args): return CoinXt_SWIG_Python.SbName___repr__(*args)
SbName_swigregister = CoinXt_SWIG_Python.SbName_swigregister
SbName_swigregister(SbName)
SbName_isIdentStartChar = CoinXt_SWIG_Python.SbName_isIdentStartChar
SbName_isIdentChar = CoinXt_SWIG_Python.SbName_isIdentChar
SbName_isBaseNameStartChar = CoinXt_SWIG_Python.SbName_isBaseNameStartChar
SbName_isBaseNameChar = CoinXt_SWIG_Python.SbName_isBaseNameChar

class SbTime(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SbTime(*args)
        try: self.this.append(this)
        except: self.this = this
    getTimeOfDay = staticmethod(CoinXt_SWIG_Python.SbTime_getTimeOfDay)
    def setToTimeOfDay(*args): return CoinXt_SWIG_Python.SbTime_setToTimeOfDay(*args)
    zero = staticmethod(CoinXt_SWIG_Python.SbTime_zero)
    max = staticmethod(CoinXt_SWIG_Python.SbTime_max)
    maxTime = staticmethod(CoinXt_SWIG_Python.SbTime_maxTime)
    def setValue(*args): return CoinXt_SWIG_Python.SbTime_setValue(*args)
    def setMsecValue(*args): return CoinXt_SWIG_Python.SbTime_setMsecValue(*args)
    def getValue(*args): return CoinXt_SWIG_Python.SbTime_getValue(*args)
    def getMsecValue(*args): return CoinXt_SWIG_Python.SbTime_getMsecValue(*args)
    def format(*args): return CoinXt_SWIG_Python.SbTime_format(*args)
    def formatDate(*args): return CoinXt_SWIG_Python.SbTime_formatDate(*args)
    def parsedate(*args): return CoinXt_SWIG_Python.SbTime_parsedate(*args)
    def __iadd__(*args): return CoinXt_SWIG_Python.SbTime___iadd__(*args)
    def __isub__(*args): return CoinXt_SWIG_Python.SbTime___isub__(*args)
    def __neg__(*args): return CoinXt_SWIG_Python.SbTime___neg__(*args)
    def __imul__(*args): return CoinXt_SWIG_Python.SbTime___imul__(*args)
    def __idiv__(*args): return CoinXt_SWIG_Python.SbTime___idiv__(*args)
    def __mod__(*args): return CoinXt_SWIG_Python.SbTime___mod__(*args)
    def __eq__(*args): return CoinXt_SWIG_Python.SbTime___eq__(*args)
    def __ne__(*args): return CoinXt_SWIG_Python.SbTime___ne__(*args)
    def __lt__(*args): return CoinXt_SWIG_Python.SbTime___lt__(*args)
    def __gt__(*args): return CoinXt_SWIG_Python.SbTime___gt__(*args)
    def __le__(*args): return CoinXt_SWIG_Python.SbTime___le__(*args)
    def __ge__(*args): return CoinXt_SWIG_Python.SbTime___ge__(*args)
    def output(*args): return CoinXt_SWIG_Python.SbTime_output(*args)
    def __add__(*args): return CoinXt_SWIG_Python.SbTime___add__(*args)
    def __sub__(*args): return CoinXt_SWIG_Python.SbTime___sub__(*args)
    def __mul__(*args): return CoinXt_SWIG_Python.SbTime___mul__(*args)
    def __rmul__(*args): return CoinXt_SWIG_Python.SbTime___rmul__(*args)
    def __div__(*args): return CoinXt_SWIG_Python.SbTime___div__(*args)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SbTime
    __del__ = lambda self : None;
SbTime_swigregister = CoinXt_SWIG_Python.SbTime_swigregister
SbTime_swigregister(SbTime)
SbTime_getTimeOfDay = CoinXt_SWIG_Python.SbTime_getTimeOfDay
SbTime_zero = CoinXt_SWIG_Python.SbTime_zero
SbTime_max = CoinXt_SWIG_Python.SbTime_max
SbTime_maxTime = CoinXt_SWIG_Python.SbTime_maxTime

class SoEvent(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoEvent(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoEvent
    __del__ = lambda self : None;
    def isOfType(*args): return CoinXt_SWIG_Python.SoEvent_isOfType(*args)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoEvent_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoEvent_getTypeId(*args)
    def setTime(*args): return CoinXt_SWIG_Python.SoEvent_setTime(*args)
    def getTime(*args): return CoinXt_SWIG_Python.SoEvent_getTime(*args)
    def setPosition(*args): return CoinXt_SWIG_Python.SoEvent_setPosition(*args)
    def getPosition(*args): return CoinXt_SWIG_Python.SoEvent_getPosition(*args)
    def getNormalizedPosition(*args): return CoinXt_SWIG_Python.SoEvent_getNormalizedPosition(*args)
    def setShiftDown(*args): return CoinXt_SWIG_Python.SoEvent_setShiftDown(*args)
    def wasShiftDown(*args): return CoinXt_SWIG_Python.SoEvent_wasShiftDown(*args)
    def setCtrlDown(*args): return CoinXt_SWIG_Python.SoEvent_setCtrlDown(*args)
    def wasCtrlDown(*args): return CoinXt_SWIG_Python.SoEvent_wasCtrlDown(*args)
    def setAltDown(*args): return CoinXt_SWIG_Python.SoEvent_setAltDown(*args)
    def wasAltDown(*args): return CoinXt_SWIG_Python.SoEvent_wasAltDown(*args)
    initClass = staticmethod(CoinXt_SWIG_Python.SoEvent_initClass)
SoEvent_swigregister = CoinXt_SWIG_Python.SoEvent_swigregister
SoEvent_swigregister(SoEvent)
SoEvent_getClassTypeId = CoinXt_SWIG_Python.SoEvent_getClassTypeId
SoEvent_initClass = CoinXt_SWIG_Python.SoEvent_initClass

class SoNotRec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    CONTAINER = CoinXt_SWIG_Python.SoNotRec_CONTAINER
    PARENT = CoinXt_SWIG_Python.SoNotRec_PARENT
    SENSOR = CoinXt_SWIG_Python.SoNotRec_SENSOR
    FIELD = CoinXt_SWIG_Python.SoNotRec_FIELD
    ENGINE = CoinXt_SWIG_Python.SoNotRec_ENGINE
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoNotRec(*args)
        try: self.this.append(this)
        except: self.this = this
    def setType(*args): return CoinXt_SWIG_Python.SoNotRec_setType(*args)
    def getBase(*args): return CoinXt_SWIG_Python.SoNotRec_getBase(*args)
    def getType(*args): return CoinXt_SWIG_Python.SoNotRec_getType(*args)
    def getPrevious(*args): return CoinXt_SWIG_Python.SoNotRec_getPrevious(*args)
    def setPrevious(*args): return CoinXt_SWIG_Python.SoNotRec_setPrevious(*args)
    def output(*args): return CoinXt_SWIG_Python.SoNotRec_output(*args)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoNotRec
    __del__ = lambda self : None;
SoNotRec_swigregister = CoinXt_SWIG_Python.SoNotRec_swigregister
SoNotRec_swigregister(SoNotRec)

class SoNotList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoNotList(*args)
        try: self.this.append(this)
        except: self.this = this
    def append(*args): return CoinXt_SWIG_Python.SoNotList_append(*args)
    def setLastType(*args): return CoinXt_SWIG_Python.SoNotList_setLastType(*args)
    def getFirstRec(*args): return CoinXt_SWIG_Python.SoNotList_getFirstRec(*args)
    def getLastRec(*args): return CoinXt_SWIG_Python.SoNotList_getLastRec(*args)
    def getFirstRecAtNode(*args): return CoinXt_SWIG_Python.SoNotList_getFirstRecAtNode(*args)
    def getLastField(*args): return CoinXt_SWIG_Python.SoNotList_getLastField(*args)
    def getLastEngineOutput(*args): return CoinXt_SWIG_Python.SoNotList_getLastEngineOutput(*args)
    def getTimeStamp(*args): return CoinXt_SWIG_Python.SoNotList_getTimeStamp(*args)
    def output(*args): return CoinXt_SWIG_Python.SoNotList_output(*args)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoNotList
    __del__ = lambda self : None;
SoNotList_swigregister = CoinXt_SWIG_Python.SoNotList_swigregister
SoNotList_swigregister(SoNotList)

class SoField(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoField
    __del__ = lambda self : None;
    initClass = staticmethod(CoinXt_SWIG_Python.SoField_initClass)
    initClasses = staticmethod(CoinXt_SWIG_Python.SoField_initClasses)
    def setIgnored(*args): return CoinXt_SWIG_Python.SoField_setIgnored(*args)
    def isIgnored(*args): return CoinXt_SWIG_Python.SoField_isIgnored(*args)
    def setDefault(*args): return CoinXt_SWIG_Python.SoField_setDefault(*args)
    def isDefault(*args): return CoinXt_SWIG_Python.SoField_isDefault(*args)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoField_getTypeId(*args)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoField_getClassTypeId)
    def isOfType(*args): return CoinXt_SWIG_Python.SoField_isOfType(*args)
    def enableConnection(*args): return CoinXt_SWIG_Python.SoField_enableConnection(*args)
    def isConnectionEnabled(*args): return CoinXt_SWIG_Python.SoField_isConnectionEnabled(*args)
    def isConnectedFromEngine(*args): return CoinXt_SWIG_Python.SoField_isConnectedFromEngine(*args)
    def getConnectedEngine(*args): return CoinXt_SWIG_Python.SoField_getConnectedEngine(*args)
    def connectFrom(*args): return CoinXt_SWIG_Python.SoField_connectFrom(*args)
    def appendConnection(*args): return CoinXt_SWIG_Python.SoField_appendConnection(*args)
    def isConnectedFromField(*args): return CoinXt_SWIG_Python.SoField_isConnectedFromField(*args)
    def getConnectedField(*args): return CoinXt_SWIG_Python.SoField_getConnectedField(*args)
    def getNumConnections(*args): return CoinXt_SWIG_Python.SoField_getNumConnections(*args)
    def getForwardConnections(*args): return CoinXt_SWIG_Python.SoField_getForwardConnections(*args)
    def getConnections(*args): return CoinXt_SWIG_Python.SoField_getConnections(*args)
    def disconnect(*args): return CoinXt_SWIG_Python.SoField_disconnect(*args)
    def isConnected(*args): return CoinXt_SWIG_Python.SoField_isConnected(*args)
    def setContainer(*args): return CoinXt_SWIG_Python.SoField_setContainer(*args)
    def getContainer(*args): return CoinXt_SWIG_Python.SoField_getContainer(*args)
    def set(*args): return CoinXt_SWIG_Python.SoField_set(*args)
    def shouldWrite(*args): return CoinXt_SWIG_Python.SoField_shouldWrite(*args)
    def touch(*args): return CoinXt_SWIG_Python.SoField_touch(*args)
    def startNotify(*args): return CoinXt_SWIG_Python.SoField_startNotify(*args)
    def notify(*args): return CoinXt_SWIG_Python.SoField_notify(*args)
    def enableNotify(*args): return CoinXt_SWIG_Python.SoField_enableNotify(*args)
    def isNotifyEnabled(*args): return CoinXt_SWIG_Python.SoField_isNotifyEnabled(*args)
    def addAuditor(*args): return CoinXt_SWIG_Python.SoField_addAuditor(*args)
    def removeAuditor(*args): return CoinXt_SWIG_Python.SoField_removeAuditor(*args)
    def __eq__(*args): return CoinXt_SWIG_Python.SoField___eq__(*args)
    def __ne__(*args): return CoinXt_SWIG_Python.SoField___ne__(*args)
    def connectionStatusChanged(*args): return CoinXt_SWIG_Python.SoField_connectionStatusChanged(*args)
    def isReadOnly(*args): return CoinXt_SWIG_Python.SoField_isReadOnly(*args)
    def isSame(*args): return CoinXt_SWIG_Python.SoField_isSame(*args)
    def copyFrom(*args): return CoinXt_SWIG_Python.SoField_copyFrom(*args)
    def fixCopy(*args): return CoinXt_SWIG_Python.SoField_fixCopy(*args)
    def referencesCopy(*args): return CoinXt_SWIG_Python.SoField_referencesCopy(*args)
    def copyConnection(*args): return CoinXt_SWIG_Python.SoField_copyConnection(*args)
    def read(*args): return CoinXt_SWIG_Python.SoField_read(*args)
    def write(*args): return CoinXt_SWIG_Python.SoField_write(*args)
    def countWriteRefs(*args): return CoinXt_SWIG_Python.SoField_countWriteRefs(*args)
    NORMAL_FIELD = CoinXt_SWIG_Python.SoField_NORMAL_FIELD
    EVENTIN_FIELD = CoinXt_SWIG_Python.SoField_EVENTIN_FIELD
    EVENTOUT_FIELD = CoinXt_SWIG_Python.SoField_EVENTOUT_FIELD
    EXPOSED_FIELD = CoinXt_SWIG_Python.SoField_EXPOSED_FIELD
    def setFieldType(*args): return CoinXt_SWIG_Python.SoField_setFieldType(*args)
    def getFieldType(*args): return CoinXt_SWIG_Python.SoField_getFieldType(*args)
    def getDirty(*args): return CoinXt_SWIG_Python.SoField_getDirty(*args)
    def setDirty(*args): return CoinXt_SWIG_Python.SoField_setDirty(*args)
    def evaluate(*args): return CoinXt_SWIG_Python.SoField_evaluate(*args)
    def get(*args): return CoinXt_SWIG_Python.SoField_get(*args)
SoField_swigregister = CoinXt_SWIG_Python.SoField_swigregister
SoField_swigregister(SoField)
SoField_initClass = CoinXt_SWIG_Python.SoField_initClass
SoField_initClasses = CoinXt_SWIG_Python.SoField_initClasses
SoField_getClassTypeId = CoinXt_SWIG_Python.SoField_getClassTypeId

class SoSField(SoField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoSField
    __del__ = lambda self : None;
    initClass = staticmethod(CoinXt_SWIG_Python.SoSField_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoSField_getClassTypeId)
SoSField_swigregister = CoinXt_SWIG_Python.SoSField_swigregister
SoSField_swigregister(SoSField)
SoSField_initClass = CoinXt_SWIG_Python.SoSField_initClass
SoSField_getClassTypeId = CoinXt_SWIG_Python.SoSField_getClassTypeId

class SoMField(SoField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoMField
    __del__ = lambda self : None;
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoMField_getClassTypeId)
    def getNum(*args): return CoinXt_SWIG_Python.SoMField_getNum(*args)
    def setNum(*args): return CoinXt_SWIG_Python.SoMField_setNum(*args)
    def deleteValues(*args): return CoinXt_SWIG_Python.SoMField_deleteValues(*args)
    def insertSpace(*args): return CoinXt_SWIG_Python.SoMField_insertSpace(*args)
    def set1(*args): return CoinXt_SWIG_Python.SoMField_set1(*args)
    def get1(*args): return CoinXt_SWIG_Python.SoMField_get1(*args)
    initClass = staticmethod(CoinXt_SWIG_Python.SoMField_initClass)
    def enableDeleteValues(*args): return CoinXt_SWIG_Python.SoMField_enableDeleteValues(*args)
    def isDeleteValuesEnabled(*args): return CoinXt_SWIG_Python.SoMField_isDeleteValuesEnabled(*args)
    def __iter__(self):
       i = 0
       while i < self.getNum():
          yield self[i]
          i += 1

    def __len__(*args): return CoinXt_SWIG_Python.SoMField___len__(*args)
SoMField_swigregister = CoinXt_SWIG_Python.SoMField_swigregister
SoMField_swigregister(SoMField)
SoMField_getClassTypeId = CoinXt_SWIG_Python.SoMField_getClassTypeId
SoMField_initClass = CoinXt_SWIG_Python.SoMField_initClass

SOXT_MAJOR_VERSION = CoinXt_SWIG_Python.SOXT_MAJOR_VERSION
SOXT_MINOR_VERSION = CoinXt_SWIG_Python.SOXT_MINOR_VERSION
SOXT_MICRO_VERSION = CoinXt_SWIG_Python.SOXT_MICRO_VERSION
SOXT_VERSION = CoinXt_SWIG_Python.SOXT_VERSION
class SoXt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    init = staticmethod(CoinXt_SWIG_Python.SoXt_init)
    mainLoop = staticmethod(CoinXt_SWIG_Python.SoXt_mainLoop)
    exitMainLoop = staticmethod(CoinXt_SWIG_Python.SoXt_exitMainLoop)
    done = staticmethod(CoinXt_SWIG_Python.SoXt_done)
    getTopLevelWidget = staticmethod(CoinXt_SWIG_Python.SoXt_getTopLevelWidget)
    getShellWidget = staticmethod(CoinXt_SWIG_Python.SoXt_getShellWidget)
    show = staticmethod(CoinXt_SWIG_Python.SoXt_show)
    hide = staticmethod(CoinXt_SWIG_Python.SoXt_hide)
    setWidgetSize = staticmethod(CoinXt_SWIG_Python.SoXt_setWidgetSize)
    getWidgetSize = staticmethod(CoinXt_SWIG_Python.SoXt_getWidgetSize)
    createSimpleErrorDialog = staticmethod(CoinXt_SWIG_Python.SoXt_createSimpleErrorDialog)
    getVersionInfo = staticmethod(CoinXt_SWIG_Python.SoXt_getVersionInfo)
    getVersionString = staticmethod(CoinXt_SWIG_Python.SoXt_getVersionString)
    UNSPECIFIED_ERROR = CoinXt_SWIG_Python.SoXt_UNSPECIFIED_ERROR
    NO_OPENGL_CANVAS = CoinXt_SWIG_Python.SoXt_NO_OPENGL_CANVAS
    INTERNAL_ASSERT = CoinXt_SWIG_Python.SoXt_INTERNAL_ASSERT
    setFatalErrorHandler = staticmethod(CoinXt_SWIG_Python.SoXt_setFatalErrorHandler)
    isDebugLibrary = staticmethod(CoinXt_SWIG_Python.SoXt_isDebugLibrary)
    isCompatible = staticmethod(CoinXt_SWIG_Python.SoXt_isCompatible)
    DLL = CoinXt_SWIG_Python.SoXt_DLL
    LIB = CoinXt_SWIG_Python.SoXt_LIB
    UNKNOWN = CoinXt_SWIG_Python.SoXt_UNKNOWN
    getABIType = staticmethod(CoinXt_SWIG_Python.SoXt_getABIType)
    nextEvent = staticmethod(CoinXt_SWIG_Python.SoXt_nextEvent)
    dispatchEvent = staticmethod(CoinXt_SWIG_Python.SoXt_dispatchEvent)
    getAppContext = staticmethod(CoinXt_SWIG_Python.SoXt_getAppContext)
    getDisplay = staticmethod(CoinXt_SWIG_Python.SoXt_getDisplay)
    encodeString = staticmethod(CoinXt_SWIG_Python.SoXt_encodeString)
    decodeString = staticmethod(CoinXt_SWIG_Python.SoXt_decodeString)
    getPopupArgs = staticmethod(CoinXt_SWIG_Python.SoXt_getPopupArgs)
    registerColormapLoad = staticmethod(CoinXt_SWIG_Python.SoXt_registerColormapLoad)
    addColormapToShell = staticmethod(CoinXt_SWIG_Python.SoXt_addColormapToShell)
    removeColormapFromShell = staticmethod(CoinXt_SWIG_Python.SoXt_removeColormapFromShell)
    addExtensionEventHandler = staticmethod(CoinXt_SWIG_Python.SoXt_addExtensionEventHandler)
    removeExtensionEventHandler = staticmethod(CoinXt_SWIG_Python.SoXt_removeExtensionEventHandler)
SoXt_swigregister = CoinXt_SWIG_Python.SoXt_swigregister
SoXt_swigregister(SoXt)
SoXt_init = CoinXt_SWIG_Python.SoXt_init
SoXt_mainLoop = CoinXt_SWIG_Python.SoXt_mainLoop
SoXt_exitMainLoop = CoinXt_SWIG_Python.SoXt_exitMainLoop
SoXt_done = CoinXt_SWIG_Python.SoXt_done
SoXt_getTopLevelWidget = CoinXt_SWIG_Python.SoXt_getTopLevelWidget
SoXt_getShellWidget = CoinXt_SWIG_Python.SoXt_getShellWidget
SoXt_show = CoinXt_SWIG_Python.SoXt_show
SoXt_hide = CoinXt_SWIG_Python.SoXt_hide
SoXt_setWidgetSize = CoinXt_SWIG_Python.SoXt_setWidgetSize
SoXt_getWidgetSize = CoinXt_SWIG_Python.SoXt_getWidgetSize
SoXt_createSimpleErrorDialog = CoinXt_SWIG_Python.SoXt_createSimpleErrorDialog
SoXt_getVersionInfo = CoinXt_SWIG_Python.SoXt_getVersionInfo
SoXt_getVersionString = CoinXt_SWIG_Python.SoXt_getVersionString
SoXt_setFatalErrorHandler = CoinXt_SWIG_Python.SoXt_setFatalErrorHandler
SoXt_isDebugLibrary = CoinXt_SWIG_Python.SoXt_isDebugLibrary
SoXt_isCompatible = CoinXt_SWIG_Python.SoXt_isCompatible
SoXt_getABIType = CoinXt_SWIG_Python.SoXt_getABIType
SoXt_nextEvent = CoinXt_SWIG_Python.SoXt_nextEvent
SoXt_dispatchEvent = CoinXt_SWIG_Python.SoXt_dispatchEvent
SoXt_getAppContext = CoinXt_SWIG_Python.SoXt_getAppContext
SoXt_getDisplay = CoinXt_SWIG_Python.SoXt_getDisplay
SoXt_encodeString = CoinXt_SWIG_Python.SoXt_encodeString
SoXt_decodeString = CoinXt_SWIG_Python.SoXt_decodeString
SoXt_getPopupArgs = CoinXt_SWIG_Python.SoXt_getPopupArgs
SoXt_registerColormapLoad = CoinXt_SWIG_Python.SoXt_registerColormapLoad
SoXt_addColormapToShell = CoinXt_SWIG_Python.SoXt_addColormapToShell
SoXt_removeColormapFromShell = CoinXt_SWIG_Python.SoXt_removeColormapFromShell
SoXt_addExtensionEventHandler = CoinXt_SWIG_Python.SoXt_addExtensionEventHandler
SoXt_removeExtensionEventHandler = CoinXt_SWIG_Python.SoXt_removeExtensionEventHandler

class SoXtObject(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtObject_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtObject_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtObject_getTypeId(*args)
    def isOfType(*args): return CoinXt_SWIG_Python.SoXtObject_isOfType(*args)
    init = staticmethod(CoinXt_SWIG_Python.SoXtObject_init)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoXtObject
    __del__ = lambda self : None;
SoXtObject_swigregister = CoinXt_SWIG_Python.SoXtObject_swigregister
SoXtObject_swigregister(SoXtObject)
SoXtObject_initClass = CoinXt_SWIG_Python.SoXtObject_initClass
SoXtObject_getClassTypeId = CoinXt_SWIG_Python.SoXtObject_getClassTypeId
SoXtObject_init = CoinXt_SWIG_Python.SoXtObject_init

class SoXtComponent(SoXtObject):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtComponent_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtComponent_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtComponent_getTypeId(*args)
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoXtComponent
    __del__ = lambda self : None;
    def show(*args): return CoinXt_SWIG_Python.SoXtComponent_show(*args)
    def hide(*args): return CoinXt_SWIG_Python.SoXtComponent_hide(*args)
    def setComponentCursor(*args): return CoinXt_SWIG_Python.SoXtComponent_setComponentCursor(*args)
    setWidgetCursor = staticmethod(CoinXt_SWIG_Python.SoXtComponent_setWidgetCursor)
    def isFullScreen(*args): return CoinXt_SWIG_Python.SoXtComponent_isFullScreen(*args)
    def setFullScreen(*args): return CoinXt_SWIG_Python.SoXtComponent_setFullScreen(*args)
    def isVisible(*args): return CoinXt_SWIG_Python.SoXtComponent_isVisible(*args)
    def isTopLevelShell(*args): return CoinXt_SWIG_Python.SoXtComponent_isTopLevelShell(*args)
    def getWidget(*args): return CoinXt_SWIG_Python.SoXtComponent_getWidget(*args)
    def getBaseWidget(*args): return CoinXt_SWIG_Python.SoXtComponent_getBaseWidget(*args)
    def getShellWidget(*args): return CoinXt_SWIG_Python.SoXtComponent_getShellWidget(*args)
    def getParentWidget(*args): return CoinXt_SWIG_Python.SoXtComponent_getParentWidget(*args)
    def setSize(*args): return CoinXt_SWIG_Python.SoXtComponent_setSize(*args)
    def getSize(*args): return CoinXt_SWIG_Python.SoXtComponent_getSize(*args)
    def setTitle(*args): return CoinXt_SWIG_Python.SoXtComponent_setTitle(*args)
    def getTitle(*args): return CoinXt_SWIG_Python.SoXtComponent_getTitle(*args)
    def setIconTitle(*args): return CoinXt_SWIG_Python.SoXtComponent_setIconTitle(*args)
    def getIconTitle(*args): return CoinXt_SWIG_Python.SoXtComponent_getIconTitle(*args)
    def getWidgetName(*args): return CoinXt_SWIG_Python.SoXtComponent_getWidgetName(*args)
    def getClassName(*args): return CoinXt_SWIG_Python.SoXtComponent_getClassName(*args)
    def setWindowCloseCallback(*args): return CoinXt_SWIG_Python.SoXtComponent_setWindowCloseCallback(*args)
    getComponent = staticmethod(CoinXt_SWIG_Python.SoXtComponent_getComponent)
    initClasses = staticmethod(CoinXt_SWIG_Python.SoXtComponent_initClasses)
    def getDisplay(*args): return CoinXt_SWIG_Python.SoXtComponent_getDisplay(*args)
    def fitSize(*args): return CoinXt_SWIG_Python.SoXtComponent_fitSize(*args)
    def addWindowCloseCallback(*args): return CoinXt_SWIG_Python.SoXtComponent_addWindowCloseCallback(*args)
    def removeWindowCloseCallback(*args): return CoinXt_SWIG_Python.SoXtComponent_removeWindowCloseCallback(*args)
SoXtComponent_swigregister = CoinXt_SWIG_Python.SoXtComponent_swigregister
SoXtComponent_swigregister(SoXtComponent)
SoXtComponent_initClass = CoinXt_SWIG_Python.SoXtComponent_initClass
SoXtComponent_getClassTypeId = CoinXt_SWIG_Python.SoXtComponent_getClassTypeId
SoXtComponent_setWidgetCursor = CoinXt_SWIG_Python.SoXtComponent_setWidgetCursor
SoXtComponent_getComponent = CoinXt_SWIG_Python.SoXtComponent_getComponent
SoXtComponent_initClasses = CoinXt_SWIG_Python.SoXtComponent_initClasses

SO_GL_RGB = CoinXt_SWIG_Python.SO_GL_RGB
SO_GLX_RGB = CoinXt_SWIG_Python.SO_GLX_RGB
SO_GL_DOUBLE = CoinXt_SWIG_Python.SO_GL_DOUBLE
SO_GLX_DOUBLE = CoinXt_SWIG_Python.SO_GLX_DOUBLE
SO_GL_ZBUFFER = CoinXt_SWIG_Python.SO_GL_ZBUFFER
SO_GLX_ZBUFFER = CoinXt_SWIG_Python.SO_GLX_ZBUFFER
SO_GL_OVERLAY = CoinXt_SWIG_Python.SO_GL_OVERLAY
SO_GLX_OVERLAY = CoinXt_SWIG_Python.SO_GLX_OVERLAY
SO_GL_STEREO = CoinXt_SWIG_Python.SO_GL_STEREO
SO_GLX_STEREO = CoinXt_SWIG_Python.SO_GLX_STEREO
class SoXtGLWidget(SoXtComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtGLWidget_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtGLWidget_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getTypeId(*args)
    def setBorder(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setBorder(*args)
    def isBorder(*args): return CoinXt_SWIG_Python.SoXtGLWidget_isBorder(*args)
    def setDoubleBuffer(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setDoubleBuffer(*args)
    def isDoubleBuffer(*args): return CoinXt_SWIG_Python.SoXtGLWidget_isDoubleBuffer(*args)
    def setDrawToFrontBufferEnable(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setDrawToFrontBufferEnable(*args)
    def isDrawToFrontBufferEnable(*args): return CoinXt_SWIG_Python.SoXtGLWidget_isDrawToFrontBufferEnable(*args)
    def setQuadBufferStereo(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setQuadBufferStereo(*args)
    def isQuadBufferStereo(*args): return CoinXt_SWIG_Python.SoXtGLWidget_isQuadBufferStereo(*args)
    def setAccumulationBuffer(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setAccumulationBuffer(*args)
    def getAccumulationBuffer(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getAccumulationBuffer(*args)
    def setStencilBuffer(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setStencilBuffer(*args)
    def getStencilBuffer(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getStencilBuffer(*args)
    def setAlphaChannel(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setAlphaChannel(*args)
    def getAlphaChannel(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getAlphaChannel(*args)
    def setOverlayRender(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setOverlayRender(*args)
    def isOverlayRender(*args): return CoinXt_SWIG_Python.SoXtGLWidget_isOverlayRender(*args)
    def getGLWidget(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getGLWidget(*args)
    def getNormalWidget(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getNormalWidget(*args)
    def getOverlayWidget(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getOverlayWidget(*args)
    def hasOverlayGLArea(*args): return CoinXt_SWIG_Python.SoXtGLWidget_hasOverlayGLArea(*args)
    def hasNormalGLArea(*args): return CoinXt_SWIG_Python.SoXtGLWidget_hasNormalGLArea(*args)
    def getOverlayTransparentPixel(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getOverlayTransparentPixel(*args)
    def getPointSizeLimits(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getPointSizeLimits(*args)
    def getLineWidthLimits(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getLineWidthLimits(*args)
    def getNormalContext(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getNormalContext(*args)
    def getOverlayContext(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getOverlayContext(*args)
    def getNormalWindow(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getNormalWindow(*args)
    def getOverlayWindow(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getOverlayWindow(*args)
    def getOverlayColorMapSize(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getOverlayColorMapSize(*args)
    def getColorMapSize(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getColorMapSize(*args)
    def setNormalVisual(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setNormalVisual(*args)
    def getNormalVisual(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getNormalVisual(*args)
    def setOverlayVisual(*args): return CoinXt_SWIG_Python.SoXtGLWidget_setOverlayVisual(*args)
    def getOverlayVisual(*args): return CoinXt_SWIG_Python.SoXtGLWidget_getOverlayVisual(*args)
SoXtGLWidget_swigregister = CoinXt_SWIG_Python.SoXtGLWidget_swigregister
SoXtGLWidget_swigregister(SoXtGLWidget)
SoXtGLWidget_initClass = CoinXt_SWIG_Python.SoXtGLWidget_initClass
SoXtGLWidget_getClassTypeId = CoinXt_SWIG_Python.SoXtGLWidget_getClassTypeId

class SoXtRenderArea(SoXtGLWidget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtRenderArea_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtRenderArea_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getTypeId(*args)
    createInstance = staticmethod(CoinXt_SWIG_Python.SoXtRenderArea_createInstance)
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoXtRenderArea(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoXtRenderArea
    __del__ = lambda self : None;
    def setSceneGraph(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setSceneGraph(*args)
    def getSceneGraph(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getSceneGraph(*args)
    def setOverlaySceneGraph(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setOverlaySceneGraph(*args)
    def getOverlaySceneGraph(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getOverlaySceneGraph(*args)
    def setBackgroundColor(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setBackgroundColor(*args)
    def getBackgroundColor(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getBackgroundColor(*args)
    def setBackgroundIndex(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setBackgroundIndex(*args)
    def getBackgroundIndex(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getBackgroundIndex(*args)
    def setOverlayBackgroundIndex(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setOverlayBackgroundIndex(*args)
    def getOverlayBackgroundIndex(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getOverlayBackgroundIndex(*args)
    def setColorMap(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setColorMap(*args)
    def setOverlayColorMap(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setOverlayColorMap(*args)
    def setViewportRegion(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setViewportRegion(*args)
    def getViewportRegion(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getViewportRegion(*args)
    def setTransparencyType(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setTransparencyType(*args)
    def getTransparencyType(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getTransparencyType(*args)
    def setAntialiasing(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setAntialiasing(*args)
    def getAntialiasing(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getAntialiasing(*args)
    def setClearBeforeRender(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setClearBeforeRender(*args)
    def isClearBeforeRender(*args): return CoinXt_SWIG_Python.SoXtRenderArea_isClearBeforeRender(*args)
    def isClearZBufferBeforeRender(*args): return CoinXt_SWIG_Python.SoXtRenderArea_isClearZBufferBeforeRender(*args)
    def setClearBeforeOverlayRender(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setClearBeforeOverlayRender(*args)
    def isClearBeforeOverlayRender(*args): return CoinXt_SWIG_Python.SoXtRenderArea_isClearBeforeOverlayRender(*args)
    def setAutoRedraw(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setAutoRedraw(*args)
    def isAutoRedraw(*args): return CoinXt_SWIG_Python.SoXtRenderArea_isAutoRedraw(*args)
    def setRedrawPriority(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setRedrawPriority(*args)
    def getRedrawPriority(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getRedrawPriority(*args)
    getDefaultRedrawPriority = staticmethod(CoinXt_SWIG_Python.SoXtRenderArea_getDefaultRedrawPriority)
    def render(*args): return CoinXt_SWIG_Python.SoXtRenderArea_render(*args)
    def renderOverlay(*args): return CoinXt_SWIG_Python.SoXtRenderArea_renderOverlay(*args)
    def scheduleRedraw(*args): return CoinXt_SWIG_Python.SoXtRenderArea_scheduleRedraw(*args)
    def scheduleOverlayRedraw(*args): return CoinXt_SWIG_Python.SoXtRenderArea_scheduleOverlayRedraw(*args)
    def redrawOnSelectionChange(*args): return CoinXt_SWIG_Python.SoXtRenderArea_redrawOnSelectionChange(*args)
    def redrawOverlayOnSelectionChange(*args): return CoinXt_SWIG_Python.SoXtRenderArea_redrawOverlayOnSelectionChange(*args)
    def setEventCallback(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setEventCallback(*args)
    def setSceneManager(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setSceneManager(*args)
    def getSceneManager(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getSceneManager(*args)
    def setOverlaySceneManager(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setOverlaySceneManager(*args)
    def getOverlaySceneManager(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getOverlaySceneManager(*args)
    def setGLRenderAction(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setGLRenderAction(*args)
    def getGLRenderAction(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getGLRenderAction(*args)
    def setOverlayGLRenderAction(*args): return CoinXt_SWIG_Python.SoXtRenderArea_setOverlayGLRenderAction(*args)
    def getOverlayGLRenderAction(*args): return CoinXt_SWIG_Python.SoXtRenderArea_getOverlayGLRenderAction(*args)
    def sendSoEvent(*args): return CoinXt_SWIG_Python.SoXtRenderArea_sendSoEvent(*args)
    def registerDevice(*args): return CoinXt_SWIG_Python.SoXtRenderArea_registerDevice(*args)
    def unregisterDevice(*args): return CoinXt_SWIG_Python.SoXtRenderArea_unregisterDevice(*args)
SoXtRenderArea_swigregister = CoinXt_SWIG_Python.SoXtRenderArea_swigregister
SoXtRenderArea_swigregister(SoXtRenderArea)
SoXtRenderArea_initClass = CoinXt_SWIG_Python.SoXtRenderArea_initClass
SoXtRenderArea_getClassTypeId = CoinXt_SWIG_Python.SoXtRenderArea_getClassTypeId
SoXtRenderArea_createInstance = CoinXt_SWIG_Python.SoXtRenderArea_createInstance
SoXtRenderArea_getDefaultRedrawPriority = CoinXt_SWIG_Python.SoXtRenderArea_getDefaultRedrawPriority

class SoXtViewer(SoXtRenderArea):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtViewer_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtViewer_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtViewer_getTypeId(*args)
    BROWSER = CoinXt_SWIG_Python.SoXtViewer_BROWSER
    EDITOR = CoinXt_SWIG_Python.SoXtViewer_EDITOR
    VIEW_AS_IS = CoinXt_SWIG_Python.SoXtViewer_VIEW_AS_IS
    VIEW_HIDDEN_LINE = CoinXt_SWIG_Python.SoXtViewer_VIEW_HIDDEN_LINE
    VIEW_NO_TEXTURE = CoinXt_SWIG_Python.SoXtViewer_VIEW_NO_TEXTURE
    VIEW_LOW_COMPLEXITY = CoinXt_SWIG_Python.SoXtViewer_VIEW_LOW_COMPLEXITY
    VIEW_LINE = CoinXt_SWIG_Python.SoXtViewer_VIEW_LINE
    VIEW_POINT = CoinXt_SWIG_Python.SoXtViewer_VIEW_POINT
    VIEW_BBOX = CoinXt_SWIG_Python.SoXtViewer_VIEW_BBOX
    VIEW_LOW_RES_LINE = CoinXt_SWIG_Python.SoXtViewer_VIEW_LOW_RES_LINE
    VIEW_LOW_RES_POINT = CoinXt_SWIG_Python.SoXtViewer_VIEW_LOW_RES_POINT
    VIEW_SAME_AS_STILL = CoinXt_SWIG_Python.SoXtViewer_VIEW_SAME_AS_STILL
    VIEW_WIREFRAME_OVERLAY = CoinXt_SWIG_Python.SoXtViewer_VIEW_WIREFRAME_OVERLAY
    STILL = CoinXt_SWIG_Python.SoXtViewer_STILL
    INTERACTIVE = CoinXt_SWIG_Python.SoXtViewer_INTERACTIVE
    BUFFER_SINGLE = CoinXt_SWIG_Python.SoXtViewer_BUFFER_SINGLE
    BUFFER_DOUBLE = CoinXt_SWIG_Python.SoXtViewer_BUFFER_DOUBLE
    BUFFER_INTERACTIVE = CoinXt_SWIG_Python.SoXtViewer_BUFFER_INTERACTIVE
    VARIABLE_NEAR_PLANE = CoinXt_SWIG_Python.SoXtViewer_VARIABLE_NEAR_PLANE
    CONSTANT_NEAR_PLANE = CoinXt_SWIG_Python.SoXtViewer_CONSTANT_NEAR_PLANE
    def setCamera(*args): return CoinXt_SWIG_Python.SoXtViewer_setCamera(*args)
    def getCamera(*args): return CoinXt_SWIG_Python.SoXtViewer_getCamera(*args)
    def setCameraType(*args): return CoinXt_SWIG_Python.SoXtViewer_setCameraType(*args)
    def getCameraType(*args): return CoinXt_SWIG_Python.SoXtViewer_getCameraType(*args)
    def toggleCameraType(*args): return CoinXt_SWIG_Python.SoXtViewer_toggleCameraType(*args)
    def viewAll(*args): return CoinXt_SWIG_Python.SoXtViewer_viewAll(*args)
    def saveHomePosition(*args): return CoinXt_SWIG_Python.SoXtViewer_saveHomePosition(*args)
    def resetToHomePosition(*args): return CoinXt_SWIG_Python.SoXtViewer_resetToHomePosition(*args)
    def setHeadlight(*args): return CoinXt_SWIG_Python.SoXtViewer_setHeadlight(*args)
    def isHeadlight(*args): return CoinXt_SWIG_Python.SoXtViewer_isHeadlight(*args)
    def getHeadlight(*args): return CoinXt_SWIG_Python.SoXtViewer_getHeadlight(*args)
    def setDrawStyle(*args): return CoinXt_SWIG_Python.SoXtViewer_setDrawStyle(*args)
    def getDrawStyle(*args): return CoinXt_SWIG_Python.SoXtViewer_getDrawStyle(*args)
    def setBufferingType(*args): return CoinXt_SWIG_Python.SoXtViewer_setBufferingType(*args)
    def getBufferingType(*args): return CoinXt_SWIG_Python.SoXtViewer_getBufferingType(*args)
    def setViewing(*args): return CoinXt_SWIG_Python.SoXtViewer_setViewing(*args)
    def isViewing(*args): return CoinXt_SWIG_Python.SoXtViewer_isViewing(*args)
    def setCursorEnabled(*args): return CoinXt_SWIG_Python.SoXtViewer_setCursorEnabled(*args)
    def isCursorEnabled(*args): return CoinXt_SWIG_Python.SoXtViewer_isCursorEnabled(*args)
    def setAutoClipping(*args): return CoinXt_SWIG_Python.SoXtViewer_setAutoClipping(*args)
    def isAutoClipping(*args): return CoinXt_SWIG_Python.SoXtViewer_isAutoClipping(*args)
    def setAutoClippingStrategy(*args): return CoinXt_SWIG_Python.SoXtViewer_setAutoClippingStrategy(*args)
    def setStereoViewing(*args): return CoinXt_SWIG_Python.SoXtViewer_setStereoViewing(*args)
    def isStereoViewing(*args): return CoinXt_SWIG_Python.SoXtViewer_isStereoViewing(*args)
    def setStereoOffset(*args): return CoinXt_SWIG_Python.SoXtViewer_setStereoOffset(*args)
    def getStereoOffset(*args): return CoinXt_SWIG_Python.SoXtViewer_getStereoOffset(*args)
    STEREO_NONE = CoinXt_SWIG_Python.SoXtViewer_STEREO_NONE
    STEREO_ANAGLYPH = CoinXt_SWIG_Python.SoXtViewer_STEREO_ANAGLYPH
    STEREO_QUADBUFFER = CoinXt_SWIG_Python.SoXtViewer_STEREO_QUADBUFFER
    STEREO_INTERLEAVED_ROWS = CoinXt_SWIG_Python.SoXtViewer_STEREO_INTERLEAVED_ROWS
    STEREO_INTERLEAVED_COLUMNS = CoinXt_SWIG_Python.SoXtViewer_STEREO_INTERLEAVED_COLUMNS
    def setStereoType(*args): return CoinXt_SWIG_Python.SoXtViewer_setStereoType(*args)
    def getStereoType(*args): return CoinXt_SWIG_Python.SoXtViewer_getStereoType(*args)
    def setAnaglyphStereoColorMasks(*args): return CoinXt_SWIG_Python.SoXtViewer_setAnaglyphStereoColorMasks(*args)
    def getAnaglyphStereoColorMasks(*args): return CoinXt_SWIG_Python.SoXtViewer_getAnaglyphStereoColorMasks(*args)
    def setDetailSeek(*args): return CoinXt_SWIG_Python.SoXtViewer_setDetailSeek(*args)
    def isDetailSeek(*args): return CoinXt_SWIG_Python.SoXtViewer_isDetailSeek(*args)
    def setSeekTime(*args): return CoinXt_SWIG_Python.SoXtViewer_setSeekTime(*args)
    def getSeekTime(*args): return CoinXt_SWIG_Python.SoXtViewer_getSeekTime(*args)
    def addStartCallback(*args): return CoinXt_SWIG_Python.SoXtViewer_addStartCallback(*args)
    def addFinishCallback(*args): return CoinXt_SWIG_Python.SoXtViewer_addFinishCallback(*args)
    def removeStartCallback(*args): return CoinXt_SWIG_Python.SoXtViewer_removeStartCallback(*args)
    def removeFinishCallback(*args): return CoinXt_SWIG_Python.SoXtViewer_removeFinishCallback(*args)
    def setWireframeOverlayColor(*args): return CoinXt_SWIG_Python.SoXtViewer_setWireframeOverlayColor(*args)
    def getWireframeOverlayColor(*args): return CoinXt_SWIG_Python.SoXtViewer_getWireframeOverlayColor(*args)
    def setDoubleBuffer(*args): return CoinXt_SWIG_Python.SoXtViewer_setDoubleBuffer(*args)
    def setSceneGraph(*args): return CoinXt_SWIG_Python.SoXtViewer_setSceneGraph(*args)
    def getSceneGraph(*args): return CoinXt_SWIG_Python.SoXtViewer_getSceneGraph(*args)
SoXtViewer_swigregister = CoinXt_SWIG_Python.SoXtViewer_swigregister
SoXtViewer_swigregister(SoXtViewer)
SoXtViewer_initClass = CoinXt_SWIG_Python.SoXtViewer_initClass
SoXtViewer_getClassTypeId = CoinXt_SWIG_Python.SoXtViewer_getClassTypeId

class SoXtFullViewer(SoXtViewer):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtFullViewer_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtFullViewer_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtFullViewer_getTypeId(*args)
    BUILD_NONE = CoinXt_SWIG_Python.SoXtFullViewer_BUILD_NONE
    BUILD_DECORATION = CoinXt_SWIG_Python.SoXtFullViewer_BUILD_DECORATION
    BUILD_POPUP = CoinXt_SWIG_Python.SoXtFullViewer_BUILD_POPUP
    BUILD_ALL = CoinXt_SWIG_Python.SoXtFullViewer_BUILD_ALL
    def setDecoration(*args): return CoinXt_SWIG_Python.SoXtFullViewer_setDecoration(*args)
    def isDecoration(*args): return CoinXt_SWIG_Python.SoXtFullViewer_isDecoration(*args)
    def setPopupMenuEnabled(*args): return CoinXt_SWIG_Python.SoXtFullViewer_setPopupMenuEnabled(*args)
    def isPopupMenuEnabled(*args): return CoinXt_SWIG_Python.SoXtFullViewer_isPopupMenuEnabled(*args)
    def getAppPushButtonParent(*args): return CoinXt_SWIG_Python.SoXtFullViewer_getAppPushButtonParent(*args)
    def addAppPushButton(*args): return CoinXt_SWIG_Python.SoXtFullViewer_addAppPushButton(*args)
    def insertAppPushButton(*args): return CoinXt_SWIG_Python.SoXtFullViewer_insertAppPushButton(*args)
    def removeAppPushButton(*args): return CoinXt_SWIG_Python.SoXtFullViewer_removeAppPushButton(*args)
    def findAppPushButton(*args): return CoinXt_SWIG_Python.SoXtFullViewer_findAppPushButton(*args)
    def lengthAppPushButton(*args): return CoinXt_SWIG_Python.SoXtFullViewer_lengthAppPushButton(*args)
    def getRenderAreaWidget(*args): return CoinXt_SWIG_Python.SoXtFullViewer_getRenderAreaWidget(*args)
    def setViewing(*args): return CoinXt_SWIG_Python.SoXtFullViewer_setViewing(*args)
    def setComponentCursor(*args): return CoinXt_SWIG_Python.SoXtFullViewer_setComponentCursor(*args)
SoXtFullViewer_swigregister = CoinXt_SWIG_Python.SoXtFullViewer_swigregister
SoXtFullViewer_swigregister(SoXtFullViewer)
SoXtFullViewer_initClass = CoinXt_SWIG_Python.SoXtFullViewer_initClass
SoXtFullViewer_getClassTypeId = CoinXt_SWIG_Python.SoXtFullViewer_getClassTypeId

class SoXtExaminerViewer(SoXtFullViewer):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtExaminerViewer_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtExaminerViewer_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_getTypeId(*args)
    createInstance = staticmethod(CoinXt_SWIG_Python.SoXtExaminerViewer_createInstance)
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoXtExaminerViewer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoXtExaminerViewer
    __del__ = lambda self : None;
    def setAnimationEnabled(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_setAnimationEnabled(*args)
    def isAnimationEnabled(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_isAnimationEnabled(*args)
    def stopAnimating(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_stopAnimating(*args)
    def isAnimating(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_isAnimating(*args)
    def setFeedbackVisibility(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_setFeedbackVisibility(*args)
    def isFeedbackVisible(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_isFeedbackVisible(*args)
    def setFeedbackSize(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_setFeedbackSize(*args)
    def getFeedbackSize(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_getFeedbackSize(*args)
    def setViewing(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_setViewing(*args)
    def setCamera(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_setCamera(*args)
    def setCursorEnabled(*args): return CoinXt_SWIG_Python.SoXtExaminerViewer_setCursorEnabled(*args)
SoXtExaminerViewer_swigregister = CoinXt_SWIG_Python.SoXtExaminerViewer_swigregister
SoXtExaminerViewer_swigregister(SoXtExaminerViewer)
SoXtExaminerViewer_initClass = CoinXt_SWIG_Python.SoXtExaminerViewer_initClass
SoXtExaminerViewer_getClassTypeId = CoinXt_SWIG_Python.SoXtExaminerViewer_getClassTypeId
SoXtExaminerViewer_createInstance = CoinXt_SWIG_Python.SoXtExaminerViewer_createInstance

class SoXtPlaneViewer(SoXtFullViewer):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    initClass = staticmethod(CoinXt_SWIG_Python.SoXtPlaneViewer_initClass)
    getClassTypeId = staticmethod(CoinXt_SWIG_Python.SoXtPlaneViewer_getClassTypeId)
    def getTypeId(*args): return CoinXt_SWIG_Python.SoXtPlaneViewer_getTypeId(*args)
    createInstance = staticmethod(CoinXt_SWIG_Python.SoXtPlaneViewer_createInstance)
    def __init__(self, *args): 
        this = CoinXt_SWIG_Python.new_SoXtPlaneViewer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = CoinXt_SWIG_Python.delete_SoXtPlaneViewer
    __del__ = lambda self : None;
    def setViewing(*args): return CoinXt_SWIG_Python.SoXtPlaneViewer_setViewing(*args)
    def setCamera(*args): return CoinXt_SWIG_Python.SoXtPlaneViewer_setCamera(*args)
    def setCursorEnabled(*args): return CoinXt_SWIG_Python.SoXtPlaneViewer_setCursorEnabled(*args)
SoXtPlaneViewer_swigregister = CoinXt_SWIG_Python.SoXtPlaneViewer_swigregister
SoXtPlaneViewer_swigregister(SoXtPlaneViewer)
SoXtPlaneViewer_initClass = CoinXt_SWIG_Python.SoXtPlaneViewer_initClass
SoXtPlaneViewer_getClassTypeId = CoinXt_SWIG_Python.SoXtPlaneViewer_getClassTypeId
SoXtPlaneViewer_createInstance = CoinXt_SWIG_Python.SoXtPlaneViewer_createInstance

import CoinPython as Inventor
for x in locals().values():
  if isinstance(x, type) and issubclass(x, Inventor.SoFieldContainer):
    for name, thing in x.__dict__.items():
      if isinstance(thing, property):
        delattr(x, name)



