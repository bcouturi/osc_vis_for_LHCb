/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#elif PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    if (PyBytes_AsStringAndSize(str, &cstr, &len) != -1) {
      newstr = (char *) malloc(len+1);
      if (newstr)
        memcpy(newstr, cstr, len+1);
    }
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03030000 || PY_VERSION_HEX < 0x03000000
#  define SWIG_Python_str_DelForPy3(x)
#else
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

// SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user
// interface files check for it.
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    Py_XDECREF(value);
    PyErr_Restore(type, newvalue, traceback);
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
      data->delargs = !(flags & (METH_O));
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SwigPyObject_acquire(v,args);
      } else {
        SwigPyObject_disown(v,args);
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    return PyDict_SetItem(dict, SWIG_This(), swig_this);
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, "type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        return -1;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_FILE swig_types[0]
#define SWIGTYPE_p_allocator_type swig_types[1]
#define SWIGTYPE_p_annotations_t swig_types[2]
#define SWIGTYPE_p_axis_t swig_types[3]
#define SWIGTYPE_p_bn_t swig_types[4]
#define SWIGTYPE_p_bool swig_types[5]
#define SWIGTYPE_p_char swig_types[6]
#define SWIGTYPE_p_char_type swig_types[7]
#define SWIGTYPE_p_difference_type swig_types[8]
#define SWIGTYPE_p_dim_t swig_types[9]
#define SWIGTYPE_p_double swig_types[10]
#define SWIGTYPE_p_f_enum_std__ios_base__event_r_std__ios_base_int__void swig_types[11]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t swig_types[12]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[13]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[14]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[15]
#define SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[16]
#define SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[17]
#define SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[18]
#define SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[19]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t swig_types[20]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[21]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[22]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[23]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base swig_types[24]
#define SWIGTYPE_p_first_type swig_types[25]
#define SWIGTYPE_p_float swig_types[26]
#define SWIGTYPE_p_fmtflags swig_types[27]
#define SWIGTYPE_p_inlib__FILE_reader swig_types[28]
#define SWIGTYPE_p_inlib__cmp_colorf swig_types[29]
#define SWIGTYPE_p_inlib__colorf swig_types[30]
#define SWIGTYPE_p_inlib__csv_time swig_types[31]
#define SWIGTYPE_p_inlib__file__reader swig_types[32]
#define SWIGTYPE_p_inlib__fits_bit swig_types[33]
#define SWIGTYPE_p_inlib__histo__axisT_double_t swig_types[34]
#define SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t swig_types[35]
#define SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t swig_types[36]
#define SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t swig_types[37]
#define SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t swig_types[38]
#define SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t swig_types[39]
#define SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t swig_types[40]
#define SWIGTYPE_p_inlib__histo__h1d swig_types[41]
#define SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t swig_types[42]
#define SWIGTYPE_p_inlib__histo__h2d swig_types[43]
#define SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t swig_types[44]
#define SWIGTYPE_p_inlib__histo__h3d swig_types[45]
#define SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t swig_types[46]
#define SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t swig_types[47]
#define SWIGTYPE_p_inlib__histo__p1d swig_types[48]
#define SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t swig_types[49]
#define SWIGTYPE_p_inlib__histo__p2d swig_types[50]
#define SWIGTYPE_p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t swig_types[51]
#define SWIGTYPE_p_inlib__imgT_unsigned_char_t swig_types[52]
#define SWIGTYPE_p_inlib__io__irbuf swig_types[53]
#define SWIGTYPE_p_inlib__io__iwbuf swig_types[54]
#define SWIGTYPE_p_inlib__mat4T_float_t swig_types[55]
#define SWIGTYPE_p_inlib__mat4f swig_types[56]
#define SWIGTYPE_p_inlib__matT_float_4_t swig_types[57]
#define SWIGTYPE_p_inlib__qrotT_float_t swig_types[58]
#define SWIGTYPE_p_inlib__random__bw swig_types[59]
#define SWIGTYPE_p_inlib__random__exp swig_types[60]
#define SWIGTYPE_p_inlib__random__flat swig_types[61]
#define SWIGTYPE_p_inlib__random__gauss swig_types[62]
#define SWIGTYPE_p_inlib__rotf swig_types[63]
#define SWIGTYPE_p_inlib__sg__action swig_types[64]
#define SWIGTYPE_p_inlib__sg__anim_event swig_types[65]
#define SWIGTYPE_p_inlib__sg__area_style swig_types[66]
#define SWIGTYPE_p_inlib__sg__base_colormap swig_types[67]
#define SWIGTYPE_p_inlib__sg__bbox_action swig_types[68]
#define SWIGTYPE_p_inlib__sg__bmfT_std__string_t swig_types[69]
#define SWIGTYPE_p_inlib__sg__bsfT_bool_t swig_types[70]
#define SWIGTYPE_p_inlib__sg__bsfT_float_t swig_types[71]
#define SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t swig_types[72]
#define SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t swig_types[73]
#define SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t swig_types[74]
#define SWIGTYPE_p_inlib__sg__bsfT_std__string_t swig_types[75]
#define SWIGTYPE_p_inlib__sg__by_value_colormap swig_types[76]
#define SWIGTYPE_p_inlib__sg__const_colormap swig_types[77]
#define SWIGTYPE_p_inlib__sg__devrot_event swig_types[78]
#define SWIGTYPE_p_inlib__sg__down_event swig_types[79]
#define SWIGTYPE_p_inlib__sg__event swig_types[80]
#define SWIGTYPE_p_inlib__sg__event_action swig_types[81]
#define SWIGTYPE_p_inlib__sg__field swig_types[82]
#define SWIGTYPE_p_inlib__sg__grey_scale_colormap swig_types[83]
#define SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap swig_types[84]
#define SWIGTYPE_p_inlib__sg__group swig_types[85]
#define SWIGTYPE_p_inlib__sg__hatching_policy swig_types[86]
#define SWIGTYPE_p_inlib__sg__hjust swig_types[87]
#define SWIGTYPE_p_inlib__sg__line_style swig_types[88]
#define SWIGTYPE_p_inlib__sg__marker_style swig_types[89]
#define SWIGTYPE_p_inlib__sg__matrix_action swig_types[90]
#define SWIGTYPE_p_inlib__sg__mf_string swig_types[91]
#define SWIGTYPE_p_inlib__sg__move_event swig_types[92]
#define SWIGTYPE_p_inlib__sg__node swig_types[93]
#define SWIGTYPE_p_inlib__sg__painting_policy swig_types[94]
#define SWIGTYPE_p_inlib__sg__pick_action swig_types[95]
#define SWIGTYPE_p_inlib__sg__pick_element swig_types[96]
#define SWIGTYPE_p_inlib__sg__primitive_visitor swig_types[97]
#define SWIGTYPE_p_inlib__sg__projection_type swig_types[98]
#define SWIGTYPE_p_inlib__sg__render_action swig_types[99]
#define SWIGTYPE_p_inlib__sg__search_action swig_types[100]
#define SWIGTYPE_p_inlib__sg__sfT_bool_t swig_types[101]
#define SWIGTYPE_p_inlib__sg__sfT_float_t swig_types[102]
#define SWIGTYPE_p_inlib__sg__sfT_int_t swig_types[103]
#define SWIGTYPE_p_inlib__sg__sfT_unsigned_int_t swig_types[104]
#define SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t swig_types[105]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__area_style_t swig_types[106]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t swig_types[107]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__hjust_t swig_types[108]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__marker_style_t swig_types[109]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t swig_types[110]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__projection_type_t swig_types[111]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__vjust_t swig_types[112]
#define SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t swig_types[113]
#define SWIGTYPE_p_inlib__sg__sf_rotf swig_types[114]
#define SWIGTYPE_p_inlib__sg__sf_string swig_types[115]
#define SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t swig_types[116]
#define SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t swig_types[117]
#define SWIGTYPE_p_inlib__sg__size_event swig_types[118]
#define SWIGTYPE_p_inlib__sg__state swig_types[119]
#define SWIGTYPE_p_inlib__sg__states swig_types[120]
#define SWIGTYPE_p_inlib__sg__style swig_types[121]
#define SWIGTYPE_p_inlib__sg__style_ROOT_colormap swig_types[122]
#define SWIGTYPE_p_inlib__sg__style_color swig_types[123]
#define SWIGTYPE_p_inlib__sg__style_colormap swig_types[124]
#define SWIGTYPE_p_inlib__sg__style_default_colormap swig_types[125]
#define SWIGTYPE_p_inlib__sg__style_parser swig_types[126]
#define SWIGTYPE_p_inlib__sg__style_povama_colormap swig_types[127]
#define SWIGTYPE_p_inlib__sg__text_style swig_types[128]
#define SWIGTYPE_p_inlib__sg__up_event swig_types[129]
#define SWIGTYPE_p_inlib__sg__violet_to_red_colormap swig_types[130]
#define SWIGTYPE_p_inlib__sg__vjust swig_types[131]
#define SWIGTYPE_p_inlib__sg__win_action swig_types[132]
#define SWIGTYPE_p_inlib__sg__winding_type swig_types[133]
#define SWIGTYPE_p_inlib__sg__write_action swig_types[134]
#define SWIGTYPE_p_inlib__vec2T_float_t swig_types[135]
#define SWIGTYPE_p_inlib__vec3T_double_t swig_types[136]
#define SWIGTYPE_p_inlib__vec3T_float_t swig_types[137]
#define SWIGTYPE_p_inlib__vec3f swig_types[138]
#define SWIGTYPE_p_inlib__vec4T_float_t swig_types[139]
#define SWIGTYPE_p_inlib__vec4f swig_types[140]
#define SWIGTYPE_p_inlib__waxml__file swig_types[141]
#define SWIGTYPE_p_int swig_types[142]
#define SWIGTYPE_p_int_type swig_types[143]
#define SWIGTYPE_p_iostate swig_types[144]
#define SWIGTYPE_p_it_t swig_types[145]
#define SWIGTYPE_p_key_type swig_types[146]
#define SWIGTYPE_p_long swig_types[147]
#define SWIGTYPE_p_long_double swig_types[148]
#define SWIGTYPE_p_long_long swig_types[149]
#define SWIGTYPE_p_mapped_type swig_types[150]
#define SWIGTYPE_p_num_t swig_types[151]
#define SWIGTYPE_p_off_type swig_types[152]
#define SWIGTYPE_p_openmode swig_types[153]
#define SWIGTYPE_p_p_PyObject swig_types[154]
#define SWIGTYPE_p_p_bool swig_types[155]
#define SWIGTYPE_p_p_char swig_types[156]
#define SWIGTYPE_p_p_double swig_types[157]
#define SWIGTYPE_p_p_float swig_types[158]
#define SWIGTYPE_p_p_int swig_types[159]
#define SWIGTYPE_p_p_long_long swig_types[160]
#define SWIGTYPE_p_p_short swig_types[161]
#define SWIGTYPE_p_p_unsigned_char swig_types[162]
#define SWIGTYPE_p_p_unsigned_int swig_types[163]
#define SWIGTYPE_p_p_unsigned_long_long swig_types[164]
#define SWIGTYPE_p_p_unsigned_short swig_types[165]
#define SWIGTYPE_p_p_void swig_types[166]
#define SWIGTYPE_p_path_t swig_types[167]
#define SWIGTYPE_p_paths_t swig_types[168]
#define SWIGTYPE_p_pick_t swig_types[169]
#define SWIGTYPE_p_pos_type swig_types[170]
#define SWIGTYPE_p_second_type swig_types[171]
#define SWIGTYPE_p_seekdir swig_types[172]
#define SWIGTYPE_p_short swig_types[173]
#define SWIGTYPE_p_size_t swig_types[174]
#define SWIGTYPE_p_size_type swig_types[175]
#define SWIGTYPE_p_state_type swig_types[176]
#define SWIGTYPE_p_std__allocatorT_double_t swig_types[177]
#define SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t swig_types[178]
#define SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[179]
#define SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[180]
#define SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[181]
#define SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t swig_types[182]
#define SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[183]
#define SWIGTYPE_p_std__invalid_argument swig_types[184]
#define SWIGTYPE_p_std__ios_base swig_types[185]
#define SWIGTYPE_p_std__locale swig_types[186]
#define SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t swig_types[187]
#define SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t swig_types[188]
#define SWIGTYPE_p_std__ofstream swig_types[189]
#define SWIGTYPE_p_std__string swig_types[190]
#define SWIGTYPE_p_std__string__size_type swig_types[191]
#define SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t swig_types[192]
#define SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t swig_types[193]
#define SWIGTYPE_p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t swig_types[194]
#define SWIGTYPE_p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t swig_types[195]
#define SWIGTYPE_p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t swig_types[196]
#define SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t swig_types[197]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t swig_types[198]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator swig_types[199]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type swig_types[200]
#define SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t swig_types[201]
#define SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t swig_types[202]
#define SWIGTYPE_p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t swig_types[203]
#define SWIGTYPE_p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t swig_types[204]
#define SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t swig_types[205]
#define SWIGTYPE_p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t swig_types[206]
#define SWIGTYPE_p_std__vectorT_void_p_std__allocatorT_void_p_t_t swig_types[207]
#define SWIGTYPE_p_std_vec_vec_float_t swig_types[208]
#define SWIGTYPE_p_std_vec_vec_string_t swig_types[209]
#define SWIGTYPE_p_std_vec_vec_uint_t swig_types[210]
#define SWIGTYPE_p_streamoff swig_types[211]
#define SWIGTYPE_p_streampos swig_types[212]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[213]
#define SWIGTYPE_p_traits_type swig_types[214]
#define SWIGTYPE_p_unsigned_char swig_types[215]
#define SWIGTYPE_p_unsigned_int swig_types[216]
#define SWIGTYPE_p_unsigned_long swig_types[217]
#define SWIGTYPE_p_unsigned_long_long swig_types[218]
#define SWIGTYPE_p_unsigned_short swig_types[219]
#define SWIGTYPE_p_value_type swig_types[220]
#define SWIGTYPE_p_void swig_types[221]
static swig_type_info *swig_types[223];
static swig_module_info swig_module = {swig_types, 222, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= inlib_swig_py.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit_inlib_swig_py

#else
#  define SWIG_init    initinlib_swig_py

#endif
#define SWIG_name    "inlib_swig_py"

#define SWIGVERSION 0x040002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <string>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


namespace swig {
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  /*
    Partial specialization for pointers (traits_info)
  */
  template <class Type> struct traits_info<Type *> {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers (traits)
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category>
  struct traits_as { };

  template <class Type, class Category>
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      int res = SWIG_ERROR;
      swig_type_info *descriptor = type_info<Type>();
      if (val) {
        Type *p = 0;
        int newmem = 0;
        res = descriptor ? SWIG_ConvertPtrAndOwn(obj, (void **)&p, descriptor, 0, &newmem) : SWIG_ERROR;
        if (SWIG_IsOK(res)) {
          if (newmem & SWIG_CAST_NEW_MEMORY) {
            res |= SWIG_NEWOBJMASK;
          }
          *val = p;
        }
      } else {
        res = descriptor ? SWIG_ConvertPtr(obj, 0, descriptor, 0) : SWIG_ERROR;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj) {
    return traits_as<Type, typename traits<Type>::category>::as(obj);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size, i <= j
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if (j < 0) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
      if (jj < ii)
        jj = ii;
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1, i >= j
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
      if (ii < jj)
        ii = jj;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence>
  inline void
  erase(Sequence* seq, const typename Sequence::iterator& position) {
    seq->erase(position);
  }

  template <class Sequence>
  struct traits_reserve {
    static void reserve(Sequence & /*seq*/, typename Sequence::size_type /*n*/) {
      // This should be specialized for types that support reserve
    }
  };

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        swig::traits_reserve<Sequence>::reserve(*sequence, (jj - ii + step - 1) / step);
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      swig::traits_reserve<Sequence>::reserve(*sequence, (ii - jj - step - 1) / -step);
      typename Sequence::const_reverse_iterator sb = self->rbegin();
      typename Sequence::const_reverse_iterator se = self->rbegin();
      std::advance(sb,size-ii-1);
      std::advance(se,size-jj-1);
      typename Sequence::const_reverse_iterator it = sb;
      while (it!=se) {
        sequence->push_back(*it);
        for (Py_ssize_t c=0; c<-step && it!=se; ++c)
          it++;
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          swig::traits_reserve<Sequence>::reserve(*self, self->size() - ssize + is.size());
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount && it != self->end(); ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount && it != self->rend(); ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      typename Sequence::iterator sb = self->begin();
      std::advance(sb,ii);
      if (step == 1) {
        typename Sequence::iterator se = self->begin();
        std::advance(se,jj);
        self->erase(sb,se);
      } else {
        typename Sequence::iterator it = sb;
        size_t delcount = (jj - ii + step - 1) / step;
        while (delcount) {
          it = self->erase(it);
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
          delcount--;
        }
      }
    } else {
      typename Sequence::reverse_iterator sb = self->rbegin();
      std::advance(sb,size-ii-1);
      typename Sequence::reverse_iterator it = sb;
      size_t delcount = (ii - jj - step - 1) / -step;
      while (delcount) {
        it = typename Sequence::reverse_iterator(self->erase((++it).base()));
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
        delcount--;
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyForwardIteratorOpen_T<OutIterator>(curr, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

  protected:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> base0;
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>(curr, first, last, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == base0::begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }
  };


  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorOpen_T<OutIter>(current, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item);
      } catch (const std::invalid_argument& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", (int)_index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    Py_ssize_t _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  // STL container wrapper around a Python sequence
  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;
    typedef size_t size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check() const
    {
      Py_ssize_t s = size();
      for (Py_ssize_t i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item))
	  return false;
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


  #define SWIG_From_double   PyFloat_FromDouble 


namespace swig {
  template <> struct traits< double > {
    typedef value_category category;
    static const char* type_name() { return"double"; }
  };
  template <>  struct traits_asval< double > {
    typedef double value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_double (obj, val);
    }
  };
  template <>  struct traits_from< double > {
    typedef double value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_double  (val);
    }
  };
}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	swig_type_info *descriptor = swig::type_info<sequence>();
	if (descriptor && SWIG_IsOK(::SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0))) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_InternalNewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((Py_ssize_t)size);
	Py_ssize_t i = 0;
	for (const_iterator it = seq.begin(); it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_reserve<std::vector<T> > {
      static void reserve(std::vector<T> &seq, typename std::vector<T>::size_type n) {
        seq.reserve(n);
      }
    };

    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< double, std::allocator< double > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "double" "," "std::allocator< double >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_double_Sg__iterator(std::vector< double > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_double_Sg____nonzero__(std::vector< double > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_double_Sg____bool__(std::vector< double > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< double >::size_type std_vector_Sl_double_Sg____len__(std::vector< double > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}

SWIGINTERN std::vector< double,std::allocator< double > > *std_vector_Sl_double_Sg____getslice__(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_double_Sg____setslice____SWIG_0(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< double,std::allocator< double > >());
    }
SWIGINTERN void std_vector_Sl_double_Sg____setslice____SWIG_1(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j,std::vector< double,std::allocator< double > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_double_Sg____delslice__(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_double_Sg____delitem____SWIG_0(std::vector< double > *self,std::vector< double >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< double,std::allocator< double > > *std_vector_Sl_double_Sg____getitem____SWIG_0(std::vector< double > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_double_Sg____setitem____SWIG_0(std::vector< double > *self,PySliceObject *slice,std::vector< double,std::allocator< double > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_double_Sg____setitem____SWIG_1(std::vector< double > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_double_Sg____delitem____SWIG_1(std::vector< double > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< double,std::allocator< double > >::difference_type id = i;
      std::vector< double,std::allocator< double > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< double >::value_type const &std_vector_Sl_double_Sg____getitem____SWIG_1(std::vector< double > const *self,std::vector< double >::difference_type i){
      return *(swig::cgetpos(self, i));
    }

namespace swig {
  static PyObject* container_owner_attribute() {
    static PyObject* attr = SWIG_Python_str_FromChar("__swig_container");
    return attr;
  }

  template <typename T>
  struct container_owner {
    // By default, do not add the back-reference (for value types)
    // Specialization below will check the reference for pointer types.
    static bool back_reference(PyObject* /*child*/, PyObject* /*owner*/) {
      return false;
    }
  };

  template <>
  struct container_owner<swig::pointer_category> {  
    /*
     * Call to add a back-reference to the owning object when returning a 
     * reference from a container.  Will only set the reference if child
     * is a SWIG wrapper object that does not own the pointer.
     *
     * returns whether the reference was set or not
     */
    static bool back_reference(PyObject* child, PyObject* owner) {
      SwigPyObject* swigThis = SWIG_Python_GetSwigThis(child);
      if (swigThis && (swigThis->own & SWIG_POINTER_OWN) != SWIG_POINTER_OWN) {
        return PyObject_SetAttr(child, container_owner_attribute(), owner) != -1;
      }
      return false;
    }
  };
}

SWIGINTERN void std_vector_Sl_double_Sg____setitem____SWIG_2(std::vector< double > *self,std::vector< double >::difference_type i,std::vector< double >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< double >::value_type std_vector_Sl_double_Sg__pop(std::vector< double > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< double,std::allocator< double > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_double_Sg__append(std::vector< double > *self,std::vector< double >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< double >::iterator std_vector_Sl_double_Sg__erase__SWIG_0(std::vector< double > *self,std::vector< double >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< double >::iterator std_vector_Sl_double_Sg__erase__SWIG_1(std::vector< double > *self,std::vector< double >::iterator first,std::vector< double >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< double >::iterator std_vector_Sl_double_Sg__insert__SWIG_0(std::vector< double > *self,std::vector< double >::iterator pos,std::vector< double >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_double_Sg__insert__SWIG_1(std::vector< double > *self,std::vector< double >::iterator pos,std::vector< double >::size_type n,std::vector< double >::value_type const &x){ self->insert(pos, n, x); }

#ifndef SWIG_STD_NOMODERN_STL
# include <ios>
#else
# include <streambuf.h>
#endif


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    if (PyString_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


#include <iostream>


SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(__clang__) && defined(__has_builtin)
#  if __has_builtin(__builtin_isfinite)
#   define SWIG_isfinite(X) (__builtin_isfinite(X))
#  endif
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}

SWIGINTERN std::basic_ostream< char,std::char_traits< char > > &std_basic_ostream_Sl_char_Sg__operator_Sl__Sl___SWIG_17(std::basic_ostream< char > *self,std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &s){
	  *self << s;
	  return *self;
	}




#include <utility>


#include <map>


#include <algorithm>


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  PyObject *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();}  catch(swig::stop_iteration &_e) { { (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  }  resultobj = result; return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; size_t arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; swig::SwigPyIterator *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'"); }
    arg2 = static_cast< size_t >(val2); try { result = (swig::SwigPyIterator *)(arg1)->incr(arg2);}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (swig::SwigPyIterator *)(arg1)->incr();}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_incr", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_SwigPyIterator_incr__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
  "  Possible C/C++ prototypes are:\n" "    swig::SwigPyIterator::incr(size_t)\n" "    swig::SwigPyIterator::incr()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; size_t arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; swig::SwigPyIterator *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'"); }
    arg2 = static_cast< size_t >(val2); try { result = (swig::SwigPyIterator *)(arg1)->decr(arg2);}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (swig::SwigPyIterator *)(arg1)->decr();}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_decr", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_SwigPyIterator_decr__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
  "  Possible C/C++ prototypes are:\n" "    swig::SwigPyIterator::decr(size_t)\n" "    swig::SwigPyIterator::decr()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; ptrdiff_t result;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_distance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2); try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);}
   catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail; }
   resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2); try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);}
   catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail; }
   resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  PyObject *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (PyObject *)(arg1)->next();}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = result; return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  PyObject *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (PyObject *)(arg1)->__next__();}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = result; return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  PyObject *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (PyObject *)(arg1)->previous();}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = result; return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; swig::SwigPyIterator *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_advance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try { result = (swig::SwigPyIterator *)(arg1)->advance(arg2);}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; swig::SwigPyIterator *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try { result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; swig::SwigPyIterator *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try { result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);}
   catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; swig::SwigPyIterator *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);}  catch(swig::stop_iteration &_e) {
    { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; ptrdiff_t val2 ; int ecode2 = 0 ; swig::SwigPyIterator *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);}  catch(swig::stop_iteration &_e) {
    { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; ptrdiff_t result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result)); return resultobj; fail: PyErr_Clear();
  Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_std_vector_double_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; PyObject **arg2 = (PyObject **) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; swig::SwigPyIterator *result = 0 ; arg2 = &swig_obj[0]; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_iterator" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_double_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___nonzero__" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  result = (bool)std_vector_Sl_double_Sg____nonzero__((std::vector< double > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___bool__" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  result = (bool)std_vector_Sl_double_Sg____bool__((std::vector< double > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::size_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___len__" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  result = std_vector_Sl_double_Sg____len__((std::vector< double > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; std::vector< double >::difference_type arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  ptrdiff_t val2 ; int ecode2 = 0 ; ptrdiff_t val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double___getslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___getslice__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___getslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double___getslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'"); }
    arg3 = static_cast< std::vector< double >::difference_type >(val3); try {
    result = (std::vector< double,std::allocator< double > > *)std_vector_Sl_double_Sg____getslice__(arg1,arg2,arg3);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; std::vector< double >::difference_type arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  ptrdiff_t val2 ; int ecode2 = 0 ; ptrdiff_t val3 ; int ecode3 = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___setslice__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___setslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double___setslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'"); }
    arg3 = static_cast< std::vector< double >::difference_type >(val3); try {
    std_vector_Sl_double_Sg____setslice____SWIG_0(arg1,arg2,arg3);}  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; std::vector< double >::difference_type arg3 ;
  std::vector< double,std::allocator< double > > *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ; int ecode2 = 0 ;
  ptrdiff_t val3 ; int ecode3 = 0 ; int res4 = SWIG_OLDOBJ ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___setslice__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___setslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double___setslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'"); }
    arg3 = static_cast< std::vector< double >::difference_type >(val3); {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "std_vector_double___setslice__" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_vector_double___setslice__" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg4 = ptr; }  try {
    std_vector_Sl_double_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< double,std::allocator< double > > const &)*arg4);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj; fail: if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___setslice__(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double___setslice__", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_std_vector_double___setslice____SWIG_0(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          int res = swig::asptr(argv[3], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_std_vector_double___setslice____SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double___setslice__'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::vector< double >::__setslice__(std::vector< double >::difference_type,std::vector< double >::difference_type)\n"
  "    std::vector< double >::__setslice__(std::vector< double >::difference_type,std::vector< double >::difference_type,std::vector< double,std::allocator< double > > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; std::vector< double >::difference_type arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  ptrdiff_t val2 ; int ecode2 = 0 ; ptrdiff_t val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double___delslice__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___delslice__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___delslice__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double___delslice__" "', argument " "3"" of type '" "std::vector< double >::difference_type""'"); }
    arg3 = static_cast< std::vector< double >::difference_type >(val3); try {
    std_vector_Sl_double_Sg____delslice__(arg1,arg2,arg3);}  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ; int ecode2 = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___delitem__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___delitem__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); try {
    std_vector_Sl_double_Sg____delitem____SWIG_0(arg1,arg2);}  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< double,std::allocator< double > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___getitem__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); { if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double___getitem__" "', argument " "2"" of type '" "PySliceObject *""'"); }
     arg2 = (PySliceObject *) swig_obj[1]; }  try {
    result = (std::vector< double,std::allocator< double > > *)std_vector_Sl_double_Sg____getitem____SWIG_0(arg1,arg2);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ; std::vector< double,std::allocator< double > > *arg3 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res3 = SWIG_OLDOBJ ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___setitem__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); { if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double___setitem__" "', argument " "2"" of type '" "PySliceObject *""'"); }
     arg2 = (PySliceObject *) swig_obj[1]; }  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "std_vector_double___setitem__" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_vector_double___setitem__" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; }  try {
    std_vector_Sl_double_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< double,std::allocator< double > > const &)*arg3);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ; void *argp1 = 0 ; int res1 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___setitem__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); { if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double___setitem__" "', argument " "2"" of type '" "PySliceObject *""'"); }
     arg2 = (PySliceObject *) swig_obj[1]; }  try { std_vector_Sl_double_Sg____setitem____SWIG_1(arg1,arg2);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ; void *argp1 = 0 ; int res1 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___delitem__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); { if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double___delitem__" "', argument " "2"" of type '" "PySliceObject *""'"); }
     arg2 = (PySliceObject *) swig_obj[1]; }  try { std_vector_Sl_double_Sg____delitem____SWIG_1(arg1,arg2);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___delitem__(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double___delitem__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { { _v = PySlice_Check(argv[1]); }  if (_v) { return _wrap_std_vector_double___delitem____SWIG_1(self, argc, argv);}
       }  }  if (argc == 2) { int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_std_vector_double___delitem____SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double___delitem__'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::vector< double >::__delitem__(std::vector< double >::difference_type)\n"
  "    std::vector< double >::__delitem__(PySliceObject *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ; int ecode2 = 0 ;
  std::vector< double >::value_type *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___getitem__" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___getitem__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); try {
    result = (std::vector< double >::value_type *) &std_vector_Sl_double_Sg____getitem____SWIG_1((std::vector< double > const *)arg1,arg2);}
   catch(std::out_of_range &_e) { SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); } 
  resultobj = SWIG_From_double(static_cast< double >(*result));
  (void)swig::container_owner<swig::traits<std::vector< double >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___getitem__(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double___getitem__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { { _v = PySlice_Check(argv[1]); }  if (_v) { return _wrap_std_vector_double___getitem____SWIG_0(self, argc, argv);}
       }  }  if (argc == 2) { int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_std_vector_double___getitem____SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double___getitem__'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::vector< double >::__getitem__(PySliceObject *)\n"
  "    std::vector< double >::__getitem__(std::vector< double >::difference_type) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::difference_type arg2 ; std::vector< double >::value_type *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  ptrdiff_t val2 ; int ecode2 = 0 ; std::vector< double >::value_type temp3 ; double val3 ; int ecode3 = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double___setitem__" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double___setitem__" "', argument " "2"" of type '" "std::vector< double >::difference_type""'"); }
    arg2 = static_cast< std::vector< double >::difference_type >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double___setitem__" "', argument " "3"" of type '" "std::vector< double >::value_type""'"); }
    temp3 = static_cast< std::vector< double >::value_type >(val3); arg3 = &temp3; try {
    std_vector_Sl_double_Sg____setitem____SWIG_2(arg1,arg2,(double const &)*arg3);}  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double___setitem__(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double___setitem__", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { { _v = PySlice_Check(argv[1]); }  if (_v) { return _wrap_std_vector_double___setitem____SWIG_1(self, argc, argv);}
       }  }  if (argc == 3) { int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0));
    _v = SWIG_CheckState(res); if (_v) { { _v = PySlice_Check(argv[1]); }  if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_std_vector_double___setitem____SWIG_0(self, argc, argv);}  }  }  }  if (argc == 3) { int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_std_vector_double___setitem____SWIG_2(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double___setitem__'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::vector< double >::__setitem__(PySliceObject *,std::vector< double,std::allocator< double > > const &)\n"
  "    std::vector< double >::__setitem__(PySliceObject *)\n"
  "    std::vector< double >::__setitem__(std::vector< double >::difference_type,std::vector< double >::value_type const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::value_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_pop" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); try {
    result = (std::vector< double >::value_type)std_vector_Sl_double_Sg__pop(arg1);}  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what()); }  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::value_type *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::vector< double >::value_type temp2 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double_append", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_append" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double_append" "', argument " "2"" of type '" "std::vector< double >::value_type""'"); }
    temp2 = static_cast< std::vector< double >::value_type >(val2); arg2 = &temp2;
  std_vector_Sl_double_Sg__append(arg1,(double const &)*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_std_vector_double__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; std::vector< double > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< double > *)new std::vector< double >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_std_vector_double__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; std::vector< double > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_std_vector_double" "', argument " "1"" of type '" "std::vector< double > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_std_vector_double" "', argument " "1"" of type '" "std::vector< double > const &""'"); }
     arg1 = ptr; }  result = (std::vector< double > *)new std::vector< double >((std::vector< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_empty" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = (bool)((std::vector< double > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::size_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_size" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = ((std::vector< double > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double_swap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_swap" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "std_vector_double_swap" "', argument " "2"" of type '" "std::vector< double > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_vector_double_swap" "', argument " "2"" of type '" "std::vector< double > &""'"); }
   arg2 = reinterpret_cast< std::vector< double > * >(argp2); (arg1)->swap(*arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::iterator result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_begin" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::iterator result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_end" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::reverse_iterator result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_rbegin" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::reverse_iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::reverse_iterator result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_rend" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::reverse_iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_clear" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); (arg1)->clear(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; SwigValueWrapper< std::allocator< double > > result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_get_allocator" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = ((std::vector< double > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< double >::allocator_type(static_cast< const std::vector< double >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_std_vector_double__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double >::size_type arg1 ; size_t val1 ; int ecode1 = 0 ;
  std::vector< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_std_vector_double" "', argument " "1"" of type '" "std::vector< double >::size_type""'"); }
    arg1 = static_cast< std::vector< double >::size_type >(val1);
  result = (std::vector< double > *)new std::vector< double >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_pop_back" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); (arg1)->pop_back(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::size_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_resize" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double_resize" "', argument " "2"" of type '" "std::vector< double >::size_type""'"); }
    arg2 = static_cast< std::vector< double >::size_type >(val2); (arg1)->resize(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::iterator arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; swig::SwigPyIterator *iter2 = 0 ; int res2 ; std::vector< double >::iterator result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_erase" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
   else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) { arg2 = iter_t->get_current(); }  else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
     }  result = std_vector_Sl_double_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::iterator arg2 ;
  std::vector< double >::iterator arg3 ; void *argp1 = 0 ; int res1 = 0 ; swig::SwigPyIterator *iter2 = 0 ; int res2 ;
  swig::SwigPyIterator *iter3 = 0 ; int res3 ; std::vector< double >::iterator result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_erase" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
   else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) { arg2 = iter_t->get_current(); }  else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_erase" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
     }  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_erase" "', argument " "3"" of type '" "std::vector< double >::iterator""'"); }
   else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter3);
    if (iter_t) { arg3 = iter_t->get_current(); }  else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_erase" "', argument " "3"" of type '" "std::vector< double >::iterator""'"); }
     }  result = std_vector_Sl_double_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_erase(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double_erase", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) { return _wrap_std_vector_double_erase__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) { int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res); if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) { swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
        if (_v) { return _wrap_std_vector_double_erase__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double_erase'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::vector< double >::erase(std::vector< double >::iterator)\n"
  "    std::vector< double >::erase(std::vector< double >::iterator,std::vector< double >::iterator)\n"); return 0; }
SWIGINTERN PyObject *_wrap_new_std_vector_double__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double >::size_type arg1 ; std::vector< double >::value_type *arg2 = 0 ; size_t val1 ;
  int ecode1 = 0 ; std::vector< double >::value_type temp2 ; double val2 ; int ecode2 = 0 ; std::vector< double > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_std_vector_double" "', argument " "1"" of type '" "std::vector< double >::size_type""'"); }
    arg1 = static_cast< std::vector< double >::size_type >(val1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_std_vector_double" "', argument " "2"" of type '" "std::vector< double >::value_type""'"); }
    temp2 = static_cast< std::vector< double >::value_type >(val2); arg2 = &temp2;
  result = (std::vector< double > *)new std::vector< double >(arg1,(std::vector< double >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_std_vector_double(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_std_vector_double", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_std_vector_double__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_size_t(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_std_vector_double__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_std_vector_double__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_size_t(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_std_vector_double__SWIG_3(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_std_vector_double'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::vector< double >::vector()\n"
  "    std::vector< double >::vector(std::vector< double > const &)\n"
  "    std::vector< double >::vector(std::vector< double >::size_type)\n"
  "    std::vector< double >::vector(std::vector< double >::size_type,std::vector< double >::value_type const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::value_type *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; std::vector< double >::value_type temp2 ;
  double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double_push_back", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_push_back" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double_push_back" "', argument " "2"" of type '" "std::vector< double >::value_type""'"); }
    temp2 = static_cast< std::vector< double >::value_type >(val2); arg2 = &temp2;
  (arg1)->push_back((std::vector< double >::value_type const &)*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::value_type *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_front" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  result = (std::vector< double >::value_type *) &((std::vector< double > const *)arg1)->front();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  (void)swig::container_owner<swig::traits<std::vector< double >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::value_type *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_back" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  result = (std::vector< double >::value_type *) &((std::vector< double > const *)arg1)->back();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  (void)swig::container_owner<swig::traits<std::vector< double >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::size_type arg2 ;
  std::vector< double >::value_type *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; size_t val2 ; int ecode2 = 0 ;
  std::vector< double >::value_type temp3 ; double val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double_assign", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_assign" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double_assign" "', argument " "2"" of type '" "std::vector< double >::size_type""'"); }
    arg2 = static_cast< std::vector< double >::size_type >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double_assign" "', argument " "3"" of type '" "std::vector< double >::value_type""'"); }
    temp3 = static_cast< std::vector< double >::value_type >(val3); arg3 = &temp3;
  (arg1)->assign(arg2,(std::vector< double >::value_type const &)*arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::size_type arg2 ;
  std::vector< double >::value_type *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; size_t val2 ; int ecode2 = 0 ;
  std::vector< double >::value_type temp3 ; double val3 ; int ecode3 = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_resize" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double_resize" "', argument " "2"" of type '" "std::vector< double >::size_type""'"); }
    arg2 = static_cast< std::vector< double >::size_type >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double_resize" "', argument " "3"" of type '" "std::vector< double >::value_type""'"); }
    temp3 = static_cast< std::vector< double >::value_type >(val3); arg3 = &temp3;
  (arg1)->resize(arg2,(std::vector< double >::value_type const &)*arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_resize(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double_resize", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_std_vector_double_resize__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) { int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_std_vector_double_resize__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double_resize'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::vector< double >::resize(std::vector< double >::size_type)\n"
  "    std::vector< double >::resize(std::vector< double >::size_type,std::vector< double >::value_type const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::iterator arg2 ;
  std::vector< double >::value_type *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; swig::SwigPyIterator *iter2 = 0 ; int res2 ;
  std::vector< double >::value_type temp3 ; double val3 ; int ecode3 = 0 ; std::vector< double >::iterator result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_insert" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
   else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) { arg2 = iter_t->get_current(); }  else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
     }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double_insert" "', argument " "3"" of type '" "std::vector< double >::value_type""'"); }
    temp3 = static_cast< std::vector< double >::value_type >(val3); arg3 = &temp3;
  result = std_vector_Sl_double_Sg__insert__SWIG_0(arg1,arg2,(double const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< double >::iterator & >(result)),
  swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::iterator arg2 ;
  std::vector< double >::size_type arg3 ; std::vector< double >::value_type *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ; int res2 ; size_t val3 ; int ecode3 = 0 ; std::vector< double >::value_type temp4 ;
  double val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_insert" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
   else {
    swig::SwigPyIterator_T<std::vector< double >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter2);
    if (iter_t) { arg2 = iter_t->get_current(); }  else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "std_vector_double_insert" "', argument " "2"" of type '" "std::vector< double >::iterator""'"); }
     }  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "std_vector_double_insert" "', argument " "3"" of type '" "std::vector< double >::size_type""'"); }
    arg3 = static_cast< std::vector< double >::size_type >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "std_vector_double_insert" "', argument " "4"" of type '" "std::vector< double >::value_type""'"); }
    temp4 = static_cast< std::vector< double >::value_type >(val4); arg4 = &temp4;
  std_vector_Sl_double_Sg__insert__SWIG_1(arg1,arg2,arg3,(double const &)*arg4); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_insert(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "std_vector_double_insert", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) {
    int _v; int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
    if (_v) { swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_std_vector_double_insert__SWIG_0(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    int res = swig::asptr(argv[0], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res); if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< double >::iterator > *>(iter) != 0));
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_std_vector_double_insert__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_vector_double_insert'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::vector< double >::insert(std::vector< double >::iterator,std::vector< double >::value_type const &)\n"
  "    std::vector< double >::insert(std::vector< double >::iterator,std::vector< double >::size_type,std::vector< double >::value_type const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_std_vector_double_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; std::vector< double >::size_type arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "std_vector_double_reserve", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_reserve" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "std_vector_double_reserve" "', argument " "2"" of type '" "std::vector< double >::size_type""'"); }
    arg2 = static_cast< std::vector< double >::size_type >(val2); (arg1)->reserve(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_vector_double_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< double >::size_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_vector_double_capacity" "', argument " "1"" of type '" "std::vector< double > const *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); result = ((std::vector< double > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_std_vector_double(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_std_vector_double" "', argument " "1"" of type '" "std::vector< double > *""'");  }
   arg1 = reinterpret_cast< std::vector< double > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *std_vector_double_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *std_vector_double_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_ios_base_boolalpha_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_boolalpha is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_boolalpha_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::boolalpha)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_dec_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_dec is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_dec_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::dec)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_fixed_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_fixed is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_fixed_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::fixed)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_hex_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_hex is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_hex_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::hex)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_internal_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_internal is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_internal_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::internal)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_left_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_left is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_left_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::left)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_oct_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_oct is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_oct_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::oct)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_right_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_right is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_right_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::right)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_scientific_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_scientific is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_scientific_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::scientific)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_showbase_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_showbase is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_showbase_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::showbase)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_showpoint_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_showpoint is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_showpoint_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::showpoint)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_showpos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_showpos is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_showpos_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::showpos)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_skipws_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_skipws is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_skipws_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::skipws)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_unitbuf_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_unitbuf is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_unitbuf_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::unitbuf)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_uppercase_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_uppercase is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_uppercase_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::uppercase)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_adjustfield_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_adjustfield is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_adjustfield_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::adjustfield)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_basefield_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_basefield is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_basefield_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::basefield)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_floatfield_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_floatfield is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_floatfield_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::floatfield)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_badbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_badbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_badbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::badbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_eofbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_eofbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_eofbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::eofbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_failbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_failbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_failbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::failbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_goodbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_goodbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_goodbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::goodbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_app_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_app is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_app_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::app)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_ate_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_ate is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_ate_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::ate)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_binary_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_binary is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_binary_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::binary)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_ios_base_in_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_ios_base_in is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_ios_base_in_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::in)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_out_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_out is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_out_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::out)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_trunc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_trunc is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_trunc_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::trunc)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_beg_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_beg is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_beg_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::beg)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_cur_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_cur is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_cur_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::cur)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_end_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_end is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_end_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::end)); return pyobj; }
SWIGINTERN PyObject *_wrap_ios_base_register_callback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::event_callback arg2 = (std::ios_base::event_callback) 0 ;
  int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "ios_base_register_callback", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_register_callback" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_enum_std__ios_base__event_r_std__ios_base_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ios_base_register_callback" "', argument " "2"" of type '" "std::ios_base::event_callback""'");  }
     }  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ios_base_register_callback" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); (arg1)->register_callback(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_flags__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::ios_base::fmtflags result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_flags" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = (std::ios_base::fmtflags)((std::ios_base const *)arg1)->flags();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_flags__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; std::ios_base::fmtflags result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_flags" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_flags" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); result = (std::ios_base::fmtflags)(arg1)->flags(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_flags(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_base_flags", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_ios_base_flags__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_flags__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_base_flags'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::flags() const\n"
  "    std::ios_base::flags(std::ios_base::fmtflags)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_base_setf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; std::ios_base::fmtflags result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_setf" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_setf" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); result = (std::ios_base::fmtflags)(arg1)->setf(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_setf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ;
  std::ios_base::fmtflags arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  std::ios_base::fmtflags result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_setf" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_setf" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ios_base_setf" "', argument " "3"" of type '" "std::ios_base::fmtflags""'"); }
    arg3 = static_cast< std::ios_base::fmtflags >(val3); result = (std::ios_base::fmtflags)(arg1)->setf(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_setf(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_base_setf", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_setf__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_ios_base_setf__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_base_setf'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::setf(std::ios_base::fmtflags)\n"
  "    std::ios_base::setf(std::ios_base::fmtflags,std::ios_base::fmtflags)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_base_unsetf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "ios_base_unsetf", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_unsetf" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_unsetf" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); (arg1)->unsetf(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_precision__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; std::streamsize result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_precision" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = ((std::ios_base const *)arg1)->precision();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_precision__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; std::streamsize arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  size_t val2 ; int ecode2 = 0 ; std::streamsize result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_precision" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_precision" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2); result = (arg1)->precision(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_precision(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_base_precision", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_ios_base_precision__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_precision__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_base_precision'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::precision() const\n"
  "    std::ios_base::precision(std::streamsize)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_base_width__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; std::streamsize result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_width" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = ((std::ios_base const *)arg1)->width();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_width__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ios_base *arg1 = (std::ios_base *) 0 ; std::streamsize arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  size_t val2 ; int ecode2 = 0 ; std::streamsize result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_width" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_width" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2); result = (arg1)->width(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_width(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_base_width", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_ios_base_width__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_width__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_base_width'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::width() const\n" "    std::ios_base::width(std::streamsize)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ios_base_sync_with_stdio__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; bool arg1 ; bool val1 ; int ecode1 = 0 ; bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ios_base_sync_with_stdio" "', argument " "1"" of type '" "bool""'"); }
    arg1 = static_cast< bool >(val1); result = (bool)std::ios_base::sync_with_stdio(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_sync_with_stdio__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; bool result; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (bool)std::ios_base::sync_with_stdio(); resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_sync_with_stdio(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "ios_base_sync_with_stdio", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_ios_base_sync_with_stdio__SWIG_1(self, argc, argv);}  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_bool(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_ios_base_sync_with_stdio__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_base_sync_with_stdio'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::sync_with_stdio(bool)\n" "    std::ios_base::sync_with_stdio()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ios_base_imbue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::locale *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; std::locale result;
  if (!SWIG_Python_UnpackTuple(args, "ios_base_imbue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_imbue" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__locale,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_base_imbue" "', argument " "2"" of type '" "std::locale const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ios_base_imbue" "', argument " "2"" of type '" "std::locale const &""'"); }
   arg2 = reinterpret_cast< std::locale * >(argp2); result = (arg1)->imbue((std::locale const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_getloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::locale result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_getloc" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = ((std::ios_base const *)arg1)->getloc();
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_xalloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  int result; if (!SWIG_Python_UnpackTuple(args, "ios_base_xalloc", 0, 0, 0)) SWIG_fail; result = (int)std::ios_base::xalloc();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_iword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; long *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "ios_base_iword", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_iword" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_iword" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (long *) &(arg1)->iword(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_pword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; void **result = 0 ; if (!SWIG_Python_UnpackTuple(args, "ios_base_pword", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_pword" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_pword" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (void **) &(arg1)->pword(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_void, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ios_base(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__ios_base, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ios_base" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *ios_base_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__ios_base, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ios_rdstate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::ios_base::iostate result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_rdstate" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::ios_base::iostate)((std::basic_ios< char > const *)arg1)->rdstate();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_clear__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::ios_base::iostate arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_clear" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_clear" "', argument " "2"" of type '" "std::ios_base::iostate""'"); }
    arg2 = static_cast< std::ios_base::iostate >(val2); (arg1)->clear(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ios_clear__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_clear" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); (arg1)->clear(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_clear(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_clear", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_clear__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_clear__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_clear'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::clear(std::ios_base::iostate)\n"
  "    std::basic_ios< char >::clear()\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_setstate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::ios_base::iostate arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "ios_setstate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_setstate" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_setstate" "', argument " "2"" of type '" "std::ios_base::iostate""'"); }
    arg2 = static_cast< std::ios_base::iostate >(val2); (arg1)->setstate(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_good(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_good" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->good();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_eof(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_eof" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->eof();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_fail" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->fail();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_bad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_bad" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->bad();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_exceptions__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::ios_base::iostate result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_exceptions" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::ios_base::iostate)((std::basic_ios< char > const *)arg1)->exceptions();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_exceptions__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::ios_base::iostate arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_exceptions" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_exceptions" "', argument " "2"" of type '" "std::ios_base::iostate""'"); }
    arg2 = static_cast< std::ios_base::iostate >(val2); (arg1)->exceptions(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_exceptions(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_exceptions", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_exceptions__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_exceptions__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_exceptions'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::exceptions() const\n"
  "    std::basic_ios< char >::exceptions(std::ios_base::iostate)\n"); return 0; }
SWIGINTERN PyObject *_wrap_new_ios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::basic_ios< char > *result = 0 ; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ios" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ios< char > *)new std::basic_ios< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ios" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ios_tie__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_tie" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *)((std::basic_ios< char > const *)arg1)->tie();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_tie__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ;
  std::basic_ostream< char,std::char_traits< char > > *arg2 = (std::basic_ostream< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_tie" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_tie" "', argument " "2"" of type '" "std::basic_ostream< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_ostream< char,std::char_traits< char > > *)(arg1)->tie(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_tie(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_tie", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_tie__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_tie__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_tie'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::tie() const\n"
  "    std::basic_ios< char >::tie(std::basic_ostream< char,std::char_traits< char > > *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_rdbuf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_rdbuf" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::basic_streambuf< char,std::char_traits< char > > *)((std::basic_ios< char > const *)arg1)->rdbuf();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_rdbuf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_rdbuf" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_rdbuf" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_streambuf< char,std::char_traits< char > > *)(arg1)->rdbuf(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_rdbuf(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_rdbuf", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_rdbuf__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_rdbuf__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_rdbuf'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::rdbuf() const\n"
  "    std::basic_ios< char >::rdbuf(std::basic_streambuf< char,std::char_traits< char > > *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_copyfmt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::basic_ios< char > *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; std::basic_ios< char > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "ios_copyfmt", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_copyfmt" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_copyfmt" "', argument " "2"" of type '" "std::basic_ios< char > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ios_copyfmt" "', argument " "2"" of type '" "std::basic_ios< char > const &""'"); }
   arg2 = reinterpret_cast< std::basic_ios< char > * >(argp2);
  result = (std::basic_ios< char > *) &(arg1)->copyfmt((std::basic_ios< char > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::basic_ios< char >::char_type result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_fill" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::basic_ios< char >::char_type)((std::basic_ios< char > const *)arg1)->fill();
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ;
  std::basic_ios< char >::char_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ;
  std::basic_ios< char >::char_type result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_fill" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_fill" "', argument " "2"" of type '" "std::basic_ios< char >::char_type""'"); }
    arg2 = static_cast< std::basic_ios< char >::char_type >(val2);
  result = (std::basic_ios< char >::char_type)(arg1)->fill(arg2); resultobj = SWIG_From_char(static_cast< char >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fill(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ios_fill", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_fill__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_fill__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ios_fill'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::fill() const\n"
  "    std::basic_ios< char >::fill(std::basic_ios< char >::char_type)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_imbue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::locale *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; std::locale result;
  if (!SWIG_Python_UnpackTuple(args, "ios_imbue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_imbue" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__locale,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_imbue" "', argument " "2"" of type '" "std::locale const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ios_imbue" "', argument " "2"" of type '" "std::locale const &""'"); }
   arg2 = reinterpret_cast< std::locale * >(argp2); result = (arg1)->imbue((std::locale const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_narrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::basic_ios< char >::char_type arg2 ; char arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; char val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  char result; if (!SWIG_Python_UnpackTuple(args, "ios_narrow", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_narrow" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_narrow" "', argument " "2"" of type '" "std::basic_ios< char >::char_type""'"); }
    arg2 = static_cast< std::basic_ios< char >::char_type >(val2); ecode3 = SWIG_AsVal_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ios_narrow" "', argument " "3"" of type '" "char""'"); }  
  arg3 = static_cast< char >(val3); result = (char)((std::basic_ios< char > const *)arg1)->narrow(arg2,arg3);
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_widen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; char arg2 ; void *argp1 = 0 ; int res1 = 0 ; char val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; std::basic_ios< char >::char_type result;
  if (!SWIG_Python_UnpackTuple(args, "ios_widen", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_widen" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_widen" "', argument " "2"" of type '" "char""'"); }  
  arg2 = static_cast< char >(val2);
  result = (std::basic_ios< char >::char_type)((std::basic_ios< char > const *)arg1)->widen(arg2);
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *ios_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ios_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_cin_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable cin is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_cin_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::cin), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN int Swig_var_cout_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable cout is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_cout_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::cout), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN int Swig_var_cerr_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable cerr is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_cerr_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::cerr), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN int Swig_var_clog_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable clog is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_clog_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::clog), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN PyObject *_wrap_new_ostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::basic_ostream< char > *result = 0 ; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ostream" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char > *)new std::basic_ostream< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ostream" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ostream< char,std::char_traits< char > > &(*arg2)(std::basic_ostream< char,std::char_traits< char > > &) = (std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ios< char,std::char_traits< char > > &(*arg2)(std::basic_ios< char,std::char_traits< char > > &) = (std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::ios_base &(*arg2)(std::ios_base &) = (std::ios_base &(*)(std::ios_base &)) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::ios_base &(*)(std::ios_base &)""'");  }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; long arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; long val2 ; int ecode2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long""'"); }  
  arg2 = static_cast< long >(val2); result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned long arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned long val2 ; int ecode2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned long""'"); }
    arg2 = static_cast< unsigned long >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "bool""'"); }  
  arg2 = static_cast< bool >(val2); result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; short arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; short val2 ; int ecode2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "short""'"); }
    arg2 = static_cast< short >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned short arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned short val2 ; int ecode2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned short""'"); }
    arg2 = static_cast< unsigned short >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; long long arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; long long val2 ; int ecode2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long long""'"); }
    arg2 = static_cast< long long >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned long long arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned long long val2 ; int ecode2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned long long""'"); }
    arg2 = static_cast< unsigned long long >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_12(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; double arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_13(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_14(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; long double arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_long_double,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long double""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long double""'"); }
     else { long double * temp = reinterpret_cast< long double * >(argp2); arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_15(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *arg2 = (void *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "void const *""'");  }
   result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<((void const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_16(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_17(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_string< char,std::char_traits< char >,std::allocator< char > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &""'"); }
   arg2 = reinterpret_cast< std::basic_string< char,std::char_traits< char >,std::allocator< char > > * >(argp2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std_basic_ostream_Sl_char_Sg__operator_Sl__Sl___SWIG_17(arg1,(std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream___lshift__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ostream___lshift__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_1(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_2(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_long_double, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_ostream___lshift____SWIG_14(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_16(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_17(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0; int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_15(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_5(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_7(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_short(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_6(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_9(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_8(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_4(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_long(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_3(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res); }  if (_v) { return _wrap_ostream___lshift____SWIG_11(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_long_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_10(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_13(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_12(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream_put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; std::basic_ostream< char >::char_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "ostream_put", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_put" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream_put" "', argument " "2"" of type '" "std::basic_ostream< char >::char_type""'"); }
    arg2 = static_cast< std::basic_ostream< char >::char_type >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->put(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ostream< char >::char_type *arg2 = (std::basic_ostream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "ostream_write", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_write" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream_write" "', argument " "2"" of type '" "std::basic_ostream< char >::char_type const *""'"); }
   arg2 = reinterpret_cast< std::basic_ostream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ostream_write" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->write((std::basic_ostream< char >::char_type const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_ostream_flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_flush" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->flush();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_tellp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_ostream< char >::pos_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_tellp" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); result = (arg1)->tellp();
  resultobj = SWIG_NewPointerObj((new std::basic_ostream< char >::pos_type(static_cast< const std::basic_ostream< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_seekp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ostream< char >::pos_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_seekp" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_streampos,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::pos_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::pos_type""'"); }
     else { std::basic_ostream< char >::pos_type * temp = reinterpret_cast< std::basic_ostream< char >::pos_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->seekp(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_seekp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ostream< char >::off_type arg2 ; std::ios_base::seekdir arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; int val3 ; int ecode3 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_seekp" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_streamoff,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::off_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::off_type""'"); }
     else { std::basic_ostream< char >::off_type * temp = reinterpret_cast< std::basic_ostream< char >::off_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ostream_seekp" "', argument " "3"" of type '" "std::ios_base::seekdir""'"); }
    arg3 = static_cast< std::ios_base::seekdir >(val3);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->seekp(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_seekp(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "ostream_seekp", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streampos, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream_seekp__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streamoff, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_ostream_seekp__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ostream_seekp'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ostream< char >::seekp(std::basic_ostream< char >::pos_type)\n"
  "    std::basic_ostream< char >::seekp(std::basic_ostream< char >::off_type,std::ios_base::seekdir)\n"); return 0; }
SWIGINTERN PyObject *ostream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ostream_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_istream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::basic_istream< char > *result = 0 ; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_istream" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_istream< char > *)new std::basic_istream< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_istream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_istream" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char,std::char_traits< char > > &(*arg2)(std::basic_istream< char,std::char_traits< char > > &) = (std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_ios< char,std::char_traits< char > > &(*arg2)(std::basic_ios< char,std::char_traits< char > > &) = (std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::ios_base &(*arg2)(std::ios_base &) = (std::ios_base &(*)(std::ios_base &)) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::ios_base &(*)(std::ios_base &)""'");  }
     }  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; bool *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; short *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_short,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "short &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "short &""'"); }
   arg2 = reinterpret_cast< short * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned short *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_short,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned short &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned short &""'"); }
   arg2 = reinterpret_cast< unsigned short * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; int *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "int &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned int *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned int &""'"); }
   arg2 = reinterpret_cast< unsigned int * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; long *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "long &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "long &""'"); }
   arg2 = reinterpret_cast< long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned long *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long &""'"); }
   arg2 = reinterpret_cast< unsigned long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; long long *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_long_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "long long &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "long long &""'"); }
   arg2 = reinterpret_cast< long long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned long long *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_long_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long long &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long long &""'"); }
   arg2 = reinterpret_cast< unsigned long long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_12(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; float *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "float &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_13(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; double *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_double,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "double &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "double &""'"); }
   arg2 = reinterpret_cast< double * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_14(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; long double *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_long_double,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "long double &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "long double &""'"); }
   arg2 = reinterpret_cast< long double * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_15(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void **arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_p_void,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "void *&""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "void *&""'"); }
   arg2 = reinterpret_cast< void ** >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_16(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream___rshift__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "istream___rshift__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_1(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_2(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_3(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_short, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_4(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_istream___rshift____SWIG_5(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_6(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_istream___rshift____SWIG_7(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_8(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_istream___rshift____SWIG_9(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long_long, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_istream___rshift____SWIG_10(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_istream___rshift____SWIG_11(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_12(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_13(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long_double, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_istream___rshift____SWIG_14(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_void, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_15(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_16(self, argc, argv);}  }  }  fail:
  Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream_gcount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::streamsize result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_gcount" "', argument " "1"" of type '" "std::basic_istream< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = ((std::basic_istream< char > const *)arg1)->gcount(); resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::basic_istream< char >::int_type result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); result = (std::basic_istream< char >::int_type)(arg1)->get();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_char,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type &""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  std::basic_istream< char >::char_type arg4 ; void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ;
  size_t val3 ; int ecode3 = 0 ; char val4 ; int ecode4 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_get" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); ecode4 = SWIG_AsVal_char(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "istream_get" "', argument " "4"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg4 = static_cast< std::basic_istream< char >::char_type >(val4);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_get" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = 0 ; std::basic_istream< char >::char_type arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; char val3 ; int ecode3 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  ecode3 = SWIG_AsVal_char(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_get" "', argument " "3"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg3 = static_cast< std::basic_istream< char >::char_type >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "istream_get", 0, 4, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_get__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_char, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream_get__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_get__SWIG_5(self, argc, argv);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_get__SWIG_4(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_get__SWIG_3(self, argc, argv);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_char(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_istream_get__SWIG_2(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'istream_get'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_istream< char >::get()\n"
  "    std::basic_istream< char >::get(std::basic_istream< char >::char_type &)\n"
  "    std::basic_istream< char >::get(std::basic_istream< char >::char_type *,std::streamsize,std::basic_istream< char >::char_type)\n"
  "    std::basic_istream< char >::get(std::basic_istream< char >::char_type *,std::streamsize)\n"
  "    std::basic_istream< char >::get(std::basic_streambuf< char,std::char_traits< char > > &,std::basic_istream< char >::char_type)\n"
  "    std::basic_istream< char >::get(std::basic_streambuf< char,std::char_traits< char > > &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_istream_getline__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  std::basic_istream< char >::char_type arg4 ; void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ;
  size_t val3 ; int ecode3 = 0 ; char val4 ; int ecode4 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_getline" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_getline" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_getline" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); ecode4 = SWIG_AsVal_char(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "istream_getline" "', argument " "4"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg4 = static_cast< std::basic_istream< char >::char_type >(val4);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->getline(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_getline__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_getline" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_getline" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_getline" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->getline(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_getline(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "istream_getline", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_getline__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_char(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_istream_getline__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'istream_getline'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::basic_istream< char >::getline(std::basic_istream< char >::char_type *,std::streamsize,std::basic_istream< char >::char_type)\n"
  "    std::basic_istream< char >::getline(std::basic_istream< char >::char_type *,std::streamsize)\n"); return 0; }
SWIGINTERN PyObject *_wrap_istream_ignore__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::streamsize arg2 ;
  std::basic_istream< char >::int_type arg3 ; void *argp1 = 0 ; int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; int val3 ;
  int ecode3 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_ignore" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "istream_ignore" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_ignore" "', argument " "3"" of type '" "std::basic_istream< char >::int_type""'"); }
    arg3 = static_cast< std::basic_istream< char >::int_type >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->ignore(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_ignore__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::streamsize arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; size_t val2 ; int ecode2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_ignore" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "istream_ignore" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->ignore(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_ignore__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_ignore" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->ignore();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_ignore(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "istream_ignore", 0, 3, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_ignore__SWIG_2(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_istream_ignore__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_ignore__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'istream_ignore'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::basic_istream< char >::ignore(std::streamsize,std::basic_istream< char >::int_type)\n"
  "    std::basic_istream< char >::ignore(std::streamsize)\n" "    std::basic_istream< char >::ignore()\n"); return 0; }
SWIGINTERN PyObject *_wrap_istream_peek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_istream< char >::int_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_peek" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = (std::basic_istream< char >::int_type)(arg1)->peek(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "istream_read", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_read" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_read" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_read" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->read(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_readsome(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; std::streamsize result;
  if (!SWIG_Python_UnpackTuple(args, "istream_readsome", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_readsome" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_readsome" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_readsome" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); result = (arg1)->readsome(arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_putback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::basic_istream< char >::char_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "istream_putback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_putback" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "istream_putback" "', argument " "2"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg2 = static_cast< std::basic_istream< char >::char_type >(val2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->putback(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_unget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_unget" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->unget();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_sync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_sync" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); result = (int)(arg1)->sync();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_tellg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_istream< char >::pos_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_tellg" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); result = (arg1)->tellg();
  resultobj = SWIG_NewPointerObj((new std::basic_istream< char >::pos_type(static_cast< const std::basic_istream< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_seekg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::pos_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_seekg" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_streampos,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::pos_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::pos_type""'"); }
     else { std::basic_istream< char >::pos_type * temp = reinterpret_cast< std::basic_istream< char >::pos_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->seekg(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_seekg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::off_type arg2 ; std::ios_base::seekdir arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; int val3 ; int ecode3 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_seekg" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_streamoff,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::off_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::off_type""'"); }
     else { std::basic_istream< char >::off_type * temp = reinterpret_cast< std::basic_istream< char >::off_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_seekg" "', argument " "3"" of type '" "std::ios_base::seekdir""'"); }
    arg3 = static_cast< std::ios_base::seekdir >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->seekg(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_seekg(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "istream_seekg", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streampos, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_seekg__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streamoff, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_seekg__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'istream_seekg'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_istream< char >::seekg(std::basic_istream< char >::pos_type)\n"
  "    std::basic_istream< char >::seekg(std::basic_istream< char >::off_type,std::ios_base::seekdir)\n"); return 0; }
SWIGINTERN PyObject *istream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *istream_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_iostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::basic_iostream< char > *result = 0 ; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_iostream" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_iostream< char > *)new std::basic_iostream< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_iostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_iostream< char > *arg1 = (std::basic_iostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iostream" "', argument " "1"" of type '" "std::basic_iostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_iostream< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *iostream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *iostream_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_endl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char,std::char_traits< char > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "endl" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "endl" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'"); }
   arg1 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std::SWIGTEMPLATEDISAMBIGUATOR endl< char,std::char_traits< char > >(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ends(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char,std::char_traits< char > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ends" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ends" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'"); }
   arg1 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std::SWIGTEMPLATEDISAMBIGUATOR ends< char,std::char_traits< char > >(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char,std::char_traits< char > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flush" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "flush" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'"); }
   arg1 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std::SWIGTEMPLATEDISAMBIGUATOR flush< char,std::char_traits< char > >(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_snpf__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; size_t arg2 ; char *arg3 = (char *) 0 ; void *arg4 = 0 ; int res1 ;
  char *buf1 = 0 ; int alloc1 = 0 ; size_t val2 ; int ecode2 = 0 ; int res3 ; char *buf3 = 0 ; int alloc3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if (!PyArg_UnpackTuple(args, "snpf", 3, 3, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "snpf" "', argument " "1"" of type '" "char *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); ecode2 = SWIG_AsVal_size_t(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "snpf" "', argument " "2"" of type '" "size_t""'"); }  
  arg2 = static_cast< size_t >(val2); res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "snpf" "', argument " "3"" of type '" "char const *""'"); } 
  arg3 = reinterpret_cast< char * >(buf3); result = (int)inlib::snpf(arg1,arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return resultobj; fail: if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return NULL; }
SWIGINTERN PyObject *_wrap_snpf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj; PyObject *varargs;
  PyObject *newargs; newargs = PyTuple_GetSlice(args,0,3); varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args));
  resultobj = _wrap_snpf__varargs__(NULL,newargs,varargs); Py_XDECREF(newargs); Py_XDECREF(varargs); return resultobj; }
SWIGINTERN PyObject *_wrap_sprintf__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int arg2 ; char *arg3 = (char *) 0 ; void *arg4 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; int res3 ; char *buf3 = 0 ; int alloc3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; bool result;
  if (!PyArg_UnpackTuple(args, "sprintf", 3, 3, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sprintf" "', argument " "1"" of type '" "std::string &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sprintf" "', argument " "1"" of type '" "std::string &""'"); }
   arg1 = reinterpret_cast< std::string * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sprintf" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "sprintf" "', argument " "3"" of type '" "char const *""'"); } 
  arg3 = reinterpret_cast< char * >(buf3); result = (bool)inlib::sprintf(*arg1,arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return resultobj; fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return NULL; }
SWIGINTERN PyObject *_wrap_sprintf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj; PyObject *varargs;
  PyObject *newargs; newargs = PyTuple_GetSlice(args,0,3); varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args));
  resultobj = _wrap_sprintf__varargs__(NULL,newargs,varargs); Py_XDECREF(newargs); Py_XDECREF(varargs); return resultobj; }
SWIGINTERN PyObject *_wrap_pi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; double result;
  if (!SWIG_Python_UnpackTuple(args, "pi", 0, 0, 0)) SWIG_fail; result = (double)inlib::pi();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_two_pi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; double result;
  if (!SWIG_Python_UnpackTuple(args, "two_pi", 0, 0, 0)) SWIG_fail; result = (double)inlib::two_pi();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_half_pi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; double result;
  if (!SWIG_Python_UnpackTuple(args, "half_pi", 0, 0, 0)) SWIG_fail; result = (double)inlib::half_pi();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_deg2rad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; double result;
  if (!SWIG_Python_UnpackTuple(args, "deg2rad", 0, 0, 0)) SWIG_fail; result = (double)inlib::deg2rad();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_in_domain_all(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  double arg1 ; double val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "in_domain_all" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (bool)inlib::in_domain_all(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_in_domain_log(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  double arg1 ; double val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "in_domain_log" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (bool)inlib::in_domain_log(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_in_domain_tan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  double arg1 ; double val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "in_domain_tan" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (bool)inlib::in_domain_tan(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_in_domain_acos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  double arg1 ; double val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "in_domain_acos" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (bool)inlib::in_domain_acos(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_random_flat_shoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::flat *arg1 = (inlib::random::flat *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__flat, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "random_flat_shoot" "', argument " "1"" of type '" "inlib::random::flat const *""'");  }
   arg1 = reinterpret_cast< inlib::random::flat * >(argp1); result = (double)((inlib::random::flat const *)arg1)->shoot();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_flat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::flat *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "new_random_flat", 0, 0, 0)) SWIG_fail;
  result = (inlib::random::flat *)new inlib::random::flat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__flat, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_random_flat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::flat *arg1 = (inlib::random::flat *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__flat, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_random_flat" "', argument " "1"" of type '" "inlib::random::flat *""'");  }
   arg1 = reinterpret_cast< inlib::random::flat * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *random_flat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__random__flat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *random_flat_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_random_gauss__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double arg1 ; double arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  inlib::random::gauss *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_random_gauss" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_random_gauss" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (inlib::random::gauss *)new inlib::random::gauss(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__gauss, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_gauss__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double arg1 ; double val1 ; int ecode1 = 0 ; inlib::random::gauss *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_random_gauss" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (inlib::random::gauss *)new inlib::random::gauss(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__gauss, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_gauss__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::random::gauss *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::random::gauss *)new inlib::random::gauss();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__gauss, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_gauss__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::random::gauss *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::random::gauss *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__random__gauss,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_random_gauss" "', argument " "1"" of type '" "inlib::random::gauss const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_random_gauss" "', argument " "1"" of type '" "inlib::random::gauss const &""'"); }
   arg1 = reinterpret_cast< inlib::random::gauss * >(argp1);
  result = (inlib::random::gauss *)new inlib::random::gauss((inlib::random::gauss const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__gauss, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_gauss(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_random_gauss", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_random_gauss__SWIG_2(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__random__gauss, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_random_gauss__SWIG_3(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_random_gauss__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_random_gauss__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_random_gauss'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::random::gauss::gauss(double,double)\n"
  "    inlib::random::gauss::gauss(double)\n" "    inlib::random::gauss::gauss()\n"
  "    inlib::random::gauss::gauss(inlib::random::gauss const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_random_gauss_shoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::gauss *arg1 = (inlib::random::gauss *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__gauss, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "random_gauss_shoot" "', argument " "1"" of type '" "inlib::random::gauss const *""'");  }
   arg1 = reinterpret_cast< inlib::random::gauss * >(argp1); result = (double)((inlib::random::gauss const *)arg1)->shoot();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_random_gauss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::gauss *arg1 = (inlib::random::gauss *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__gauss, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_random_gauss" "', argument " "1"" of type '" "inlib::random::gauss *""'");  }
   arg1 = reinterpret_cast< inlib::random::gauss * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *random_gauss_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__random__gauss, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *random_gauss_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_random_bw__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double arg1 ; double arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  inlib::random::bw *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_random_bw" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_random_bw" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (inlib::random::bw *)new inlib::random::bw(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__bw, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_bw__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double arg1 ; double val1 ; int ecode1 = 0 ; inlib::random::bw *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_random_bw" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (inlib::random::bw *)new inlib::random::bw(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__bw, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_bw__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::random::bw *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::random::bw *)new inlib::random::bw();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__bw, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_bw__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::random::bw *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::random::bw *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__random__bw,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_random_bw" "', argument " "1"" of type '" "inlib::random::bw const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_random_bw" "', argument " "1"" of type '" "inlib::random::bw const &""'"); }
   arg1 = reinterpret_cast< inlib::random::bw * >(argp1);
  result = (inlib::random::bw *)new inlib::random::bw((inlib::random::bw const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__bw, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_bw(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_random_bw", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_random_bw__SWIG_2(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__random__bw, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_random_bw__SWIG_3(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_random_bw__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_random_bw__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_random_bw'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::random::bw::bw(double,double)\n" "    inlib::random::bw::bw(double)\n"
  "    inlib::random::bw::bw()\n" "    inlib::random::bw::bw(inlib::random::bw const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_random_bw_shoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::bw *arg1 = (inlib::random::bw *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__bw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "random_bw_shoot" "', argument " "1"" of type '" "inlib::random::bw const *""'");  }
   arg1 = reinterpret_cast< inlib::random::bw * >(argp1); result = (double)((inlib::random::bw const *)arg1)->shoot();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_random_bw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::bw *arg1 = (inlib::random::bw *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__bw, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_random_bw" "', argument " "1"" of type '" "inlib::random::bw *""'");  }
   arg1 = reinterpret_cast< inlib::random::bw * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *random_bw_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__random__bw, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *random_bw_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_random_exp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double arg1 ; double val1 ; int ecode1 = 0 ; inlib::random::exp *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_random_exp" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = (inlib::random::exp *)new inlib::random::exp(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__exp, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_exp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::random::exp *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::random::exp *)new inlib::random::exp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__exp, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_exp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::random::exp *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::random::exp *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__random__exp,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_random_exp" "', argument " "1"" of type '" "inlib::random::exp const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_random_exp" "', argument " "1"" of type '" "inlib::random::exp const &""'"); }
   arg1 = reinterpret_cast< inlib::random::exp * >(argp1);
  result = (inlib::random::exp *)new inlib::random::exp((inlib::random::exp const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__random__exp, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_random_exp(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_random_exp", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_random_exp__SWIG_1(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__random__exp, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_random_exp__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_random_exp__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_random_exp'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::random::exp::exp(double)\n" "    inlib::random::exp::exp()\n"
  "    inlib::random::exp::exp(inlib::random::exp const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_random_exp_shoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::exp *arg1 = (inlib::random::exp *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__exp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "random_exp_shoot" "', argument " "1"" of type '" "inlib::random::exp const *""'");  }
   arg1 = reinterpret_cast< inlib::random::exp * >(argp1); result = (double)((inlib::random::exp const *)arg1)->shoot();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_random_exp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::random::exp *arg1 = (inlib::random::exp *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__random__exp, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_random_exp" "', argument " "1"" of type '" "inlib::random::exp *""'");  }
   arg1 = reinterpret_cast< inlib::random::exp * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *random_exp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__random__exp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *random_exp_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_str_dup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; bool arg2 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ; bool val2 ;
  int ecode2 = 0 ; char *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_dup" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "str_dup" "', argument " "2"" of type '" "bool""'"); }  
  arg2 = static_cast< bool >(val2); result = (char *)inlib::str_dup((char const *)arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result); if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return resultobj; fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return NULL; }
SWIGINTERN PyObject *_wrap_str_dup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_dup" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); result = (char *)inlib::str_dup((char const *)arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return resultobj; fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return NULL; }
SWIGINTERN PyObject *_wrap_str_dup(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "str_dup", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_str_dup__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_str_dup__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'str_dup'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::str_dup(char const *,bool)\n" "    inlib::str_dup(char const *)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_str_del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; char **arg1 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_p_char,  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_del" "', argument " "1"" of type '" "char *&""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "str_del" "', argument " "1"" of type '" "char *&""'"); }
   arg1 = reinterpret_cast< char ** >(argp1); inlib::str_del(*arg1); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_str_new__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; size_t arg1 ; char arg2 ; size_t val1 ; int ecode1 = 0 ; char val2 ; int ecode2 = 0 ;
  char *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "str_new" "', argument " "1"" of type '" "size_t""'"); }  
  arg1 = static_cast< size_t >(val1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "str_new" "', argument " "2"" of type '" "char""'"); }  
  arg2 = static_cast< char >(val2); result = (char *)inlib::str_new(arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_str_new__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; size_t arg1 ; size_t val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "str_new" "', argument " "1"" of type '" "size_t""'"); }  
  arg1 = static_cast< size_t >(val1); result = (char *)inlib::str_new(arg1); resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_str_new__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; char *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail; result = (char *)inlib::str_new();
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_str_new(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "str_new", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_str_new__SWIG_2(self, argc, argv);}  if (argc == 1) { int _v; { int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res); }  if (_v) { return _wrap_str_new__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_size_t(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_str_new__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'str_new'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::str_new(size_t,char)\n" "    inlib::str_new(size_t)\n"
  "    inlib::str_new()\n"); return 0; }
SWIGINTERN PyObject *_wrap_str_cat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char **arg1 = 0 ; char arg2 ; void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_p_char,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_cat" "', argument " "1"" of type '" "char *&""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "str_cat" "', argument " "1"" of type '" "char *&""'"); }
   arg1 = reinterpret_cast< char ** >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "str_cat" "', argument " "2"" of type '" "char""'"); }  
  arg2 = static_cast< char >(val2); result = (bool)inlib::str_cat(*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_str_cat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char **arg1 = 0 ; char *arg2 = (char *) 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 ;
  char *buf2 = 0 ; int alloc2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_p_char,  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_cat" "', argument " "1"" of type '" "char *&""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "str_cat" "', argument " "1"" of type '" "char *&""'"); }
   arg1 = reinterpret_cast< char ** >(argp1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "str_cat" "', argument " "2"" of type '" "char const *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); result = (bool)inlib::str_cat(*arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_str_cat(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "str_cat", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_p_char, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_str_cat__SWIG_0(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_p_char, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_str_cat__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'str_cat'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::str_cat(char *&,char const)\n" "    inlib::str_cat(char *&,char const *)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_str_rev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_rev" "', argument " "1"" of type '" "char *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); inlib::str_rev(arg1); resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return resultobj; fail: if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return NULL; }
SWIGINTERN PyObject *_wrap_str_sub__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; unsigned int arg2 ; unsigned int arg3 ; int res1 ; char *buf1 = 0 ;
  int alloc1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; char *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_sub" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "str_sub" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "str_sub" "', argument " "3"" of type '" "unsigned int""'"); }  
  arg3 = static_cast< unsigned int >(val3); result = (char *)inlib::str_sub((char const *)arg1,arg2,arg3);
  resultobj = SWIG_FromCharPtr((const char *)result); if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return resultobj; fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return NULL; }
SWIGINTERN PyObject *_wrap_str_sub__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; unsigned int arg2 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; char *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_sub" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "str_sub" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); result = (char *)inlib::str_sub((char const *)arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result); if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return resultobj; fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1; return NULL; }
SWIGINTERN PyObject *_wrap_str_sub(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "str_sub", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_str_sub__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) { int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_str_sub__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'str_sub'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::str_sub(char const *,unsigned int,unsigned int)\n"
  "    inlib::str_sub(char const *,unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_str_rep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ; unsigned int arg2 ; unsigned int arg3 ; char *arg4 = (char *) 0 ; int res1 ; char *buf1 = 0 ;
  int alloc1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; int res4 ; char *buf4 = 0 ;
  int alloc4 = 0 ; PyObject *swig_obj[4] ; char *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "str_rep", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "str_rep" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "str_rep" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "str_rep" "', argument " "3"" of type '" "unsigned int""'"); }  
  arg3 = static_cast< unsigned int >(val3); res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "str_rep" "', argument " "4"" of type '" "char const *""'"); } 
  arg4 = reinterpret_cast< char * >(buf4); result = (char *)inlib::str_rep((char const *)arg1,arg2,arg3,(char const *)arg4);
  resultobj = SWIG_FromCharPtr((const char *)result); if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4; return resultobj; fail: if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4; return NULL; }
SWIGINTERN PyObject *_wrap_sout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sout" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sout" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::sout((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_upper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; char arg1 ;
  char val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_upper" "', argument " "1"" of type '" "char""'"); }  
  arg1 = static_cast< char >(val1); result = (bool)inlib::is_upper(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_is_lower(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; char arg1 ;
  char val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_lower" "', argument " "1"" of type '" "char""'"); }  
  arg1 = static_cast< char >(val1); result = (bool)inlib::is_lower(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_is_digit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; char arg1 ;
  char val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_digit" "', argument " "1"" of type '" "char""'"); }  
  arg1 = static_cast< char >(val1); result = (bool)inlib::is_digit(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_is_letter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; char arg1 ;
  char val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_letter" "', argument " "1"" of type '" "char""'"); }  
  arg1 = static_cast< char >(val1); result = (bool)inlib::is_letter(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_is_printable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; char arg1 ;
  char val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_printable" "', argument " "1"" of type '" "char""'"); }  
  arg1 = static_cast< char >(val1); result = (bool)inlib::is_printable(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_int32_format(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "int32_format", 0, 0, 0)) SWIG_fail;
  result = (char *)inlib::int32_format(); resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_int64_format(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "int64_format", 0, 0, 0)) SWIG_fail;
  result = (char *)inlib::int64_format(); resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_uint32_format(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "uint32_format", 0, 0, 0)) SWIG_fail;
  result = (char *)inlib::uint32_format(); resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_uint64_format(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "uint64_format", 0, 0, 0)) SWIG_fail;
  result = (char *)inlib::uint64_format(); resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_uint32_mx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::uint32 result; if (!SWIG_Python_UnpackTuple(args, "uint32_mx", 0, 0, 0)) SWIG_fail;
  result = (inlib::uint32)inlib::uint32_mx(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_uint64_mx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::uint64 result; if (!SWIG_Python_UnpackTuple(args, "uint64_mx", 0, 0, 0)) SWIG_fail;
  result = (inlib::uint64)inlib::uint64_mx();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_fits_bit_m_c_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::fits_bit *arg1 = (inlib::fits_bit *) 0 ; char arg2 ; void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "fits_bit_m_c_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__fits_bit, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "fits_bit_m_c_set" "', argument " "1"" of type '" "inlib::fits_bit *""'");  }
   arg1 = reinterpret_cast< inlib::fits_bit * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "fits_bit_m_c_set" "', argument " "2"" of type '" "char""'"); }  
  arg2 = static_cast< char >(val2); if (arg1) (arg1)->m_c = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_fits_bit_m_c_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::fits_bit *arg1 = (inlib::fits_bit *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; char result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__fits_bit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "fits_bit_m_c_get" "', argument " "1"" of type '" "inlib::fits_bit *""'");  }
   arg1 = reinterpret_cast< inlib::fits_bit * >(argp1); result = (char) ((arg1)->m_c);
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_fits_bit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::fits_bit *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "new_fits_bit", 0, 0, 0)) SWIG_fail;
  result = (inlib::fits_bit *)new inlib::fits_bit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__fits_bit, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_fits_bit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::fits_bit *arg1 = (inlib::fits_bit *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__fits_bit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_fits_bit" "', argument " "1"" of type '" "inlib::fits_bit *""'");  }
   arg1 = reinterpret_cast< inlib::fits_bit * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *fits_bit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__fits_bit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *fits_bit_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_csv_time_m_l_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::csv_time *arg1 = (inlib::csv_time *) 0 ; long arg2 ; void *argp1 = 0 ; int res1 = 0 ; long val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "csv_time_m_l_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__csv_time, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csv_time_m_l_set" "', argument " "1"" of type '" "inlib::csv_time *""'");  }
   arg1 = reinterpret_cast< inlib::csv_time * >(argp1); ecode2 = SWIG_AsVal_long(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csv_time_m_l_set" "', argument " "2"" of type '" "long""'"); }  
  arg2 = static_cast< long >(val2); if (arg1) (arg1)->m_l = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_csv_time_m_l_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::csv_time *arg1 = (inlib::csv_time *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; long result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__csv_time, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csv_time_m_l_get" "', argument " "1"" of type '" "inlib::csv_time *""'");  }
   arg1 = reinterpret_cast< inlib::csv_time * >(argp1); result = (long) ((arg1)->m_l);
  resultobj = SWIG_From_long(static_cast< long >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_csv_time(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::csv_time *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "new_csv_time", 0, 0, 0)) SWIG_fail;
  result = (inlib::csv_time *)new inlib::csv_time();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__csv_time, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_csv_time(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::csv_time *arg1 = (inlib::csv_time *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__csv_time, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csv_time" "', argument " "1"" of type '" "inlib::csv_time *""'");  }
   arg1 = reinterpret_cast< inlib::csv_time * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *csv_time_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__csv_time, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *csv_time_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_size_char(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "size_char", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::size_char(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_short(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "size_short", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::size_short(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_int(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "size_int", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::size_int(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_int64(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "size_int64", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::size_int64(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "size_float", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::size_float(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_double(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "size_double", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::size_double(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned char arg1 ; unsigned char val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_unsigned_SS_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "unsigned char""'"); }  
  arg1 = static_cast< unsigned char >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char arg1 ; char val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "char""'"); }  
  arg1 = static_cast< char >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned short arg1 ; unsigned short val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_unsigned_SS_short(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "unsigned short""'"); }  
  arg1 = static_cast< unsigned short >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; short arg1 ; short val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_short(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "short""'"); }  
  arg1 = static_cast< short >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned int arg1 ; unsigned int val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "unsigned int""'"); }  
  arg1 = static_cast< unsigned int >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tosx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; unsigned int arg1 ;
  unsigned int val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tosx" "', argument " "1"" of type '" "unsigned int""'"); }  
  arg1 = static_cast< unsigned int >(val1); result = inlib::tosx(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; int arg1 ; int val1 ; int ecode1 = 0 ; std::string result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "int""'"); }  
  arg1 = static_cast< int >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::uint64 arg1 ; unsigned long long val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "inlib::uint64""'"); }  
  arg1 = static_cast< inlib::uint64 >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::int64 arg1 ; long long val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_long_SS_long(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "inlib::int64""'"); }  
  arg1 = static_cast< inlib::int64 >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double arg1 ; double val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; bool arg1 ; bool val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_bool(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "bool""'"); }  
  arg1 = static_cast< bool >(val1); result = inlib::tos(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tos" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tos" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::tos((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_tos__SWIG_15(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned int arg1 ; char **arg2 ; unsigned int val1 ; int ecode1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; std::string result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tos" "', argument " "1"" of type '" "unsigned int""'"); }  
  arg1 = static_cast< unsigned int >(val1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tos" "', argument " "2"" of type '" "char const *[]""'");  }  
  arg2 = reinterpret_cast< char ** >(argp2); result = inlib::tos(arg1,(char const *(*))arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tos(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "tos", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v; {
      int res = SWIG_AsVal_bool(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_10(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_char(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_short(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v; { int res = SWIG_AsVal_short(argv[0], NULL);
      _v = SWIG_CheckState(res); }  if (_v) { return _wrap_tos__SWIG_3(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_4(self, argc, argv);}  }  if (argc == 1) { int _v; { int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res); }  if (_v) { return _wrap_tos__SWIG_5(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_6(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_7(self, argc, argv);}  }  if (argc == 1) { int _v; { int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res); }  if (_v) { return _wrap_tos__SWIG_8(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_tos__SWIG_9(self, argc, argv);}  }  if (argc == 1) { int _v; { int res = SWIG_AsVal_char(argv[0], NULL);
      _v = SWIG_CheckState(res); }  if (_v) { return _wrap_tos__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_tos__SWIG_11(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_char, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_tos__SWIG_15(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'tos'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::tos(unsigned char)\n" "    inlib::tos(char)\n"
  "    inlib::tos(unsigned short)\n" "    inlib::tos(short)\n" "    inlib::tos(unsigned int)\n" "    inlib::tos(int)\n"
  "    inlib::tos(inlib::uint64)\n" "    inlib::tos(inlib::int64)\n" "    inlib::tos(float)\n" "    inlib::tos(double)\n"
  "    inlib::tos(bool)\n" "    inlib::tos(std::string const &)\n" "    inlib::tos(unsigned int,char const *[])\n"); return 0; }
SWIGINTERN PyObject *_wrap_to__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; bool arg1 ; bool val1 ; int ecode1 = 0 ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_bool(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "to" "', argument " "1"" of type '" "bool""'"); }  
  arg1 = static_cast< bool >(val1); result = inlib::to(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_to__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "to" "', argument " "2"" of type '" "bool &""'");  }  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::to((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_to(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "to", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v; {
      int res = SWIG_AsVal_bool(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_to__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_to__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'to'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::to(bool)\n" "    inlib::to(std::string const &,bool &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_d2s(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; double arg1 ;
  double val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "d2s" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = inlib::d2s(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_soutd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; double arg1 ;
  double val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "soutd" "', argument " "1"" of type '" "double""'"); }  
  arg1 = static_cast< double >(val1); result = inlib::soutd(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_words__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::string *arg2 = 0 ; bool arg3 ;
  std::vector< std::string,std::allocator< std::string > > *arg4 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  bool val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "words" "', argument " "3"" of type '" "bool""'"); }  
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "words" "', argument " "4"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "4"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg4 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp4);
  inlib::words((std::string const &)*arg1,(std::string const &)*arg2,arg3,*arg4); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_words__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::string *arg2 = 0 ; bool arg3 ; int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ; bool val3 ; int ecode3 = 0 ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > > > result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "words" "', argument " "3"" of type '" "bool""'"); }  
  arg3 = static_cast< bool >(val3); result = inlib::words((std::string const &)*arg1,(std::string const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new std::vector< std::string,std::allocator< std::string > >(static_cast< const std::vector< std::string,std::allocator< std::string > >& >(result))), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_words__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > > > result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = inlib::words((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::vector< std::string,std::allocator< std::string > >(static_cast< const std::vector< std::string,std::allocator< std::string > >& >(result))), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_words__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::string *arg2 = 0 ; bool arg3 ; unsigned int *arg4 = 0 ;
  std::string::size_type *arg5 = (std::string::size_type *) 0 ; std::string::size_type *arg6 = (std::string::size_type *) 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; bool val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  void *argp5 = 0 ; int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "words" "', argument " "3"" of type '" "bool""'"); }  
  arg3 = static_cast< bool >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "words" "', argument " "4"" of type '" "unsigned int &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "words" "', argument " "4"" of type '" "unsigned int &""'"); }
   arg4 = reinterpret_cast< unsigned int * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_std__string__size_type, 0 |  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "words" "', argument " "5"" of type '" "std::string::size_type *""'");  }
   arg5 = reinterpret_cast< std::string::size_type * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6,SWIGTYPE_p_std__string__size_type, 0 |  0 ); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "words" "', argument " "6"" of type '" "std::string::size_type *""'");  }
   arg6 = reinterpret_cast< std::string::size_type * >(argp6);
  inlib::words((std::string const &)*arg1,(std::string const &)*arg2,arg3,*arg4,arg5,arg6); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_words(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[7] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "words", 0, 6, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_words__SWIG_2(self, argc, argv);}  }  }  if (argc == 3) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_words__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res); if (_v) { return _wrap_words__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 6) {
    int _v; int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
          if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_std__string__size_type, 0);
            _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_std__string__size_type, 0); _v = SWIG_CheckState(res);
              if (_v) { return _wrap_words__SWIG_3(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'words'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::words(std::string const &,std::string const &,bool,std::vector< std::string,std::allocator< std::string > > &)\n"
  "    inlib::words(std::string const &,std::string const &,bool)\n"
  "    inlib::words(std::string const &,std::string const &)\n"
  "    inlib::words(std::string const &,std::string const &,bool,unsigned int &,std::string::size_type *,std::string::size_type *)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_sep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "sep", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sep(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_psep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "psep", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::psep(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_res_sep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "res_sep", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::res_sep(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_isenv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isenv" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isenv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::isenv((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_getenv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "getenv", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getenv" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getenv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getenv" "', argument " "2"" of type '" "std::string &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getenv" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); result = (bool)inlib::getenv((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_get_env_bool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "get_env_bool", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "get_env_bool" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "get_env_bool" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "get_env_bool" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "get_env_bool" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::get_env_bool((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_putenv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "putenv", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "putenv" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "putenv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "putenv" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "putenv" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::putenv((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_rmenv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rmenv" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rmenv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::rmenv((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_check_getenv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ; std::string *arg2 = 0 ; std::string *arg3 = 0 ; std::string *arg4 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ; void *argp4 = 0 ; int res4 = 0 ; PyObject *swig_obj[4] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "check_getenv", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "check_getenv" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "check_getenv" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "check_getenv" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "check_getenv" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  { std::string *ptr = (std::string *)0; res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "check_getenv" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "check_getenv" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "check_getenv" "', argument " "4"" of type '" "std::string &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "check_getenv" "', argument " "4"" of type '" "std::string &""'"); }
   arg4 = reinterpret_cast< std::string * >(argp4);
  result = (bool)inlib::check_getenv(*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; int result; if (!args) SWIG_fail; swig_obj[0] = args;
  { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "execute" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "execute" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (int)inlib::execute((std::string const &)*arg1);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_env_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; std::vector< std::string,std::allocator< std::string > > *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "env_append", 3, 3, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "env_append" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_append" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "env_append" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_append" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; } 
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "env_append" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_append" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp3);
  result = (bool)inlib::env_append((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< std::string,std::allocator< std::string > > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_env_path_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "env_path_append", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "env_path_append" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_path_append" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; } 
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "env_path_append" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_path_append" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (bool)inlib::env_path_append((std::string const &)*arg1,(std::vector< std::string,std::allocator< std::string > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_env_append_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "env_append_path", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "env_append_path" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_append_path" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "env_append_path" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "env_append_path" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::env_append_path((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_expand_vars(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "expand_vars" "', argument " "1"" of type '" "std::string &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "expand_vars" "', argument " "1"" of type '" "std::string &""'"); }
   arg1 = reinterpret_cast< std::string * >(argp1); result = (bool)inlib::expand_vars(*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_file_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "file_name", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "file_name" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "file_name" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "file_name" "', argument " "2"" of type '" "std::string &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "file_name" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); result = (bool)inlib::file_name((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_plugin_prefix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string result; if (!SWIG_Python_UnpackTuple(args, "plugin_prefix", 0, 0, 0)) SWIG_fail; result = inlib::plugin_prefix();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_plugin_suffix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string result; if (!SWIG_Python_UnpackTuple(args, "plugin_suffix", 0, 0, 0)) SWIG_fail; result = inlib::plugin_suffix();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_plugin_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "plugin_name" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "plugin_name" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::plugin_name((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_so_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "so_name" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "so_name" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::so_name((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; unsigned char *arg2 ; unsigned int *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ;
  int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "signature", 3, 3, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "signature" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "signature" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "signature" "', argument " "2"" of type '" "unsigned char []""'");  }
    arg2 = reinterpret_cast< unsigned char * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "signature" "', argument " "3"" of type '" "unsigned int &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "signature" "', argument " "3"" of type '" "unsigned int &""'"); }
   arg3 = reinterpret_cast< unsigned int * >(argp3);
  result = (bool)inlib::file::signature((std::string const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_gzip(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_gzip", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_gzip" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_gzip" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_gzip" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_gzip" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_gzip((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_gzip_usize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; unsigned int *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "gzip_usize", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gzip_usize" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gzip_usize" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gzip_usize" "', argument " "2"" of type '" "unsigned int &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gzip_usize" "', argument " "2"" of type '" "unsigned int &""'"); }
   arg2 = reinterpret_cast< unsigned int * >(argp2); result = (bool)inlib::file::gzip_usize((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_suffix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; bool arg2 ; int res1 = SWIG_OLDOBJ ; bool val2 ; int ecode2 = 0 ;
  std::string result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "suffix" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "suffix" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "suffix" "', argument " "2"" of type '" "bool""'"); }  
  arg2 = static_cast< bool >(val2); result = inlib::suffix((std::string const &)*arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_suffix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "suffix" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "suffix" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::suffix((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_suffix(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "suffix", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_suffix__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_suffix__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'suffix'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::suffix(std::string const &,bool)\n"
  "    inlib::suffix(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_nosuffix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; bool arg2 ; int res1 = SWIG_OLDOBJ ; bool val2 ; int ecode2 = 0 ;
  std::string result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "nosuffix" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "nosuffix" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "nosuffix" "', argument " "2"" of type '" "bool""'"); }  
  arg2 = static_cast< bool >(val2); result = inlib::nosuffix((std::string const &)*arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_nosuffix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "nosuffix" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "nosuffix" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::nosuffix((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_nosuffix(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "nosuffix", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_nosuffix__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_nosuffix__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'nosuffix'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::nosuffix(std::string const &,bool)\n"
  "    inlib::nosuffix(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_base_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_name" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_name" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::base_name((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_absolute_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_absolute_path" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_absolute_path" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::is_absolute_path((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_path_name_suffix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; std::string *arg3 = 0 ; std::string *arg4 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; PyObject *swig_obj[4] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "path_name_suffix", 4, 4, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "path_name_suffix" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "path_name_suffix" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "path_name_suffix" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "path_name_suffix" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "path_name_suffix" "', argument " "3"" of type '" "std::string &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "path_name_suffix" "', argument " "3"" of type '" "std::string &""'"); }
   arg3 = reinterpret_cast< std::string * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "path_name_suffix" "', argument " "4"" of type '" "std::string &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "path_name_suffix" "', argument " "4"" of type '" "std::string &""'"); }
   arg4 = reinterpret_cast< std::string * >(argp4);
  result = (bool)inlib::path_name_suffix((std::string const &)*arg1,*arg2,*arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_dir_name__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; int res1 = SWIG_OLDOBJ ; unsigned int val2 ;
  int ecode2 = 0 ; std::string result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dir_name" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dir_name" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dir_name" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); result = inlib::dir_name((std::string const &)*arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_dir_name__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; std::string result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dir_name" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dir_name" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::dir_name((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_dir_name(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "dir_name", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_dir_name__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_dir_name__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dir_name'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::dir_name(std::string const &,unsigned int)\n"
  "    inlib::dir_name(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_is_f77(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_f77" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_f77" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::is_f77((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_cpp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_cpp" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_cpp" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::is_cpp((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_exists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "exists" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "exists" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::file::exists((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; long *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "size", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "size" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "size" "', argument " "2"" of type '" "long &""'");  }  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "size" "', argument " "2"" of type '" "long &""'"); }
   arg2 = reinterpret_cast< long * >(argp2); result = (bool)inlib::file::size((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_empty" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_empty" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::file::is_empty((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_file_write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "file_write" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "file_write" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "file_write" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "file_write" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::file::write((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_file_write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "file_write" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "file_write" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; } 
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "file_write" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "file_write" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (bool)inlib::file::write((std::string const &)*arg1,(std::vector< std::string,std::allocator< std::string > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_file_write(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "file_write", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_file_write__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_file_write__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'file_write'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::file::write(std::string const &,std::string const &)\n"
  "    inlib::file::write(std::string const &,std::vector< std::string,std::allocator< std::string > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_read_buff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  FILE *arg1 = (FILE *) 0 ; char *arg2 = (char *) 0 ; unsigned int arg3 ; size_t *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  PyObject *swig_obj[4] ; bool result; if (!SWIG_Python_UnpackTuple(args, "read_buff", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_FILE, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "read_buff" "', argument " "1"" of type '" "FILE *""'");  } 
  arg1 = reinterpret_cast< FILE * >(argp1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "read_buff" "', argument " "2"" of type '" "char *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "read_buff" "', argument " "3"" of type '" "unsigned int""'"); }  
  arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "read_buff" "', argument " "4"" of type '" "size_t &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_buff" "', argument " "4"" of type '" "size_t &""'"); }
   arg4 = reinterpret_cast< size_t * >(argp4); result = (bool)inlib::file::read_buff(arg1,arg2,arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_read_cstring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  FILE *arg1 = (FILE *) 0 ; char *arg2 = (char *) 0 ; unsigned int arg3 ; size_t *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  PyObject *swig_obj[4] ; bool result; if (!SWIG_Python_UnpackTuple(args, "read_cstring", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_FILE, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "read_cstring" "', argument " "1"" of type '" "FILE *""'");  } 
  arg1 = reinterpret_cast< FILE * >(argp1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "read_cstring" "', argument " "2"" of type '" "char *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "read_cstring" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "read_cstring" "', argument " "4"" of type '" "size_t &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_cstring" "', argument " "4"" of type '" "size_t &""'"); }
   arg4 = reinterpret_cast< size_t * >(argp4); result = (bool)inlib::file::read_cstring(arg1,arg2,arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "read", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "read" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; } 
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "read" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (bool)inlib::file::read((std::string const &)*arg1,*arg2); resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_read_num__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > >::size_type > arg2 ;
  std::vector< std::string,std::allocator< std::string > > *arg3 = 0 ; std::string *arg4 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; int res4 = SWIG_OLDOBJ ; bool result;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "read_num" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "read_num" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > >::size_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > >::size_type""'"); }
     else {
      std::vector< std::string,std::allocator< std::string > >::size_type * temp = reinterpret_cast< std::vector< std::string,std::allocator< std::string > >::size_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "read_num" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg3 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp3); {
    std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "read_num" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  result = (bool)inlib::file::read_num((std::string const &)*arg1,arg2,*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_read_num__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > >::size_type > arg2 ;
  std::vector< std::string,std::allocator< std::string > > *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "read_num" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "read_num" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > >::size_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > >::size_type""'"); }
     else {
      std::vector< std::string,std::allocator< std::string > >::size_type * temp = reinterpret_cast< std::vector< std::string,std::allocator< std::string > >::size_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "read_num" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_num" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg3 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp3);
  result = (bool)inlib::file::read_num((std::string const &)*arg1,arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_read_num(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "read_num", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_read_num__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) {
    int _v; int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res); if (_v) { return _wrap_read_num__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'read_num'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::file::read_num(std::string const &,std::vector< std::string,std::allocator< std::string > >::size_type,std::vector< std::string,std::allocator< std::string > > &,std::string const &)\n"
  "    inlib::file::read_num(std::string const &,std::vector< std::string,std::allocator< std::string > >::size_type,std::vector< std::string,std::allocator< std::string > > &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_read_bytes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; char **arg2 = 0 ; long *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "read_bytes", 3, 3, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "read_bytes" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_bytes" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_p_char,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "read_bytes" "', argument " "2"" of type '" "char *&""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_bytes" "', argument " "2"" of type '" "char *&""'"); }
   arg2 = reinterpret_cast< char ** >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_long,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "read_bytes" "', argument " "3"" of type '" "long &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "read_bytes" "', argument " "3"" of type '" "long &""'"); }
   arg3 = reinterpret_cast< long * >(argp3); result = (bool)inlib::file::read_bytes((std::string const &)*arg1,*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_write_bytes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; char *arg2 = (char *) 0 ; size_t arg3 ; int res1 = SWIG_OLDOBJ ; int res2 ; char *buf2 = 0 ;
  int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "write_bytes", 3, 3, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_bytes" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bytes" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_bytes" "', argument " "2"" of type '" "char const *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "write_bytes" "', argument " "3"" of type '" "size_t""'"); }  
  arg3 = static_cast< size_t >(val3);
  result = (bool)inlib::file::write_bytes((std::string const &)*arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_is_zip(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_zip", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_zip" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_zip" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_zip" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_zip" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_zip((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_jpeg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_jpeg", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_jpeg" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_jpeg" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_jpeg" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_jpeg" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_jpeg((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_png(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_png", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_png" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_png" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_png" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_png" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_png((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_root(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_root", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_root" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_root" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_root" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_root" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_root((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_iv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_iv", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_iv" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_iv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_iv" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_iv" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_iv((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_fog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_fog", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_fog" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_fog" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_fog" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_fog" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_fog((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_dot", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_dot" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_dot" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_dot" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_dot" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_dot((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_dcm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_dcm", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_dcm" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_dcm" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_dcm" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_dcm" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_dcm((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_aida(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_aida", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_aida" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_aida" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_aida" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_aida" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_aida((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_gdml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_gdml", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_gdml" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_gdml" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_gdml" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_gdml" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_gdml((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_exsg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned int arg1 ; char *arg2 = (char *) 0 ; unsigned int val1 ; int ecode1 = 0 ; int res2 ;
  char *buf2 = 0 ; int alloc2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_exsg" "', argument " "1"" of type '" "unsigned int""'"); }  
  arg1 = static_cast< unsigned int >(val1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_exsg" "', argument " "2"" of type '" "char const *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); result = (bool)inlib::file::is_exsg(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_is_exsg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_exsg" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_exsg" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_exsg" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_exsg" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_exsg((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_exsg(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "is_exsg", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_is_exsg__SWIG_0(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_is_exsg__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'is_exsg'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::file::is_exsg(unsigned int,char const *)\n"
  "    inlib::file::is_exsg(std::string const &,bool &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_is_bsg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned int arg1 ; char *arg2 = (char *) 0 ; unsigned int val1 ; int ecode1 = 0 ; int res2 ;
  char *buf2 = 0 ; int alloc2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_bsg" "', argument " "1"" of type '" "unsigned int""'"); }  
  arg1 = static_cast< unsigned int >(val1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_bsg" "', argument " "2"" of type '" "char const *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); result = (bool)inlib::file::is_bsg(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_is_bsg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_bsg" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_bsg" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_bsg" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_bsg" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_bsg((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_bsg(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "is_bsg", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_is_bsg__SWIG_0(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_is_bsg__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'is_bsg'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::file::is_bsg(unsigned int,char const *)\n"
  "    inlib::file::is_bsg(std::string const &,bool &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_is_scenarios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_scenarios", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_scenarios" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_scenarios" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_scenarios" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_scenarios" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_scenarios((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_slides(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_slides", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_slides" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_slides" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_slides" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_slides" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_slides((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_fits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_fits", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_fits" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_fits" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_fits" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_fits" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_fits((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_hdf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_hdf", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_hdf" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_hdf" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_hdf" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_hdf" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_hdf((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_ps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_ps", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_ps" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_ps" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_ps" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_ps" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_ps((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_csv__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< std::string,std::allocator< std::string > > *arg1 = 0 ; bool *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_csv" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_csv" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg1 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_csv" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_csv" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2);
  result = (bool)inlib::file::is_csv((std::vector< std::string,std::allocator< std::string > > const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_is_csv__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_csv" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_csv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_csv" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_csv" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_csv((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_is_csv(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "is_csv", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_is_csv__SWIG_0(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_is_csv__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'is_csv'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::file::is_csv(std::vector< std::string,std::allocator< std::string > > const &,bool &)\n"
  "    inlib::file::is_csv(std::string const &,bool &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_is_hippo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; bool *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "is_hippo", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_hippo" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_hippo" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "is_hippo" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "is_hippo" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)inlib::file::is_hippo((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_mime_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "mime_type", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mime_type" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mime_type" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mime_type" "', argument " "2"" of type '" "std::string &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mime_type" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); result = (bool)inlib::file::mime_type((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_s_format_guessed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_guessed", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_guessed();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_hdf5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_hdf5", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_hdf5(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_fits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_fits", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_fits(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_fog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_fog", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_fog(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_dot", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_dot(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_dcm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_dcm", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_dcm(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_iv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_iv", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_iv(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_jpeg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_jpeg", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_jpeg(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_png(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_png", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_png(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_root(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_root", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_root(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_csv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_csv", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_csv(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_hippo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_hippo", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_hippo();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_scenarios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_scenarios", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_scenarios();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_slides(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_slides", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_slides();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_zvid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_zvid", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_zvid(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_exsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_exsg", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_exsg(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_gdml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_gdml", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_gdml(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_mac(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_mac", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_mac(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_cmnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_cmnd", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_cmnd(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_aida(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_aida", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_aida(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_format_bsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_format_bsg", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_format_bsg(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_hdf5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_hdf5", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_hdf5(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_fits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_fits", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_fits(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_fog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_fog", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_fog(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_dot", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_dot(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_dcm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_dcm", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_dcm(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_iv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_iv", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_iv(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_hiv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_hiv", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_hiv(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_jpg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_jpg", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_jpg(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_png(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_png", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_png(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_root(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_root", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_root(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_csv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_csv", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_csv(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_hiptxt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_hiptxt", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_hiptxt(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_tnt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_tnt", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_tnt(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_scenarios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_scenarios", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_scenarios();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_slides(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_slides", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_slides(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_zvid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_zvid", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_zvid(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_exsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_exsg", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_exsg(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_gdml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_gdml", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_gdml(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_mac(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_mac", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_mac(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_cmnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_cmnd", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_cmnd(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_aida(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_aida", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_aida(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_ext_bsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_ext_bsg", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::file::s_ext_bsg(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_formats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< std::string,std::allocator< std::string > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formats" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "formats" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg1 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp1); inlib::file::formats(*arg1);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ext_fmt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ext_fmt" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ext_fmt" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::file::ext_fmt((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_found(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; std::vector< std::string,std::allocator< std::string > > *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "found", 3, 3, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "found" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "found" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "found" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "found" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; } 
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "found" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "found" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg3 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp3);
  result = (bool)inlib::file::found((std::string const &)*arg1,(std::string const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_std_remove__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; bool result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_remove" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_remove" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::file::std_remove((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_std_remove__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::vector< std::string,std::allocator< std::string > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_remove" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_remove" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg1 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp1);
  result = (bool)inlib::file::std_remove(*arg1); resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_std_remove(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "std_remove", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_std_remove__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_std_remove__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'std_remove'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::file::std_remove(std::string const &)\n"
  "    inlib::file::std_remove(std::vector< std::string,std::allocator< std::string > > &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_std_rename(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "std_rename", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "std_rename" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_rename" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "std_rename" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "std_rename" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::file::std_rename((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_chmod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; inlib::file::chmod_who arg2 ; inlib::file::chmod_operation arg3 ; inlib::file::chmod_what arg4 ;
  int res1 = SWIG_OLDOBJ ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ;
  PyObject *swig_obj[4] ; bool result; if (!SWIG_Python_UnpackTuple(args, "chmod", 4, 4, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chmod" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chmod" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chmod" "', argument " "2"" of type '" "inlib::file::chmod_who""'"); }
    arg2 = static_cast< inlib::file::chmod_who >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "chmod" "', argument " "3"" of type '" "inlib::file::chmod_operation""'"); }
    arg3 = static_cast< inlib::file::chmod_operation >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "chmod" "', argument " "4"" of type '" "inlib::file::chmod_what""'"); }
    arg4 = static_cast< inlib::file::chmod_what >(val4);
  result = (bool)inlib::file::chmod((std::string const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_quote(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "quote" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "quote" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = inlib::file::quote((std::string const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj;
  fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_mv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; std::string *arg1 = 0 ;
  std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mv", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mv" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mv" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mv" "', argument " "2"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mv" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::file::mv((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_cp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; std::string *arg1 = 0 ;
  std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "cp", 2, 2, swig_obj)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cp" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cp" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cp" "', argument " "2"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cp" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::file::cp((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_rm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rm" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rm" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (bool)inlib::file::rm((std::string const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_delete_reader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::file::reader *arg1 = (inlib::file::reader *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__file__reader, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_reader" "', argument " "1"" of type '" "inlib::file::reader *""'");  }
   arg1 = reinterpret_cast< inlib::file::reader * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_reader_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::file::reader *arg1 = (inlib::file::reader *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "reader_open", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__file__reader, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reader_open" "', argument " "1"" of type '" "inlib::file::reader *""'");  }
   arg1 = reinterpret_cast< inlib::file::reader * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "reader_open" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reader_open" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)(arg1)->open((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_reader_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::file::reader *arg1 = (inlib::file::reader *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__file__reader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reader_close" "', argument " "1"" of type '" "inlib::file::reader *""'");  }
   arg1 = reinterpret_cast< inlib::file::reader * >(argp1); (arg1)->close(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_reader_is_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::file::reader *arg1 = (inlib::file::reader *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__file__reader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reader_is_open" "', argument " "1"" of type '" "inlib::file::reader const *""'");  }
   arg1 = reinterpret_cast< inlib::file::reader * >(argp1); result = (bool)((inlib::file::reader const *)arg1)->is_open();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_reader_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::file::reader *arg1 = (inlib::file::reader *) 0 ; char *arg2 = (char *) 0 ; unsigned int arg3 ; size_t *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "reader_read", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__file__reader, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reader_read" "', argument " "1"" of type '" "inlib::file::reader *""'");  }
   arg1 = reinterpret_cast< inlib::file::reader * >(argp1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "reader_read" "', argument " "2"" of type '" "char *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "reader_read" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "reader_read" "', argument " "4"" of type '" "size_t &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reader_read" "', argument " "4"" of type '" "size_t &""'"); }
   arg4 = reinterpret_cast< size_t * >(argp4); result = (bool)(arg1)->read(arg2,arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *reader_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__file__reader, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FILE_reader_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::FILE_reader *arg1 = (inlib::FILE_reader *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "FILE_reader_open", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__FILE_reader, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FILE_reader_open" "', argument " "1"" of type '" "inlib::FILE_reader *""'");  }
   arg1 = reinterpret_cast< inlib::FILE_reader * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FILE_reader_open" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FILE_reader_open" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)(arg1)->open((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_FILE_reader_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::FILE_reader *arg1 = (inlib::FILE_reader *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__FILE_reader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FILE_reader_close" "', argument " "1"" of type '" "inlib::FILE_reader *""'");  }
   arg1 = reinterpret_cast< inlib::FILE_reader * >(argp1); (arg1)->close(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_FILE_reader_is_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::FILE_reader *arg1 = (inlib::FILE_reader *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__FILE_reader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FILE_reader_is_open" "', argument " "1"" of type '" "inlib::FILE_reader const *""'");  }
   arg1 = reinterpret_cast< inlib::FILE_reader * >(argp1); result = (bool)((inlib::FILE_reader const *)arg1)->is_open();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_FILE_reader_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::FILE_reader *arg1 = (inlib::FILE_reader *) 0 ; char *arg2 = (char *) 0 ; unsigned int arg3 ; size_t *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "FILE_reader_read", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__FILE_reader, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FILE_reader_read" "', argument " "1"" of type '" "inlib::FILE_reader *""'");  }
   arg1 = reinterpret_cast< inlib::FILE_reader * >(argp1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FILE_reader_read" "', argument " "2"" of type '" "char *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FILE_reader_read" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "FILE_reader_read" "', argument " "4"" of type '" "size_t &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FILE_reader_read" "', argument " "4"" of type '" "size_t &""'"); }
   arg4 = reinterpret_cast< size_t * >(argp4); result = (bool)(arg1)->read(arg2,arg3,*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_new_FILE_reader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::FILE_reader *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "new_FILE_reader", 0, 0, 0)) SWIG_fail;
  result = (inlib::FILE_reader *)new inlib::FILE_reader();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__FILE_reader, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_FILE_reader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::FILE_reader *arg1 = (inlib::FILE_reader *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__FILE_reader, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FILE_reader" "', argument " "1"" of type '" "inlib::FILE_reader *""'");  }
   arg1 = reinterpret_cast< inlib::FILE_reader * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *FILE_reader_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__FILE_reader, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FILE_reader_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_key_axis_x_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "key_axis_x_title", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::key_axis_x_title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_key_axis_y_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "key_axis_y_title", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::key_axis_y_title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_key_axis_z_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "key_axis_z_title", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::key_axis_z_title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_title__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_title" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::string *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_title__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; std::string result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_title" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1); result = (arg1)->title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_title(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "base_histo_duidd_title", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_base_histo_duidd_title__SWIG_0(self, argc, argv);}  }  if (argc == 1) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_base_histo_duidd_title__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'base_histo_duidd_title'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::base_histo< double,unsigned int,double,double >::title() const\n"
  "    inlib::histo::base_histo< double,unsigned int,double,double >::title()\n"); return 0; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_set_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_set_title", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_set_title" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1); {
    std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_histo_duidd_set_title" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_set_title" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)(arg1)->set_title((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_dimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::histo::base_histo< double,unsigned int,double,double >::dim_t result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_dimension" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::base_histo< double,unsigned int,double,double >::dim_t)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->dimension();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (unsigned int)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->entries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_all_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_all_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (unsigned int)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->all_entries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_extra_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_extra_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (unsigned int)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->extra_entries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_equivalent_bin_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_equivalent_bin_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->equivalent_bin_entries();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_sum_bin_heights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_sum_bin_heights" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->sum_bin_heights();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_sum_all_bin_heights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_sum_all_bin_heights" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->sum_all_bin_heights();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_sum_extra_bin_heights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_sum_extra_bin_heights" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->sum_extra_bin_heights();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_min_bin_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_min_bin_height" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->min_bin_height();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_max_bin_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_max_bin_height" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->max_bin_height();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (unsigned int)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_entries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_Sw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_Sw" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_Sw();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_Sw2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_Sw2" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_Sw2();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_ith_axis_Sxw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  inlib::histo::base_histo< double,unsigned int,double,double >::dim_t arg2 ; double *arg3 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_get_ith_axis_Sxw", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_ith_axis_Sxw" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "base_histo_duidd_get_ith_axis_Sxw" "', argument " "2"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::dim_t""'"); }
    arg2 = static_cast< inlib::histo::base_histo< double,unsigned int,double,double >::dim_t >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_double,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "base_histo_duidd_get_ith_axis_Sxw" "', argument " "3"" of type '" "double &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_get_ith_axis_Sxw" "', argument " "3"" of type '" "double &""'"); }
   arg3 = reinterpret_cast< double * >(argp3);
  result = (bool)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_ith_axis_Sxw(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_ith_axis_Sx2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  inlib::histo::base_histo< double,unsigned int,double,double >::dim_t arg2 ; double *arg3 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_get_ith_axis_Sx2w", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_ith_axis_Sx2w" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "base_histo_duidd_get_ith_axis_Sx2w" "', argument " "2"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::dim_t""'"); }
    arg2 = static_cast< inlib::histo::base_histo< double,unsigned int,double,double >::dim_t >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_double,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "base_histo_duidd_get_ith_axis_Sx2w" "', argument " "3"" of type '" "double &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_get_ith_axis_Sx2w" "', argument " "3"" of type '" "double &""'"); }
   arg3 = reinterpret_cast< double * >(argp3);
  result = (bool)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_ith_axis_Sx2w(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_all_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_all_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (unsigned int)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_all_entries();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_indices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; std::vector< int,std::allocator< int > > *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_get_indices", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_indices" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_histo_duidd_get_indices" "', argument " "2"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_get_indices" "', argument " "2"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::base_histo< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "base_histo_duidd_get_indices" "', argument " "3"" of type '" "std::vector< int,std::allocator< int > > &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_get_indices" "', argument " "3"" of type '" "std::vector< int,std::allocator< int > > &""'"); }
   arg3 = reinterpret_cast< std::vector< int,std::allocator< int > > * >(argp3);
  ((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_indices(arg2,*arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_is_out(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_is_out", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_is_out" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_histo_duidd_is_out" "', argument " "2"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_is_out" "', argument " "2"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::base_histo< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  result = (bool)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->is_out(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  std::vector< int,std::allocator< int > > *arg2 = 0 ;
  inlib::histo::base_histo< double,unsigned int,double,double >::bn_t *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_get_offset", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_offset" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_histo_duidd_get_offset" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_get_offset" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< int,std::allocator< int > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "base_histo_duidd_get_offset" "', argument " "3"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::bn_t &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_get_offset" "', argument " "3"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double >::bn_t &""'"); }
   arg3 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double >::bn_t * >(argp3);
  result = (bool)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_offset((std::vector< int,std::allocator< int > > const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_bins_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< unsigned int,std::allocator< unsigned int > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_bins_entries" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::vector< unsigned int,std::allocator< unsigned int > > *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->bins_entries();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_bins_sum_w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::vector< double,std::allocator< double > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_bins_sum_w" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::vector< double,std::allocator< double > > *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->bins_sum_w();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_bins_sum_w2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::vector< double,std::allocator< double > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_bins_sum_w2" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::vector< double,std::allocator< double > > *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->bins_sum_w2();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_bins_sum_xw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_bins_sum_xw" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->bins_sum_xw();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_bins_sum_x2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_bins_sum_x2w" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->bins_sum_x2w();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_axis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  inlib::histo::axis< double > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_get_axis", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_axis" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "base_histo_duidd_get_axis" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (inlib::histo::axis< double > *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_axis(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_bins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > result;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_bins" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = ((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_bins();
  resultobj = SWIG_NewPointerObj((new inlib::histo::base_histo< double,unsigned int,double,double >::bn_t(static_cast< const inlib::histo::base_histo< double,unsigned int,double,double >::bn_t& >(result))), SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_title" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (std::string *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_get_dimension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::histo::base_histo< double,unsigned int,double,double >::dim_t result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_get_dimension" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::base_histo< double,unsigned int,double,double >::dim_t)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->get_dimension();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_is_valid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_is_valid" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (bool)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->is_valid();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_annotations__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::base_histo< double,unsigned int,double,double >::annotations_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_annotations" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::base_histo< double,unsigned int,double,double >::annotations_t *) &((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->annotations();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_annotations__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > > result;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_annotations" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1);
  result = (arg1)->annotations();
  resultobj = SWIG_NewPointerObj((new inlib::histo::base_histo< double,unsigned int,double,double >::annotations_t(static_cast< const inlib::histo::base_histo< double,unsigned int,double,double >::annotations_t& >(result))), SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_annotations(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = {
    0} ; if (!(argc = SWIG_Python_UnpackTuple(args, "base_histo_duidd_annotations", 0, 1, argv))) SWIG_fail; --argc;
  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_base_histo_duidd_annotations__SWIG_0(self, argc, argv);}  } 
  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_base_histo_duidd_annotations__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'base_histo_duidd_annotations'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::base_histo< double,unsigned int,double,double >::annotations() const\n"
  "    inlib::histo::base_histo< double,unsigned int,double,double >::annotations()\n"); return 0; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_add_annotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  std::string *arg2 = 0 ; std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_add_annotation", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_add_annotation" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1); {
    std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_histo_duidd_add_annotation" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_add_annotation" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  { std::string *ptr = (std::string *)0; res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "base_histo_duidd_add_annotation" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_add_annotation" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  (arg1)->add_annotation((std::string const &)*arg2,(std::string const &)*arg3); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_base_histo_duidd_annotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::base_histo< double,unsigned int,double,double > *arg1 = (inlib::histo::base_histo< double,unsigned int,double,double > *) 0 ;
  std::string *arg2 = 0 ; std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; void *argp3 = 0 ;
  int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "base_histo_duidd_annotation", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_histo_duidd_annotation" "', argument " "1"" of type '" "inlib::histo::base_histo< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::base_histo< double,unsigned int,double,double > * >(argp1); {
    std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_histo_duidd_annotation" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_annotation" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "base_histo_duidd_annotation" "', argument " "3"" of type '" "std::string &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_histo_duidd_annotation" "', argument " "3"" of type '" "std::string &""'"); }
   arg3 = reinterpret_cast< std::string * >(argp3);
  result = (bool)((inlib::histo::base_histo< double,unsigned int,double,double > const *)arg1)->annotation((std::string const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *base_histo_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_b1_duidd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_error", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_error" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_error(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_update_fast_getters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_update_fast_getters" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1); (arg1)->update_fast_getters();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_coord_to_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; int result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_coord_to_index", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_coord_to_index" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_coord_to_index" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (int)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->coord_to_index(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_mean" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->mean();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_rms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_rms" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->rms();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_entries", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_entries" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_entries" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (unsigned int)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_entries(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_Sw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_Sw", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_Sw" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_Sw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_Sw(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_Sw2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_Sw2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_Sw2" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_Sw2" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_Sw2(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_Sxw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_Sxw", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_Sxw" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_Sxw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_Sxw(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_Sx2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_Sx2w", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_Sx2w" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_Sx2w" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_Sx2w(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_height", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_height" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_height" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_height(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_center(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_center", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_center" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_center" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_center(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_mean", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_mean" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_mean" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_mean(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_bin_rms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_bin_rms", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_bin_rms" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b1_duidd_bin_rms" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->bin_rms(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_axis__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::axis< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_axis" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::axis< double > *) &((inlib::histo::b1< double,unsigned int,double,double > const *)arg1)->axis();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_axis__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::axis< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_axis" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::axis< double > *) &(arg1)->axis();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_axis(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b1_duidd_axis", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b1_duidd_axis__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b1_duidd_axis__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b1_duidd_axis'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::b1< double,unsigned int,double,double >::axis() const\n"
  "    inlib::histo::b1< double,unsigned int,double,double >::axis()\n"); return 0; }
SWIGINTERN PyObject *_wrap_b1_duidd_hprint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "b1_duidd_hprint", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_hprint" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b1_duidd_hprint" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b1_duidd_hprint" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); (arg1)->hprint(*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_configure__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ; double arg4 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; bool result;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_configure" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b1_duidd_configure" "', argument " "2"" of type '" "inlib::histo::b1< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b1_duidd_configure" "', argument " "2"" of type '" "inlib::histo::b1< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::b1< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b1_duidd_configure" "', argument " "3"" of type '" "double""'"); }
    arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b1_duidd_configure" "', argument " "4"" of type '" "double""'"); }
    arg4 = static_cast< double >(val4); result = (bool)(arg1)->configure(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_configure__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b1< double,unsigned int,double,double > *arg1 = (inlib::histo::b1< double,unsigned int,double,double > *) 0 ;
  std::vector< double,std::allocator< double > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b1_duidd_configure" "', argument " "1"" of type '" "inlib::histo::b1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b1< double,unsigned int,double,double > * >(argp1); {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b1_duidd_configure" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b1_duidd_configure" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  result = (bool)(arg1)->configure((std::vector< double,std::allocator< double > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_b1_duidd_configure(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b1_duidd_configure", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_b1_duidd_configure__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_b1_duidd_configure__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b1_duidd_configure'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::b1< double,unsigned int,double,double >::configure(inlib::histo::b1< double,unsigned int,double,double >::bn_t,double,double)\n"
  "    inlib::histo::b1< double,unsigned int,double,double >::configure(std::vector< double,std::allocator< double > > const &)\n");
  return 0; }
SWIGINTERN PyObject *b1_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__b1T_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_b2_duidd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_error", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_error" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_error" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_error(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_update_fast_getters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_update_fast_getters" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1); (arg1)->update_fast_getters();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_mean_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_mean_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->mean_x();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_mean_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_mean_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->mean_y();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_rms_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_rms_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->rms_x();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_rms_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_rms_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->rms_y();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_coord_to_index_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; int result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_coord_to_index_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_coord_to_index_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_coord_to_index_x" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (int)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->coord_to_index_x(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_coord_to_index_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; int result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_coord_to_index_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_coord_to_index_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_coord_to_index_y" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (int)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->coord_to_index_y(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_entries", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_entries" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_entries" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_entries" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3);
  result = (unsigned int)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_entries(arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_Sw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_Sw", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_Sw" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_Sw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_Sw" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_Sw(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_Sw2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_Sw2", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_Sw2" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_Sw2" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_Sw2" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_Sw2(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_Sxw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_Sxw", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_Sxw" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_Sxw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_Sxw" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_Sxw(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_Sx2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_Sx2w", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_Sx2w" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_Sx2w" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_Sx2w" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_Sx2w(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_Syw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_Syw", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_Syw" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_Syw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_Syw" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_Syw(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_Sy2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_Sy2w", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_Sy2w" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_Sy2w" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_Sy2w" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_Sy2w(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_height", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_height" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_height" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_height" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_height(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_center_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_center_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_center_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_center_x" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_center_x(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_center_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_center_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_center_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_center_y" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_center_y(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_mean_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_mean_x", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_mean_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_mean_x" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_mean_x" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_mean_x(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_mean_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_mean_y", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_mean_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_mean_y" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_mean_y" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_mean_y(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_rms_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_rms_x", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_rms_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_rms_x" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_rms_x" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_rms_x(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_rms_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_rms_y", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_rms_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_rms_y" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_bin_rms_y" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_rms_y(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_axis_x__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::axis< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_axis_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::axis< double > *) &((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->axis_x();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_axis_y__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::axis< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_axis_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::axis< double > *) &((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->axis_y();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_axis_x__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::axis< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_axis_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::axis< double > *) &(arg1)->axis_x();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_axis_x(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b2_duidd_axis_x", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b2_duidd_axis_x__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b2_duidd_axis_x__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b2_duidd_axis_x'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::b2< double,unsigned int,double,double >::axis_x() const\n"
  "    inlib::histo::b2< double,unsigned int,double,double >::axis_x()\n"); return 0; }
SWIGINTERN PyObject *_wrap_b2_duidd_axis_y__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::axis< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_axis_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::axis< double > *) &(arg1)->axis_y();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_axis_y(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b2_duidd_axis_y", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b2_duidd_axis_y__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b2_duidd_axis_y__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b2_duidd_axis_y'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::b2< double,unsigned int,double,double >::axis_y() const\n"
  "    inlib::histo::b2< double,unsigned int,double,double >::axis_y()\n"); return 0; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_entries_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_entries_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_entries_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_entries_x" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (unsigned int)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_entries_x(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_height_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_height_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_height_x" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_height_x" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_height_x(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_entries_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_entries_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_entries_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_entries_y" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (unsigned int)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_entries_y(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_bin_height_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_bin_height_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_bin_height_y" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b2_duidd_bin_height_y" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b2< double,unsigned int,double,double > const *)arg1)->bin_height_y(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_hprint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "b2_duidd_hprint", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_hprint" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b2_duidd_hprint" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b2_duidd_hprint" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); (arg1)->hprint(*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_configure__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ; double arg4 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg5 ; double arg6 ; double arg7 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; void *argp5 ; int res5 = 0 ;
  double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; bool result; if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_configure" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b2_duidd_configure" "', argument " "2"" of type '" "inlib::histo::b2< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b2_duidd_configure" "', argument " "2"" of type '" "inlib::histo::b2< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::b2< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b2_duidd_configure" "', argument " "3"" of type '" "double""'"); }
    arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b2_duidd_configure" "', argument " "4"" of type '" "double""'"); }
    arg4 = static_cast< double >(val4); {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "b2_duidd_configure" "', argument " "5"" of type '" "inlib::histo::b2< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b2_duidd_configure" "', argument " "5"" of type '" "inlib::histo::b2< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::b2< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double >::bn_t * >(argp5);
      arg5 = *temp; if (SWIG_IsNewObj(res5)) delete temp; }  }  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "b2_duidd_configure" "', argument " "6"" of type '" "double""'"); }
    arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "b2_duidd_configure" "', argument " "7"" of type '" "double""'"); }
    arg7 = static_cast< double >(val7); result = (bool)(arg1)->configure(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_configure__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b2< double,unsigned int,double,double > *arg1 = (inlib::histo::b2< double,unsigned int,double,double > *) 0 ;
  std::vector< double,std::allocator< double > > *arg2 = 0 ; std::vector< double,std::allocator< double > > *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b2_duidd_configure" "', argument " "1"" of type '" "inlib::histo::b2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b2< double,unsigned int,double,double > * >(argp1); {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b2_duidd_configure" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b2_duidd_configure" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "b2_duidd_configure" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b2_duidd_configure" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; } 
  result = (bool)(arg1)->configure((std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_b2_duidd_configure(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[8] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b2_duidd_configure", 0, 7, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0));
      _v = SWIG_CheckState(res); if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_b2_duidd_configure__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); } 
              if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_b2_duidd_configure__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b2_duidd_configure'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::b2< double,unsigned int,double,double >::configure(inlib::histo::b2< double,unsigned int,double,double >::bn_t,double,double,inlib::histo::b2< double,unsigned int,double,double >::bn_t,double,double)\n"
  "    inlib::histo::b2< double,unsigned int,double,double >::configure(std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n");
  return 0; }
SWIGINTERN PyObject *b2_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__b2T_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_b3_duidd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_error", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_error" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_error" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_error" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_error(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_update_fast_getters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_update_fast_getters" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1); (arg1)->update_fast_getters();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_coord_to_index_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_coord_to_index_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_coord_to_index_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_coord_to_index_x" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->coord_to_index_x(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_coord_to_index_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_coord_to_index_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_coord_to_index_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_coord_to_index_y" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->coord_to_index_y(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_coord_to_index_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_coord_to_index_z", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_coord_to_index_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_coord_to_index_z" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->coord_to_index_z(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_mean_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_mean_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->mean_x();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_mean_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_mean_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->mean_y();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_mean_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_mean_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->mean_z();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_rms_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_rms_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->rms_x();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_rms_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_rms_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->rms_y();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_rms_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_rms_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->rms_z();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_entries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_entries", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_entries" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_entries" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_entries" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_entries" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4);
  result = (unsigned int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_entries(arg2,arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_height", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_height" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_height" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_height" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_height" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_height(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_center_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_center_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_center_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_center_x" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_center_x(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_center_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_center_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_center_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_center_y" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_center_y(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_center_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_center_z", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_center_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_center_z" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_center_z(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_mean_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_mean_x", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_mean_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_mean_x" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_mean_x" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_mean_x" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_mean_x(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_mean_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_mean_y", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_mean_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_mean_y" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_mean_y" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_mean_y" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_mean_y(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_mean_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_mean_z", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_mean_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_mean_z" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_mean_z" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_mean_z" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_mean_z(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_rms_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_rms_x", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_rms_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_rms_x" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_rms_x" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_rms_x" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_rms_x(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_rms_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_rms_y", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_rms_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_rms_y" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_rms_y" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_rms_y" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_rms_y(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_rms_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_rms_z", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_rms_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_rms_z" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_bin_rms_z" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_bin_rms_z" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_rms_z(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_x__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::b3< double,unsigned int,double,double >::axis_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_axis_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::b3< double,unsigned int,double,double >::axis_t *) &((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->axis_x();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_y__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::b3< double,unsigned int,double,double >::axis_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_axis_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::b3< double,unsigned int,double,double >::axis_t *) &((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->axis_y();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_z__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::b3< double,unsigned int,double,double >::axis_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_axis_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::b3< double,unsigned int,double,double >::axis_t *) &((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->axis_z();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_x__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::b3< double,unsigned int,double,double >::axis_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_axis_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::b3< double,unsigned int,double,double >::axis_t *) &(arg1)->axis_x();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_x(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b3_duidd_axis_x", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_axis_x__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_axis_x__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b3_duidd_axis_x'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::b3< double,unsigned int,double,double >::axis_x() const\n"
  "    inlib::histo::b3< double,unsigned int,double,double >::axis_x()\n"); return 0; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_y__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::b3< double,unsigned int,double,double >::axis_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_axis_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::b3< double,unsigned int,double,double >::axis_t *) &(arg1)->axis_y();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_y(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b3_duidd_axis_y", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_axis_y__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_axis_y__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b3_duidd_axis_y'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::b3< double,unsigned int,double,double >::axis_y() const\n"
  "    inlib::histo::b3< double,unsigned int,double,double >::axis_y()\n"); return 0; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_z__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::histo::b3< double,unsigned int,double,double >::axis_t *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_axis_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::b3< double,unsigned int,double,double >::axis_t *) &(arg1)->axis_z();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__axisT_double_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_axis_z(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b3_duidd_axis_z", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_axis_z__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_axis_z__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b3_duidd_axis_z'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::b3< double,unsigned int,double,double >::axis_z() const\n"
  "    inlib::histo::b3< double,unsigned int,double,double >::axis_z()\n"); return 0; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_entries_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_entries_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_entries_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_entries_x" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (unsigned int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_entries_x(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_entries_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_entries_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_entries_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_entries_y" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (unsigned int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_entries_y(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_entries_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; unsigned int result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_entries_z", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_entries_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_entries_z" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (unsigned int)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_entries_z(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_height_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_height_x", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_height_x" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_height_x" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_height_x(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_height_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_height_y", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_height_y" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_height_y" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_height_y(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_bin_height_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_bin_height_z", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_bin_height_z" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "b3_duidd_bin_height_z" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::b3< double,unsigned int,double,double > const *)arg1)->bin_height_z(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_hprint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "b3_duidd_hprint", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_hprint" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b3_duidd_hprint" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_hprint" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); (arg1)->hprint(*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_b3_duidd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_b3_duidd" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_configure__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ; double arg4 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg5 ; double arg6 ; double arg7 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg8 ; double arg9 ; double arg10 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; void *argp5 ; int res5 = 0 ;
  double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; void *argp8 ; int res8 = 0 ; double val9 ; int ecode9 = 0 ;
  double val10 ; int ecode10 = 0 ; bool result; if ((nobjs < 10) || (nobjs > 10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_configure" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b3_duidd_configure" "', argument " "2"" of type '" "inlib::histo::b3< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_configure" "', argument " "2"" of type '" "inlib::histo::b3< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::b3< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "b3_duidd_configure" "', argument " "3"" of type '" "double""'"); }
    arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "b3_duidd_configure" "', argument " "4"" of type '" "double""'"); }
    arg4 = static_cast< double >(val4); {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "b3_duidd_configure" "', argument " "5"" of type '" "inlib::histo::b3< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_configure" "', argument " "5"" of type '" "inlib::histo::b3< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::b3< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double >::bn_t * >(argp5);
      arg5 = *temp; if (SWIG_IsNewObj(res5)) delete temp; }  }  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "b3_duidd_configure" "', argument " "6"" of type '" "double""'"); }
    arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "b3_duidd_configure" "', argument " "7"" of type '" "double""'"); }
    arg7 = static_cast< double >(val7); {
    res8 = SWIG_ConvertPtr(swig_obj[7], &argp8, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "b3_duidd_configure" "', argument " "8"" of type '" "inlib::histo::b3< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_configure" "', argument " "8"" of type '" "inlib::histo::b3< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::b3< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double >::bn_t * >(argp8);
      arg8 = *temp; if (SWIG_IsNewObj(res8)) delete temp; }  }  ecode9 = SWIG_AsVal_double(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "b3_duidd_configure" "', argument " "9"" of type '" "double""'"); }
    arg9 = static_cast< double >(val9); ecode10 = SWIG_AsVal_double(swig_obj[9], &val10); if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "b3_duidd_configure" "', argument " "10"" of type '" "double""'"); }
    arg10 = static_cast< double >(val10); result = (bool)(arg1)->configure(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_configure__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::b3< double,unsigned int,double,double > *arg1 = (inlib::histo::b3< double,unsigned int,double,double > *) 0 ;
  std::vector< double,std::allocator< double > > *arg2 = 0 ; std::vector< double,std::allocator< double > > *arg3 = 0 ;
  std::vector< double,std::allocator< double > > *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "b3_duidd_configure" "', argument " "1"" of type '" "inlib::histo::b3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::b3< double,unsigned int,double,double > * >(argp1); {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "b3_duidd_configure" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_configure" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "b3_duidd_configure" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_configure" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "b3_duidd_configure" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "b3_duidd_configure" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg4 = ptr; } 
  result = (bool)(arg1)->configure((std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3,(std::vector< double,std::allocator< double > > const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3; if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL; }
SWIGINTERN PyObject *_wrap_b3_duidd_configure(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[11] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "b3_duidd_configure", 0, 10, argv))) SWIG_fail; --argc; if (argc == 4) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0));
      _v = SWIG_CheckState(res); if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
        if (_v) { int res = swig::asptr(argv[3], (std::vector< double,std::allocator< double > >**)(0));
          _v = SWIG_CheckState(res); if (_v) { return _wrap_b3_duidd_configure__SWIG_1(self, argc, argv);}  }  }  }  } 
  if (argc == 10) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); } 
              if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
                  _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }
                     if (_v) { { int res = SWIG_AsVal_double(argv[9], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                        return _wrap_b3_duidd_configure__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'b3_duidd_configure'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::b3< double,unsigned int,double,double >::configure(inlib::histo::b3< double,unsigned int,double,double >::bn_t,double,double,inlib::histo::b3< double,unsigned int,double,double >::bn_t,double,double,inlib::histo::b3< double,unsigned int,double,double >::bn_t,double,double)\n"
  "    inlib::histo::b3< double,unsigned int,double,double >::configure(std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n");
  return 0; }
SWIGINTERN PyObject *b3_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__b3T_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_h1_duidd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_bin_error", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_bin_error" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h1_duidd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::h1< double,unsigned int,double,double > const *)arg1)->bin_error(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_multiply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_multiply" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h1_duidd_multiply" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (bool)(arg1)->multiply(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_scale" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h1_duidd_scale" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->scale(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_copy_from_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  inlib::histo::histo_data< double,unsigned int,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_copy_from_data", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_copy_from_data" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h1_duidd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::histo_data< double,unsigned int,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h1_duidd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::histo_data< double,unsigned int,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::histo_data< double,unsigned int,double > * >(argp2);
  (arg1)->copy_from_data((inlib::histo::histo_data< double,unsigned int,double > const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_get_histo_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  SwigValueWrapper< inlib::histo::histo_data< double,unsigned int,double > > result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_get_histo_data" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  result = ((inlib::histo::h1< double,unsigned int,double,double > const *)arg1)->get_histo_data();
  resultobj = SWIG_NewPointerObj((new inlib::histo::histo_data< double,unsigned int,double >(static_cast< const inlib::histo::histo_data< double,unsigned int,double >& >(result))), SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_reset" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1); result = (bool)(arg1)->reset();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  double arg2 ; double arg3 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_fill" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h1_duidd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h1_duidd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); result = (bool)(arg1)->fill(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_fill" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h1_duidd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->fill(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_fill(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "h1_duidd_fill", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_h1_duidd_fill__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_h1_duidd_fill__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'h1_duidd_fill'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::h1< double,unsigned int,double,double >::fill(double,double)\n"
  "    inlib::histo::h1< double,unsigned int,double,double >::fill(double)\n"); return 0; }
SWIGINTERN PyObject *_wrap_h1_duidd_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h1< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_add" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h1_duidd_add" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h1_duidd_add" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->add((inlib::histo::h1< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h1< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_subtract", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_subtract" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h1_duidd_subtract" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h1_duidd_subtract" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->subtract((inlib::histo::h1< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_multiply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h1< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_multiply" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h1_duidd_multiply" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h1_duidd_multiply" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->multiply((inlib::histo::h1< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_multiply(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "h1_duidd_multiply", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_h1_duidd_multiply__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_h1_duidd_multiply__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'h1_duidd_multiply'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::h1< double,unsigned int,double,double >::multiply(double)\n"
  "    inlib::histo::h1< double,unsigned int,double,double >::multiply(inlib::histo::h1< double,unsigned int,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_h1_duidd_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h1< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_divide" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h1_duidd_divide" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h1_duidd_divide" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->divide((inlib::histo::h1< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h1_duidd_gather_bins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h1_duidd_gather_bins", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h1_duidd_gather_bins" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h1_duidd_gather_bins" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (bool)(arg1)->gather_bins(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h1_duidd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ;
  int ecode4 = 0 ; inlib::histo::h1< double,unsigned int,double,double > *result = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h1_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h1_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_h1_duidd" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h1_duidd" "', argument " "2"" of type '" "inlib::histo::h1< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::h1< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_h1_duidd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_h1_duidd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4);
  result = (inlib::histo::h1< double,unsigned int,double,double > *)new inlib::histo::h1< double,unsigned int,double,double >((std::string const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_h1_duidd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; inlib::histo::h1< double,unsigned int,double,double > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h1_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h1_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_h1_duidd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h1_duidd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; } 
  result = (inlib::histo::h1< double,unsigned int,double,double > *)new inlib::histo::h1< double,unsigned int,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_delete_h1_duidd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1< double,unsigned int,double,double > *arg1 = (inlib::histo::h1< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_h1_duidd" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h1_duidd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::h1< double,unsigned int,double,double > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::histo::h1< double,unsigned int,double,double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h1_duidd" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h1_duidd" "', argument " "1"" of type '" "inlib::histo::h1< double,unsigned int,double,double > const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::h1< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::h1< double,unsigned int,double,double > *)new inlib::histo::h1< double,unsigned int,double,double >((inlib::histo::h1< double,unsigned int,double,double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h1_duidd(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_h1_duidd", 0, 4, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_h1_duidd__SWIG_2(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_new_h1_duidd__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_h1_duidd__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_h1_duidd'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::h1< double,unsigned int,double,double >::h1(std::string const &,inlib::histo::h1< double,unsigned int,double,double >::bn_t,double,double)\n"
  "    inlib::histo::h1< double,unsigned int,double,double >::h1(std::string const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::h1< double,unsigned int,double,double >::h1(inlib::histo::h1< double,unsigned int,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *h1_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__h1T_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *h1_duidd_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_h2_duidd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "h2_duidd_bin_error", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_bin_error" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h2_duidd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h2_duidd_bin_error" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::h2< double,unsigned int,double,double > const *)arg1)->bin_error(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_multiply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_multiply" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h2_duidd_multiply" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (bool)(arg1)->multiply(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h2_duidd_scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_scale" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h2_duidd_scale" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->scale(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_copy_from_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  inlib::histo::histo_data< double,unsigned int,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "h2_duidd_copy_from_data", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_copy_from_data" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h2_duidd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::histo_data< double,unsigned int,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h2_duidd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::histo_data< double,unsigned int,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::histo_data< double,unsigned int,double > * >(argp2);
  (arg1)->copy_from_data((inlib::histo::histo_data< double,unsigned int,double > const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_get_histo_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  SwigValueWrapper< inlib::histo::histo_data< double,unsigned int,double > > result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_get_histo_data" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  result = ((inlib::histo::h2< double,unsigned int,double,double > const *)arg1)->get_histo_data();
  resultobj = SWIG_NewPointerObj((new inlib::histo::histo_data< double,unsigned int,double >(static_cast< const inlib::histo::histo_data< double,unsigned int,double >& >(result))), SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_reset" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1); result = (bool)(arg1)->reset();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  double arg2 ; double arg3 ; double arg4 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_fill" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h2_duidd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h2_duidd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "h2_duidd_fill" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); result = (bool)(arg1)->fill(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  double arg2 ; double arg3 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_fill" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h2_duidd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h2_duidd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); result = (bool)(arg1)->fill(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_fill(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "h2_duidd_fill", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_h2_duidd_fill__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_h2_duidd_fill__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'h2_duidd_fill'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::h2< double,unsigned int,double,double >::fill(double,double,double)\n"
  "    inlib::histo::h2< double,unsigned int,double,double >::fill(double,double)\n"); return 0; }
SWIGINTERN PyObject *_wrap_h2_duidd_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h2< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h2_duidd_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_add" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h2_duidd_add" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h2_duidd_add" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->add((inlib::histo::h2< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h2< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h2_duidd_subtract", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_subtract" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h2_duidd_subtract" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h2_duidd_subtract" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->subtract((inlib::histo::h2< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_multiply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h2< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_multiply" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h2_duidd_multiply" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h2_duidd_multiply" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->multiply((inlib::histo::h2< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h2_duidd_multiply(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "h2_duidd_multiply", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_h2_duidd_multiply__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_h2_duidd_multiply__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'h2_duidd_multiply'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::h2< double,unsigned int,double,double >::multiply(double)\n"
  "    inlib::histo::h2< double,unsigned int,double,double >::multiply(inlib::histo::h2< double,unsigned int,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_h2_duidd_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h2< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h2_duidd_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h2_duidd_divide" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h2_duidd_divide" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h2_duidd_divide" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->divide((inlib::histo::h2< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h2_duidd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg5 ; double arg6 ; double arg7 ;
  int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  void *argp5 ; int res5 = 0 ; double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ;
  inlib::histo::h2< double,unsigned int,double,double > *result = 0 ; if ((nobjs < 7) || (nobjs > 7)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h2_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_h2_duidd" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "2"" of type '" "inlib::histo::h2< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::h2< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_h2_duidd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_h2_duidd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_h2_duidd" "', argument " "5"" of type '" "inlib::histo::h2< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "5"" of type '" "inlib::histo::h2< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::h2< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double >::bn_t * >(argp5);
      arg5 = *temp; if (SWIG_IsNewObj(res5)) delete temp; }  }  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_h2_duidd" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_h2_duidd" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7);
  result = (inlib::histo::h2< double,unsigned int,double,double > *)new inlib::histo::h2< double,unsigned int,double,double >((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_h2_duidd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ; inlib::histo::h2< double,unsigned int,double,double > *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h2_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_h2_duidd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_h2_duidd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; } 
  result = (inlib::histo::h2< double,unsigned int,double,double > *)new inlib::histo::h2< double,unsigned int,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_delete_h2_duidd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2< double,unsigned int,double,double > *arg1 = (inlib::histo::h2< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_h2_duidd" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h2_duidd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::h2< double,unsigned int,double,double > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::histo::h2< double,unsigned int,double,double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h2_duidd" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h2_duidd" "', argument " "1"" of type '" "inlib::histo::h2< double,unsigned int,double,double > const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::h2< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::h2< double,unsigned int,double,double > *)new inlib::histo::h2< double,unsigned int,double,double >((inlib::histo::h2< double,unsigned int,double,double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h2_duidd(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[8] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_h2_duidd", 0, 7, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_h2_duidd__SWIG_2(self, argc, argv);}  }  if (argc == 3) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_new_h2_duidd__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 7) {
    int _v; int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); } 
              if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_new_h2_duidd__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_h2_duidd'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::h2< double,unsigned int,double,double >::h2(std::string const &,inlib::histo::h2< double,unsigned int,double,double >::bn_t,double,double,inlib::histo::h2< double,unsigned int,double,double >::bn_t,double,double)\n"
  "    inlib::histo::h2< double,unsigned int,double,double >::h2(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::h2< double,unsigned int,double,double >::h2(inlib::histo::h2< double,unsigned int,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *h2_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__h2T_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *h2_duidd_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_h3_duidd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  int arg2 ; int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "h3_duidd_bin_error", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_bin_error" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h3_duidd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h3_duidd_bin_error" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "h3_duidd_bin_error" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  result = (double)((inlib::histo::h3< double,unsigned int,double,double > const *)arg1)->bin_error(arg2,arg3,arg4);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_multiply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_multiply" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h3_duidd_multiply" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (bool)(arg1)->multiply(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h3_duidd_scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_scale" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h3_duidd_scale" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->scale(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_copy_from_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  inlib::histo::histo_data< double,unsigned int,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "h3_duidd_copy_from_data", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_copy_from_data" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h3_duidd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::histo_data< double,unsigned int,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h3_duidd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::histo_data< double,unsigned int,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::histo_data< double,unsigned int,double > * >(argp2);
  (arg1)->copy_from_data((inlib::histo::histo_data< double,unsigned int,double > const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_get_histo_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  SwigValueWrapper< inlib::histo::histo_data< double,unsigned int,double > > result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_get_histo_data" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  result = ((inlib::histo::h3< double,unsigned int,double,double > const *)arg1)->get_histo_data();
  resultobj = SWIG_NewPointerObj((new inlib::histo::histo_data< double,unsigned int,double >(static_cast< const inlib::histo::histo_data< double,unsigned int,double >& >(result))), SWIGTYPE_p_inlib__histo__histo_dataT_double_unsigned_int_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_reset" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1); result = (bool)(arg1)->reset();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; double arg3 ; double arg4 ; double arg5 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_fill" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h3_duidd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h3_duidd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "h3_duidd_fill" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "h3_duidd_fill" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5); result = (bool)(arg1)->fill(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  double arg2 ; double arg3 ; double arg4 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_fill" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "h3_duidd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "h3_duidd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "h3_duidd_fill" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); result = (bool)(arg1)->fill(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_fill(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "h3_duidd_fill", 0, 5, argv))) SWIG_fail; --argc; if (argc == 4) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_h3_duidd_fill__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_h3_duidd_fill__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'h3_duidd_fill'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::h3< double,unsigned int,double,double >::fill(double,double,double,double)\n"
  "    inlib::histo::h3< double,unsigned int,double,double >::fill(double,double,double)\n"); return 0; }
SWIGINTERN PyObject *_wrap_h3_duidd_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h3< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h3_duidd_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_add" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h3_duidd_add" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h3_duidd_add" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->add((inlib::histo::h3< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h3< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h3_duidd_subtract", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_subtract" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h3_duidd_subtract" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h3_duidd_subtract" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->subtract((inlib::histo::h3< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_multiply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h3< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_multiply" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h3_duidd_multiply" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h3_duidd_multiply" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->multiply((inlib::histo::h3< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_h3_duidd_multiply(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "h3_duidd_multiply", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_h3_duidd_multiply__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_h3_duidd_multiply__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'h3_duidd_multiply'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::h3< double,unsigned int,double,double >::multiply(double)\n"
  "    inlib::histo::h3< double,unsigned int,double,double >::multiply(inlib::histo::h3< double,unsigned int,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_h3_duidd_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  inlib::histo::h3< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "h3_duidd_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "h3_duidd_divide" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "h3_duidd_divide" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "h3_duidd_divide" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp2);
  result = (bool)(arg1)->divide((inlib::histo::h3< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h3_duidd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg5 ; double arg6 ; double arg7 ;
  SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg8 ; double arg9 ; double arg10 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; void *argp5 ; int res5 = 0 ;
  double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; void *argp8 ; int res8 = 0 ; double val9 ; int ecode9 = 0 ;
  double val10 ; int ecode10 = 0 ; inlib::histo::h3< double,unsigned int,double,double > *result = 0 ;
  if ((nobjs < 10) || (nobjs > 10)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h3_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_h3_duidd" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "2"" of type '" "inlib::histo::h3< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::h3< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_h3_duidd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_h3_duidd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_h3_duidd" "', argument " "5"" of type '" "inlib::histo::h3< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "5"" of type '" "inlib::histo::h3< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::h3< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double >::bn_t * >(argp5);
      arg5 = *temp; if (SWIG_IsNewObj(res5)) delete temp; }  }  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_h3_duidd" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_h3_duidd" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7); {
    res8 = SWIG_ConvertPtr(swig_obj[7], &argp8, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_h3_duidd" "', argument " "8"" of type '" "inlib::histo::h3< double,unsigned int,double,double >::bn_t""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "8"" of type '" "inlib::histo::h3< double,unsigned int,double,double >::bn_t""'"); }
     else {
      inlib::histo::h3< double,unsigned int,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double >::bn_t * >(argp8);
      arg8 = *temp; if (SWIG_IsNewObj(res8)) delete temp; }  }  ecode9 = SWIG_AsVal_double(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_h3_duidd" "', argument " "9"" of type '" "double""'"); }  
  arg9 = static_cast< double >(val9); ecode10 = SWIG_AsVal_double(swig_obj[9], &val10); if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_h3_duidd" "', argument " "10"" of type '" "double""'"); }  
  arg10 = static_cast< double >(val10);
  result = (inlib::histo::h3< double,unsigned int,double,double > *)new inlib::histo::h3< double,unsigned int,double,double >((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_h3_duidd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; std::vector< double,std::allocator< double > > *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ;
  inlib::histo::h3< double,unsigned int,double,double > *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h3_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_h3_duidd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_h3_duidd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_h3_duidd" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg4 = ptr; } 
  result = (inlib::histo::h3< double,unsigned int,double,double > *)new inlib::histo::h3< double,unsigned int,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3,(std::vector< double,std::allocator< double > > const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3; if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_h3_duidd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3< double,unsigned int,double,double > *arg1 = (inlib::histo::h3< double,unsigned int,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_h3_duidd" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h3_duidd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::h3< double,unsigned int,double,double > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::histo::h3< double,unsigned int,double,double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_h3_duidd" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_h3_duidd" "', argument " "1"" of type '" "inlib::histo::h3< double,unsigned int,double,double > const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::h3< double,unsigned int,double,double > * >(argp1);
  result = (inlib::histo::h3< double,unsigned int,double,double > *)new inlib::histo::h3< double,unsigned int,double,double >((inlib::histo::h3< double,unsigned int,double,double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_h3_duidd(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[11] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_h3_duidd", 0, 10, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_h3_duidd__SWIG_2(self, argc, argv);}  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) {
          int res = swig::asptr(argv[3], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_new_h3_duidd__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 10) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); } 
              if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  int res = SWIG_ConvertPtr(argv[7], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
                  _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }
                     if (_v) { { int res = SWIG_AsVal_double(argv[9], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                        return _wrap_new_h3_duidd__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_h3_duidd'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::h3< double,unsigned int,double,double >::h3(std::string const &,inlib::histo::h3< double,unsigned int,double,double >::bn_t,double,double,inlib::histo::h3< double,unsigned int,double,double >::bn_t,double,double,inlib::histo::h3< double,unsigned int,double,double >::bn_t,double,double)\n"
  "    inlib::histo::h3< double,unsigned int,double,double >::h3(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::h3< double,unsigned int,double,double >::h3(inlib::histo::h3< double,unsigned int,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *h3_duidd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__h3T_double_unsigned_int_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *h3_duidd_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_p1_duiddd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_bin_error", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_bin_error" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->bin_error(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_multiply", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_multiply" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_multiply" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (bool)(arg1)->multiply(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_scale" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_scale" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->scale(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_bin_Svw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_bin_Svw", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_bin_Svw" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_bin_Svw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->bin_Svw(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_bin_Sv2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_bin_Sv2w", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_bin_Sv2w" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_bin_Sv2w" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->bin_Sv2w(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_reset" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (bool)(arg1)->reset(); resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_copy_from_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  inlib::histo::profile_data< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_copy_from_data", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_copy_from_data" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "p1_duiddd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::profile_data< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "p1_duiddd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::profile_data< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::profile_data< double,unsigned int,double,double > * >(argp2);
  (arg1)->copy_from_data((inlib::histo::profile_data< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_get_histo_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  SwigValueWrapper< inlib::histo::profile_data< double,unsigned int,double,double > > result; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_get_histo_data" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = ((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->get_histo_data();
  resultobj = SWIG_NewPointerObj((new inlib::histo::profile_data< double,unsigned int,double,double >(static_cast< const inlib::histo::profile_data< double,unsigned int,double,double >& >(result))), SWIGTYPE_p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; double arg3 ; double arg4 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_fill" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p1_duiddd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "p1_duiddd_fill" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); result = (bool)(arg1)->fill(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; double arg3 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_fill" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p1_duiddd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); result = (bool)(arg1)->fill(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_fill(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "p1_duiddd_fill", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_p1_duiddd_fill__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_p1_duiddd_fill__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'p1_duiddd_fill'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::fill(double,double,double)\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::fill(double,double)\n"); return 0; }
SWIGINTERN PyObject *_wrap_p1_duiddd_bin_rms_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_bin_rms_value", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_bin_rms_value" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_bin_rms_value" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2);
  result = (double)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->bin_rms_value(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_add" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "p1_duiddd_add" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "p1_duiddd_add" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp2);
  result = (bool)(arg1)->add((inlib::histo::p1< double,unsigned int,double,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_subtract", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_subtract" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "p1_duiddd_subtract" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "p1_duiddd_subtract" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp2);
  result = (bool)(arg1)->subtract((inlib::histo::p1< double,unsigned int,double,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_gather_bins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p1_duiddd_gather_bins", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_gather_bins" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p1_duiddd_gather_bins" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (bool)(arg1)->gather_bins(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_cut_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_cut_v" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (bool)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->cut_v();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_min_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_min_v" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (double)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->min_v();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_max_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_max_v" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (double)((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->max_v();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_p1_duiddd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ;
  int ecode4 = 0 ; inlib::histo::p1< double,unsigned int,double,double,double > *result = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double >::bn_t""'"); }
     else {
      inlib::histo::p1< double,unsigned int,double,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_p1_duiddd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_p1_duiddd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4);
  result = (inlib::histo::p1< double,unsigned int,double,double,double > *)new inlib::histo::p1< double,unsigned int,double,double,double >((std::string const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_p1_duiddd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; double arg5 ; double arg6 ; int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ;
  double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ; double val6 ; int ecode6 = 0 ;
  inlib::histo::p1< double,unsigned int,double,double,double > *result = 0 ; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double >::bn_t""'"); }
     else {
      inlib::histo::p1< double,unsigned int,double,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_p1_duiddd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_p1_duiddd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_p1_duiddd" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5); ecode6 = SWIG_AsVal_double(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_p1_duiddd" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6);
  result = (inlib::histo::p1< double,unsigned int,double,double,double > *)new inlib::histo::p1< double,unsigned int,double,double,double >((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_p1_duiddd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; inlib::histo::p1< double,unsigned int,double,double,double > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; } 
  result = (inlib::histo::p1< double,unsigned int,double,double,double > *)new inlib::histo::p1< double,unsigned int,double,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_p1_duiddd__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ; double arg3 ;
  double arg4 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  inlib::histo::p1< double,unsigned int,double,double,double > *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_p1_duiddd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_p1_duiddd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4);
  result = (inlib::histo::p1< double,unsigned int,double,double,double > *)new inlib::histo::p1< double,unsigned int,double,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_delete_p1_duiddd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_p1_duiddd" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_p1_duiddd__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; inlib::histo::p1< double,unsigned int,double,double,double > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p1_duiddd" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (inlib::histo::p1< double,unsigned int,double,double,double > *)new inlib::histo::p1< double,unsigned int,double,double,double >((inlib::histo::p1< double,unsigned int,double,double,double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_p1_duiddd(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[7] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_p1_duiddd", 0, 6, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_p1_duiddd__SWIG_4(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_new_p1_duiddd__SWIG_2(self, argc, argv);}  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_p1_duiddd__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_p1_duiddd__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 6) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_new_p1_duiddd__SWIG_1(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_p1_duiddd'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::p1(std::string const &,inlib::histo::p1< double,unsigned int,double,double,double >::bn_t,double,double)\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::p1(std::string const &,inlib::histo::p1< double,unsigned int,double,double,double >::bn_t,double,double,double,double)\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::p1(std::string const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::p1(std::string const &,std::vector< double,std::allocator< double > > const &,double,double)\n"
  "    inlib::histo::p1< double,unsigned int,double,double,double >::p1(inlib::histo::p1< double,unsigned int,double,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_p1_duiddd_bins_sum_vw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::vector< double,std::allocator< double > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_bins_sum_vw" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (std::vector< double,std::allocator< double > > *) &((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->bins_sum_vw();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_p1_duiddd_bins_sum_v2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p1< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::vector< double,std::allocator< double > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p1_duiddd_bins_sum_v2w" "', argument " "1"" of type '" "inlib::histo::p1< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1< double,unsigned int,double,double,double > * >(argp1);
  result = (std::vector< double,std::allocator< double > > *) &((inlib::histo::p1< double,unsigned int,double,double,double > const *)arg1)->bins_sum_v2w();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *p1_duiddd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *p1_duiddd_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_p2_duiddd_bin_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_bin_error", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_bin_error" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_bin_error" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p2_duiddd_bin_error" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->bin_error(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_multiply", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_multiply" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_multiply" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (bool)(arg1)->multiply(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_scale" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_scale" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->scale(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_bin_Svw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_bin_Svw", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_bin_Svw" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_bin_Svw" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p2_duiddd_bin_Svw" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->bin_Svw(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_bin_Sv2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result; if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_bin_Sv2w", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_bin_Sv2w" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_bin_Sv2w" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p2_duiddd_bin_Sv2w" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->bin_Sv2w(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_reset" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (bool)(arg1)->reset(); resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_copy_from_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  inlib::histo::profile_data< double,unsigned int,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_copy_from_data", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_copy_from_data" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "p2_duiddd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::profile_data< double,unsigned int,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "p2_duiddd_copy_from_data" "', argument " "2"" of type '" "inlib::histo::profile_data< double,unsigned int,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::profile_data< double,unsigned int,double,double > * >(argp2);
  (arg1)->copy_from_data((inlib::histo::profile_data< double,unsigned int,double,double > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_get_histo_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  SwigValueWrapper< inlib::histo::profile_data< double,unsigned int,double,double > > result; if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_get_histo_data" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = ((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->get_histo_data();
  resultobj = SWIG_NewPointerObj((new inlib::histo::profile_data< double,unsigned int,double,double >(static_cast< const inlib::histo::profile_data< double,unsigned int,double,double >& >(result))), SWIGTYPE_p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; double arg3 ; double arg4 ; double arg5 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_fill" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p2_duiddd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "p2_duiddd_fill" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "p2_duiddd_fill" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5); result = (bool)(arg1)->fill(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  double arg2 ; double arg3 ; double arg4 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_fill" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_fill" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p2_duiddd_fill" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "p2_duiddd_fill" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); result = (bool)(arg1)->fill(arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_fill(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "p2_duiddd_fill", 0, 5, argv))) SWIG_fail; --argc; if (argc == 4) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_p2_duiddd_fill__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_p2_duiddd_fill__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'p2_duiddd_fill'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::fill(double,double,double,double)\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::fill(double,double,double)\n"); return 0; }
SWIGINTERN PyObject *_wrap_p2_duiddd_bin_rms_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject *swig_obj[3] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_bin_rms_value", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_bin_rms_value" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "p2_duiddd_bin_rms_value" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "p2_duiddd_bin_rms_value" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3);
  result = (double)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->bin_rms_value(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_add" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "p2_duiddd_add" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "p2_duiddd_add" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp2);
  result = (bool)(arg1)->add((inlib::histo::p2< double,unsigned int,double,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "p2_duiddd_subtract", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_subtract" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "p2_duiddd_subtract" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "p2_duiddd_subtract" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp2);
  result = (bool)(arg1)->subtract((inlib::histo::p2< double,unsigned int,double,double,double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_cut_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_cut_v" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (bool)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->cut_v();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_min_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_min_v" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (double)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->min_v();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_max_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_max_v" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (double)((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->max_v();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_p2_duiddd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg5 ; double arg6 ; double arg7 ;
  int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  void *argp5 ; int res5 = 0 ; double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ;
  inlib::histo::p2< double,unsigned int,double,double,double > *result = 0 ; if ((nobjs < 7) || (nobjs > 7)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'"); }
     else {
      inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_p2_duiddd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_p2_duiddd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_p2_duiddd" "', argument " "5"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "5"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'"); }
     else {
      inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * >(argp5);
      arg5 = *temp; if (SWIG_IsNewObj(res5)) delete temp; }  }  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_p2_duiddd" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_p2_duiddd" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7);
  result = (inlib::histo::p2< double,unsigned int,double,double,double > *)new inlib::histo::p2< double,unsigned int,double,double,double >((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_p2_duiddd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg2 ; double arg3 ;
  double arg4 ; SwigValueWrapper< inlib::histo::axis< double >::bn_t > arg5 ; double arg6 ; double arg7 ; double arg8 ;
  double arg9 ; int res1 = SWIG_OLDOBJ ; void *argp2 ; int res2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ;
  int ecode4 = 0 ; void *argp5 ; int res5 = 0 ; double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; double val8 ;
  int ecode8 = 0 ; double val9 ; int ecode9 = 0 ; inlib::histo::p2< double,unsigned int,double,double,double > *result = 0 ;
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'"); }
     else {
      inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_p2_duiddd" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_p2_duiddd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t,  0  | 0); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_p2_duiddd" "', argument " "5"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "5"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double >::bn_t""'"); }
     else {
      inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * temp = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double >::bn_t * >(argp5);
      arg5 = *temp; if (SWIG_IsNewObj(res5)) delete temp; }  }  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_p2_duiddd" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_p2_duiddd" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7); ecode8 = SWIG_AsVal_double(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_p2_duiddd" "', argument " "8"" of type '" "double""'"); }  
  arg8 = static_cast< double >(val8); ecode9 = SWIG_AsVal_double(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_p2_duiddd" "', argument " "9"" of type '" "double""'"); }  
  arg9 = static_cast< double >(val9);
  result = (inlib::histo::p2< double,unsigned int,double,double,double > *)new inlib::histo::p2< double,unsigned int,double,double,double >((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_p2_duiddd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ; inlib::histo::p2< double,unsigned int,double,double,double > *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_p2_duiddd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; } 
  result = (inlib::histo::p2< double,unsigned int,double,double,double > *)new inlib::histo::p2< double,unsigned int,double,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_new_p2_duiddd__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; double arg4 ; double arg5 ; int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ;
  inlib::histo::p2< double,unsigned int,double,double,double > *result = 0 ; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_p2_duiddd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_p2_duiddd" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_p2_duiddd" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5);
  result = (inlib::histo::p2< double,unsigned int,double,double,double > *)new inlib::histo::p2< double,unsigned int,double,double,double >((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_delete_p2_duiddd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_p2_duiddd" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_p2_duiddd__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; inlib::histo::p2< double,unsigned int,double,double,double > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_p2_duiddd" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (inlib::histo::p2< double,unsigned int,double,double,double > *)new inlib::histo::p2< double,unsigned int,double,double,double >((inlib::histo::p2< double,unsigned int,double,double,double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_p2_duiddd(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[10] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_p2_duiddd", 0, 9, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_p2_duiddd__SWIG_4(self, argc, argv);}  }  if (argc == 3) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_new_p2_duiddd__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 5) {
    int _v; int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); } 
          if (_v) { { int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_new_p2_duiddd__SWIG_3(self, argc, argv);}  }  }  }  }  }  if (argc == 7) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); } 
              if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_new_p2_duiddd__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  if (argc == 9) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_inlib__histo__axisT_double_t__bn_t, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); } 
              if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_double(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                      return _wrap_new_p2_duiddd__SWIG_1(self, argc, argv);}  }  }  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_p2_duiddd'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::p2(std::string const &,inlib::histo::p2< double,unsigned int,double,double,double >::bn_t,double,double,inlib::histo::p2< double,unsigned int,double,double,double >::bn_t,double,double)\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::p2(std::string const &,inlib::histo::p2< double,unsigned int,double,double,double >::bn_t,double,double,inlib::histo::p2< double,unsigned int,double,double,double >::bn_t,double,double,double,double)\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::p2(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::p2(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &,double,double)\n"
  "    inlib::histo::p2< double,unsigned int,double,double,double >::p2(inlib::histo::p2< double,unsigned int,double,double,double > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_p2_duiddd_bins_sum_vw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::vector< double,std::allocator< double > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_bins_sum_vw" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (std::vector< double,std::allocator< double > > *) &((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->bins_sum_vw();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_p2_duiddd_bins_sum_v2w(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2< double,unsigned int,double,double,double > *arg1 = (inlib::histo::p2< double,unsigned int,double,double,double > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::vector< double,std::allocator< double > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "p2_duiddd_bins_sum_v2w" "', argument " "1"" of type '" "inlib::histo::p2< double,unsigned int,double,double,double > const *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2< double,unsigned int,double,double,double > * >(argp1);
  result = (std::vector< double,std::allocator< double > > *) &((inlib::histo::p2< double,unsigned int,double,double,double > const *)arg1)->bins_sum_v2w();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *p2_duiddd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *p2_duiddd_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_histo_h1d_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "histo_h1d_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::h1d::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; int res1 = SWIG_OLDOBJ ;
  unsigned int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  inlib::histo::h1d *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h1d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h1d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_h1d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_h1d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_h1d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4);
  result = (inlib::histo::h1d *)new inlib::histo::h1d((std::string const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; inlib::histo::h1d *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h1d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h1d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_h1d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h1d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; } 
  result = (inlib::histo::h1d *)new inlib::histo::h1d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_delete_histo_h1d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h1d *arg1 = (inlib::histo::h1d *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_histo_h1d" "', argument " "1"" of type '" "inlib::histo::h1d *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h1d * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h1d__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::h1d *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::histo::h1d *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__h1d,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h1d" "', argument " "1"" of type '" "inlib::histo::h1d const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h1d" "', argument " "1"" of type '" "inlib::histo::h1d const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::h1d * >(argp1);
  result = (inlib::histo::h1d *)new inlib::histo::h1d((inlib::histo::h1d const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h1d(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_histo_h1d", 0, 4, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_histo_h1d__SWIG_2(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_new_histo_h1d__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_histo_h1d__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_histo_h1d'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::h1d::h1d(std::string const &,unsigned int,double,double)\n"
  "    inlib::histo::h1d::h1d(std::string const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::h1d::h1d(inlib::histo::h1d const &)\n"); return 0; }
SWIGINTERN PyObject *histo_h1d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__h1d, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *histo_h1d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_histo_h2d_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "histo_h2d_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::h2d::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h2d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; unsigned int arg5 ;
  double arg6 ; double arg7 ; int res1 = SWIG_OLDOBJ ; unsigned int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ;
  double val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; double val6 ; int ecode6 = 0 ; double val7 ;
  int ecode7 = 0 ; inlib::histo::h2d *result = 0 ; if ((nobjs < 7) || (nobjs > 7)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h2d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h2d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_h2d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_h2d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_h2d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_histo_h2d" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_double(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_histo_h2d" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_histo_h2d" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7);
  result = (inlib::histo::h2d *)new inlib::histo::h2d((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h2d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ; inlib::histo::h2d *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h2d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h2d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_h2d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h2d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_histo_h2d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h2d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; } 
  result = (inlib::histo::h2d *)new inlib::histo::h2d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_delete_histo_h2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h2d *arg1 = (inlib::histo::h2d *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_histo_h2d" "', argument " "1"" of type '" "inlib::histo::h2d *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h2d * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h2d__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::h2d *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::histo::h2d *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__h2d,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h2d" "', argument " "1"" of type '" "inlib::histo::h2d const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h2d" "', argument " "1"" of type '" "inlib::histo::h2d const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::h2d * >(argp1);
  result = (inlib::histo::h2d *)new inlib::histo::h2d((inlib::histo::h2d const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h2d(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[8] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_histo_h2d", 0, 7, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_histo_h2d__SWIG_2(self, argc, argv);}  }  if (argc == 3) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_new_histo_h2d__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 7) {
    int _v; int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_new_histo_h2d__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_histo_h2d'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::h2d::h2d(std::string const &,unsigned int,double,double,unsigned int,double,double)\n"
  "    inlib::histo::h2d::h2d(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::h2d::h2d(inlib::histo::h2d const &)\n"); return 0; }
SWIGINTERN PyObject *histo_h2d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__h2d, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *histo_h2d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_histo_h3d_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "histo_h3d_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::h3d::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h3d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; unsigned int arg5 ;
  double arg6 ; double arg7 ; unsigned int arg8 ; double arg9 ; double arg10 ; int res1 = SWIG_OLDOBJ ; unsigned int val2 ;
  int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ;
  double val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; unsigned int val8 ; int ecode8 = 0 ; double val9 ;
  int ecode9 = 0 ; double val10 ; int ecode10 = 0 ; inlib::histo::h3d *result = 0 ; if ((nobjs < 10) || (nobjs > 10)) SWIG_fail;
  { std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h3d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h3d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_h3d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_h3d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_h3d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_histo_h3d" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_double(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_histo_h3d" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_histo_h3d" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7); ecode8 = SWIG_AsVal_unsigned_SS_int(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_histo_h3d" "', argument " "8"" of type '" "unsigned int""'"); }
    arg8 = static_cast< unsigned int >(val8); ecode9 = SWIG_AsVal_double(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_histo_h3d" "', argument " "9"" of type '" "double""'"); }  
  arg9 = static_cast< double >(val9); ecode10 = SWIG_AsVal_double(swig_obj[9], &val10); if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_histo_h3d" "', argument " "10"" of type '" "double""'"); }  
  arg10 = static_cast< double >(val10);
  result = (inlib::histo::h3d *)new inlib::histo::h3d((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h3d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; std::vector< double,std::allocator< double > > *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ;
  inlib::histo::h3d *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h3d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h3d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_h3d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h3d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_histo_h3d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h3d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_histo_h3d" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h3d" "', argument " "4"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg4 = ptr; } 
  result = (inlib::histo::h3d *)new inlib::histo::h3d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3,(std::vector< double,std::allocator< double > > const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3; if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_histo_h3d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::h3d *arg1 = (inlib::histo::h3d *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_histo_h3d" "', argument " "1"" of type '" "inlib::histo::h3d *""'");  }
   arg1 = reinterpret_cast< inlib::histo::h3d * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h3d__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::h3d *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::histo::h3d *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__h3d,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_h3d" "', argument " "1"" of type '" "inlib::histo::h3d const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_h3d" "', argument " "1"" of type '" "inlib::histo::h3d const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::h3d * >(argp1);
  result = (inlib::histo::h3d *)new inlib::histo::h3d((inlib::histo::h3d const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_h3d(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[11] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_histo_h3d", 0, 10, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_histo_h3d__SWIG_2(self, argc, argv);}  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) {
          int res = swig::asptr(argv[3], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_new_histo_h3d__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 10) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_unsigned_SS_int(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                        int res = SWIG_AsVal_double(argv[9], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                        return _wrap_new_histo_h3d__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_histo_h3d'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::h3d::h3d(std::string const &,unsigned int,double,double,unsigned int,double,double,unsigned int,double,double)\n"
  "    inlib::histo::h3d::h3d(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::h3d::h3d(inlib::histo::h3d const &)\n"); return 0; }
SWIGINTERN PyObject *histo_h3d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__h3d, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *histo_h3d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_histo_p1d_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "histo_p1d_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::p1d::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; int res1 = SWIG_OLDOBJ ;
  unsigned int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  inlib::histo::p1d *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_p1d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_p1d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_p1d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4);
  result = (inlib::histo::p1d *)new inlib::histo::p1d((std::string const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; double arg5 ; double arg6 ;
  int res1 = SWIG_OLDOBJ ; unsigned int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  double val5 ; int ecode5 = 0 ; double val6 ; int ecode6 = 0 ; inlib::histo::p1d *result = 0 ;
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_p1d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_p1d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_p1d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_histo_p1d" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5); ecode6 = SWIG_AsVal_double(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_histo_p1d" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6);
  result = (inlib::histo::p1d *)new inlib::histo::p1d((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p1d__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; inlib::histo::p1d *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_p1d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; } 
  result = (inlib::histo::p1d *)new inlib::histo::p1d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p1d__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ; double arg3 ;
  double arg4 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  inlib::histo::p1d *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_p1d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_p1d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_p1d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4);
  result = (inlib::histo::p1d *)new inlib::histo::p1d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_delete_histo_p1d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p1d *arg1 = (inlib::histo::p1d *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_histo_p1d" "', argument " "1"" of type '" "inlib::histo::p1d *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p1d * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p1d__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::p1d *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::histo::p1d *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__p1d,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p1d" "', argument " "1"" of type '" "inlib::histo::p1d const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p1d" "', argument " "1"" of type '" "inlib::histo::p1d const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::p1d * >(argp1);
  result = (inlib::histo::p1d *)new inlib::histo::p1d((inlib::histo::p1d const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p1d(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[7] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_histo_p1d", 0, 6, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_histo_p1d__SWIG_4(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_new_histo_p1d__SWIG_2(self, argc, argv);}  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_histo_p1d__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_histo_p1d__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 6) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_new_histo_p1d__SWIG_1(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_histo_p1d'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::histo::p1d::p1d(std::string const &,unsigned int,double,double)\n"
  "    inlib::histo::p1d::p1d(std::string const &,unsigned int,double,double,double,double)\n"
  "    inlib::histo::p1d::p1d(std::string const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::p1d::p1d(std::string const &,std::vector< double,std::allocator< double > > const &,double,double)\n"
  "    inlib::histo::p1d::p1d(inlib::histo::p1d const &)\n"); return 0; }
SWIGINTERN PyObject *histo_p1d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__p1d, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *histo_p1d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_histo_p2d_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "histo_p2d_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::histo::p2d::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p2d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; unsigned int arg5 ;
  double arg6 ; double arg7 ; int res1 = SWIG_OLDOBJ ; unsigned int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ;
  double val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; double val6 ; int ecode6 = 0 ; double val7 ;
  int ecode7 = 0 ; inlib::histo::p2d *result = 0 ; if ((nobjs < 7) || (nobjs > 7)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_p2d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_p2d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_p2d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_histo_p2d" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_double(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_histo_p2d" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_histo_p2d" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7);
  result = (inlib::histo::p2d *)new inlib::histo::p2d((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p2d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; unsigned int arg5 ;
  double arg6 ; double arg7 ; double arg8 ; double arg9 ; int res1 = SWIG_OLDOBJ ; unsigned int val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; double val6 ;
  int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; double val8 ; int ecode8 = 0 ; double val9 ; int ecode9 = 0 ;
  inlib::histo::p2d *result = 0 ; if ((nobjs < 9) || (nobjs > 9)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_histo_p2d" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_histo_p2d" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_p2d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_histo_p2d" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_double(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_histo_p2d" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_double(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_histo_p2d" "', argument " "7"" of type '" "double""'"); }  
  arg7 = static_cast< double >(val7); ecode8 = SWIG_AsVal_double(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_histo_p2d" "', argument " "8"" of type '" "double""'"); }  
  arg8 = static_cast< double >(val8); ecode9 = SWIG_AsVal_double(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_histo_p2d" "', argument " "9"" of type '" "double""'"); }  
  arg9 = static_cast< double >(val9);
  result = (inlib::histo::p2d *)new inlib::histo::p2d((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p2d__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ; inlib::histo::p2d *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_p2d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_histo_p2d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; } 
  result = (inlib::histo::p2d *)new inlib::histo::p2d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p2d__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::vector< double,std::allocator< double > > *arg2 = 0 ;
  std::vector< double,std::allocator< double > > *arg3 = 0 ; double arg4 ; double arg5 ; int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ;
  inlib::histo::p2d *result = 0 ; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_histo_p2d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "2"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg2 = ptr; }  { std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_histo_p2d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "3"" of type '" "std::vector< double,std::allocator< double > > const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_histo_p2d" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_histo_p2d" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5);
  result = (inlib::histo::p2d *)new inlib::histo::p2d((std::string const &)*arg1,(std::vector< double,std::allocator< double > > const &)*arg2,(std::vector< double,std::allocator< double > > const &)*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2; if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_delete_histo_p2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::p2d *arg1 = (inlib::histo::p2d *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_histo_p2d" "', argument " "1"" of type '" "inlib::histo::p2d *""'");  }
   arg1 = reinterpret_cast< inlib::histo::p2d * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p2d__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::histo::p2d *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::histo::p2d *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__p2d,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_histo_p2d" "', argument " "1"" of type '" "inlib::histo::p2d const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_histo_p2d" "', argument " "1"" of type '" "inlib::histo::p2d const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::p2d * >(argp1);
  result = (inlib::histo::p2d *)new inlib::histo::p2d((inlib::histo::p2d const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_histo_p2d(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[10] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_histo_p2d", 0, 9, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_histo_p2d__SWIG_4(self, argc, argv);}  }  if (argc == 3) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_new_histo_p2d__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 5) {
    int _v; int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0)); _v = SWIG_CheckState(res);
      if (_v) { int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); } 
          if (_v) { { int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_new_histo_p2d__SWIG_3(self, argc, argv);}  }  }  }  }  }  if (argc == 7) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_new_histo_p2d__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  if (argc == 9) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_double(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                      return _wrap_new_histo_p2d__SWIG_1(self, argc, argv);}  }  }  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_histo_p2d'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::histo::p2d::p2d(std::string const &,unsigned int,double,double,unsigned int,double,double)\n"
  "    inlib::histo::p2d::p2d(std::string const &,unsigned int,double,double,unsigned int,double,double,double,double)\n"
  "    inlib::histo::p2d::p2d(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &)\n"
  "    inlib::histo::p2d::p2d(std::string const &,std::vector< double,std::allocator< double > > const &,std::vector< double,std::allocator< double > > const &,double,double)\n"
  "    inlib::histo::p2d::p2d(inlib::histo::p2d const &)\n"); return 0; }
SWIGINTERN PyObject *histo_p2d_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__histo__p2d, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *histo_p2d_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_version(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int result; if (!SWIG_Python_UnpackTuple(args, "version", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)inlib::version(); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "begin" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "begin" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); inlib::waxml::begin(*arg1); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "end" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "end" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); inlib::waxml::end(*arg1); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_bin_to_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; int arg1 ;
  int val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "bin_to_string" "', argument " "1"" of type '" "int""'"); }  
  arg1 = static_cast< int >(val1); result = inlib::waxml::bin_to_string(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_write_annotations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::waxml::annotations_t *arg1 = 0 ; std::ostream *arg2 = 0 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "write_annotations", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_annotations" "', argument " "1"" of type '" "inlib::waxml::annotations_t const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_annotations" "', argument " "1"" of type '" "inlib::waxml::annotations_t const &""'"); }
   arg1 = reinterpret_cast< inlib::waxml::annotations_t * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_annotations" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_annotations" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "write_annotations" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3);
  inlib::waxml::write_annotations((std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > const &)*arg1,*arg2,arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_write_axis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::histo::axis< double > *arg1 = 0 ; std::string *arg2 = 0 ; std::ostream *arg3 = 0 ; int arg4 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; void *argp3 = 0 ; int res3 = 0 ; int val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "write_axis", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__histo__axisT_double_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_axis" "', argument " "1"" of type '" "inlib::histo::axis< double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_axis" "', argument " "1"" of type '" "inlib::histo::axis< double > const &""'"); }
   arg1 = reinterpret_cast< inlib::histo::axis< double > * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_axis" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_axis" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; } 
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write_axis" "', argument " "3"" of type '" "std::ostream &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_axis" "', argument " "3"" of type '" "std::ostream &""'"); }
   arg3 = reinterpret_cast< std::ostream * >(argp3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "write_axis" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  inlib::waxml::write_axis((inlib::histo::axis< double > const &)*arg1,(std::string const &)*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_write_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h1d *arg2 = 0 ; std::string *arg3 = 0 ; int arg4 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ; int val4 ; int ecode4 = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::h1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::h1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "write_bin" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  inlib::waxml::write_bin(*arg1,(inlib::histo::h1d const &)*arg2,(std::string const &)*arg3,arg4); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_write_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h2d *arg2 = 0 ; std::string *arg3 = 0 ; int arg4 ; int arg5 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ; int val4 ; int ecode4 = 0 ;
  int val5 ; int ecode5 = 0 ; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::h2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::h2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "write_bin" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write_bin" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  inlib::waxml::write_bin(*arg1,(inlib::histo::h2d const &)*arg2,(std::string const &)*arg3,arg4,arg5);
  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail:
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_write_bin__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h3d *arg2 = 0 ; std::string *arg3 = 0 ; int arg4 ; int arg5 ;
  int arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ; int val4 ;
  int ecode4 = 0 ; int val5 ; int ecode5 = 0 ; int val6 ; int ecode6 = 0 ; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::h3d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::h3d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "write_bin" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write_bin" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_int(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "write_bin" "', argument " "6"" of type '" "int""'"); }  
  arg6 = static_cast< int >(val6);
  inlib::waxml::write_bin(*arg1,(inlib::histo::h3d const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail:
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_write_bin__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::p1d *arg2 = 0 ; std::string *arg3 = 0 ; int arg4 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ; int val4 ; int ecode4 = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::p1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::p1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "write_bin" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4);
  inlib::waxml::write_bin(*arg1,(inlib::histo::p1d const &)*arg2,(std::string const &)*arg3,arg4); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_write_bin__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::p2d *arg2 = 0 ; std::string *arg3 = 0 ; int arg4 ; int arg5 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ; int val4 ; int ecode4 = 0 ;
  int val5 ; int ecode5 = 0 ; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::p2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "2"" of type '" "inlib::histo::p2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_bin" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "write_bin" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write_bin" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  inlib::waxml::write_bin(*arg1,(inlib::histo::p2d const &)*arg2,(std::string const &)*arg3,arg4,arg5);
  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail:
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_write_bin(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[7] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "write_bin", 0, 6, argv))) SWIG_fail; --argc; if (argc == 4) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_write_bin__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_write_bin__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write_bin__SWIG_1(self, argc, argv);}  }  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write_bin__SWIG_4(self, argc, argv);}  }  }  }  }  }  if (argc == 6) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_write_bin__SWIG_2(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'write_bin'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::waxml::write_bin(std::ostream &,inlib::histo::h1d const &,std::string const &,int)\n"
  "    inlib::waxml::write_bin(std::ostream &,inlib::histo::h2d const &,std::string const &,int,int)\n"
  "    inlib::waxml::write_bin(std::ostream &,inlib::histo::h3d const &,std::string const &,int,int,int)\n"
  "    inlib::waxml::write_bin(std::ostream &,inlib::histo::p1d const &,std::string const &,int)\n"
  "    inlib::waxml::write_bin(std::ostream &,inlib::histo::p2d const &,std::string const &,int,int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h1d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; int val5 ; int ecode5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::h1d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h1d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::h1d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h2d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; int val5 ; int ecode5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::h2d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h2d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::h2d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h3d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; int val5 ; int ecode5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h3d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h3d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::h3d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::h3d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h3d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::h3d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::h3d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::p1d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; int val5 ; int ecode5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::p1d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::p1d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::p1d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::p2d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; int val5 ; int ecode5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "write" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::p2d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::histo::p2d *arg2 = 0 ; std::string *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "2"" of type '" "inlib::histo::p2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)inlib::waxml::write(*arg1,(inlib::histo::p2d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_write(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "write", 0, 5, argv))) SWIG_fail; --argc; if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_write__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_write__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_write__SWIG_5(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_write__SWIG_7(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_write__SWIG_9(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write__SWIG_2(self, argc, argv);}  }  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write__SWIG_6(self, argc, argv);}  }  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write__SWIG_0(self, argc, argv);}  }  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write__SWIG_8(self, argc, argv);}  }  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_write__SWIG_4(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'write'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::h1d const &,std::string const &,std::string const &,int)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::h1d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::h2d const &,std::string const &,std::string const &,int)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::h2d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::h3d const &,std::string const &,std::string const &,int)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::h3d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::p1d const &,std::string const &,std::string const &,int)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::p1d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::p2d const &,std::string const &,std::string const &,int)\n"
  "    inlib::waxml::write(std::ostream &,inlib::histo::p2d const &,std::string const &,std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_new_waxml_file(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::waxml::file *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "new_waxml_file", 0, 0, 0)) SWIG_fail;
  result = (inlib::waxml::file *)new inlib::waxml::file();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__waxml__file, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_waxml_file(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_waxml_file" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "waxml_file_open", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_open" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "waxml_file_open" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_open" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)(arg1)->open((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_close" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1); result = (bool)(arg1)->close();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_writer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::ofstream *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_writer" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1); result = (std::ofstream *)(arg1)->writer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ofstream, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; inlib::histo::h1d *arg2 = 0 ;
  std::string *arg3 = 0 ; std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_write" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::h1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::h1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)(arg1)->write((inlib::histo::h1d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; inlib::histo::h2d *arg2 = 0 ;
  std::string *arg3 = 0 ; std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_write" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::h2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::h2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)(arg1)->write((inlib::histo::h2d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_write__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; inlib::histo::h3d *arg2 = 0 ;
  std::string *arg3 = 0 ; std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_write" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__h3d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::h3d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::h3d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::h3d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)(arg1)->write((inlib::histo::h3d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_write__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; inlib::histo::p1d *arg2 = 0 ;
  std::string *arg3 = 0 ; std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_write" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p1d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::p1d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::p1d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p1d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)(arg1)->write((inlib::histo::p1d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_write__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::waxml::file *arg1 = (inlib::waxml::file *) 0 ; inlib::histo::p2d *arg2 = 0 ;
  std::string *arg3 = 0 ; std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ; int res4 = SWIG_OLDOBJ ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__waxml__file, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "waxml_file_write" "', argument " "1"" of type '" "inlib::waxml::file *""'");  }
   arg1 = reinterpret_cast< inlib::waxml::file * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__histo__p2d,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::p2d const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "2"" of type '" "inlib::histo::p2d const &""'"); }
   arg2 = reinterpret_cast< inlib::histo::p2d * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  { std::string *ptr = (std::string *)0; res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "waxml_file_write" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; } 
  result = (bool)(arg1)->write((inlib::histo::p2d const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *_wrap_waxml_file_write(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "waxml_file_write", 0, 4, argv))) SWIG_fail; --argc; if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__waxml__file, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h1d, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res); if (_v) { return _wrap_waxml_file_write__SWIG_0(self, argc, argv);}  }  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__waxml__file, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_waxml_file_write__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__waxml__file, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__h3d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_waxml_file_write__SWIG_2(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__waxml__file, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p1d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_waxml_file_write__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__waxml__file, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__histo__p2d, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_waxml_file_write__SWIG_4(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'waxml_file_write'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::waxml::file::write(inlib::histo::h1d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::file::write(inlib::histo::h2d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::file::write(inlib::histo::h3d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::file::write(inlib::histo::p1d const &,std::string const &,std::string const &)\n"
  "    inlib::waxml::file::write(inlib::histo::p2d const &,std::string const &,std::string const &)\n"); return 0; }
SWIGINTERN PyObject *waxml_file_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__waxml__file, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *waxml_file_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_vec2_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::vec2< float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::vec2< float > *)new inlib::vec2< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec2_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec2< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec2_float" "', argument " "1"" of type '" "float const [2]""'");  }
    arg1 = reinterpret_cast< float * >(argp1); result = (inlib::vec2< float > *)new inlib::vec2< float >((float const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec2_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 = 0 ; float *arg2 = 0 ; float temp1 ; float val1 ; int ecode1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; inlib::vec2< float > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vec2_float" "', argument " "1"" of type '" "float""'"); }  
  temp1 = static_cast< float >(val1); arg1 = &temp1; ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vec2_float" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = (inlib::vec2< float > *)new inlib::vec2< float >((float const &)*arg1,(float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_vec2_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vec2_float" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_vec2_float__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec2< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec2_float" "', argument " "1"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec2_float" "', argument " "1"" of type '" "inlib::vec2< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  result = (inlib::vec2< float > *)new inlib::vec2< float >((inlib::vec2< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec2_float(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vec2_float", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_vec2_float__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_vec2_float__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_vec2_float__SWIG_3(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_vec2_float__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vec2_float'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec2< float >::vec2()\n" "    inlib::vec2< float >::vec2(float const [2])\n"
  "    inlib::vec2< float >::vec2(float const &,float const &)\n"
  "    inlib::vec2< float >::vec2(inlib::vec2< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec2_float_v0__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_v0" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float)((inlib::vec2< float > const *)arg1)->v0();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_v1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_v1" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float)((inlib::vec2< float > const *)arg1)->v1();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_v0__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_v0" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float_v0" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v0((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_v0(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec2_float_v0", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec2_float_v0__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec2_float_v0__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec2_float_v0'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec2< float >::v0() const\n"
  "    inlib::vec2< float >::v0(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec2_float_v1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_v1" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float_v1" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v1((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_v1(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec2_float_v1", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec2_float_v1__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec2_float_v1__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec2_float_v1'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec2< float >::v1() const\n"
  "    inlib::vec2< float >::v1(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec2_float_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_x" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float)((inlib::vec2< float > const *)arg1)->x();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_y" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float)((inlib::vec2< float > const *)arg1)->y();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_set_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_set_value" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float_set_value" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec2_float_set_value" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; (arg1)->set_value((float const &)*arg2,(float const &)*arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_set_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_set_value" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_set_value" "', argument " "2"" of type '" "float const [2]""'");  }
    arg2 = reinterpret_cast< float * >(argp2); (arg1)->set_value((float const (*))arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_set_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec2_float_set_value", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_vec2_float_set_value__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_vec2_float_set_value__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec2_float_set_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec2< float >::set_value(float const &,float const &)\n"
  "    inlib::vec2< float >::set_value(float const [2])\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec2_float_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float_value", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_value" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_value" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_value" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vec2_float_value" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_value" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); ((inlib::vec2< float > const *)arg1)->value(*arg2,*arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_length" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float)((inlib::vec2< float > const *)arg1)->length();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_normalize" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float)(arg1)->normalize();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float_dot", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_dot" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_dot" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_dot" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = (float)((inlib::vec2< float > const *)arg1)->dot((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_cross(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float_cross", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_cross" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_cross" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_cross" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = (float)((inlib::vec2< float > const *)arg1)->cross((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_equal" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_equal" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_equal" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = (bool)((inlib::vec2< float > const *)arg1)->equal((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_divide" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float_divide" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; result = (bool)(arg1)->divide((float const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_add" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_add" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_add" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2); (arg1)->add((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_add" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float_add" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec2_float_add" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3; (arg1)->add((float const &)*arg2,(float const &)*arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_add(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec2_float_add", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec2_float_add__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_vec2_float_add__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec2_float_add'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec2< float >::add(inlib::vec2< float > const &)\n"
  "    inlib::vec2< float >::add(float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec2_float_subtract__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_subtract" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float_subtract" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float_subtract" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2); (arg1)->subtract((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_subtract__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_subtract" "', argument " "1"" of type '" "inlib::vec2< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float_subtract" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec2_float_subtract" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; (arg1)->subtract((float const &)*arg2,(float const &)*arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_subtract(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec2_float_subtract", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec2_float_subtract__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec2T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_vec2_float_subtract__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec2_float_subtract'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec2< float >::subtract(inlib::vec2< float > const &)\n"
  "    inlib::vec2< float >::subtract(float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec2_float___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec2< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float___add__" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float___add__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float___add__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = ((inlib::vec2< float > const *)arg1)->operator +((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec2< float >(static_cast< const inlib::vec2< float >& >(result))), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec2_float___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec2< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float___sub__" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float___sub__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float___sub__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = ((inlib::vec2< float > const *)arg1)->operator -((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec2< float >(static_cast< const inlib::vec2< float >& >(result))), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec2_float___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::vec2< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float___mul__" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec2_float___mul__" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = ((inlib::vec2< float > const *)arg1)->operator *((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec2< float >(static_cast< const inlib::vec2< float >& >(result))), SWIGTYPE_p_inlib__vec2T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec2_float___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float___eq__" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float___eq__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float___eq__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = (bool)((inlib::vec2< float > const *)arg1)->operator ==((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec2_float___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; inlib::vec2< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec2_float___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float___ne__" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec2T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec2_float___ne__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec2_float___ne__" "', argument " "2"" of type '" "inlib::vec2< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec2< float > * >(argp2);
  result = (bool)((inlib::vec2< float > const *)arg1)->operator !=((inlib::vec2< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec2_float_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_size" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1);
  result = (unsigned int)((inlib::vec2< float > const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec2_float_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec2< float > *arg1 = (inlib::vec2< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec2T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec2_float_data" "', argument " "1"" of type '" "inlib::vec2< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec2< float > * >(argp1); result = (float *)((inlib::vec2< float > const *)arg1)->data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *vec2_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__vec2T_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vec2_float_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_vec3_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::vec3< float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::vec3< float > *)new inlib::vec3< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec3< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3_float" "', argument " "1"" of type '" "float const [3]""'");  }
    arg1 = reinterpret_cast< float * >(argp1); result = (inlib::vec3< float > *)new inlib::vec3< float >((float const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 = 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float temp1 ; float val1 ; int ecode1 = 0 ;
  float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; inlib::vec3< float > *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vec3_float" "', argument " "1"" of type '" "float""'"); }  
  temp1 = static_cast< float >(val1); arg1 = &temp1; ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vec3_float" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_vec3_float" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3;
  result = (inlib::vec3< float > *)new inlib::vec3< float >((float const &)*arg1,(float const &)*arg2,(float const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_vec3_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vec3_float" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_float__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec3< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3_float" "', argument " "1"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec3_float" "', argument " "1"" of type '" "inlib::vec3< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  result = (inlib::vec3< float > *)new inlib::vec3< float >((inlib::vec3< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_float(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vec3_float", 0, 3, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_vec3_float__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_vec3_float__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_vec3_float__SWIG_3(self, argc, argv);}  }  if (argc == 3) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_vec3_float__SWIG_2(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vec3_float'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::vec3()\n" "    inlib::vec3< float >::vec3(float const [3])\n"
  "    inlib::vec3< float >::vec3(float const &,float const &,float const &)\n"
  "    inlib::vec3< float >::vec3(inlib::vec3< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_v0__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_v0" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->v0();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_v1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_v1" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->v1();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_v2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_v2" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->v2();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_v0__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_v0" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_v0" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v0((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_v0(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_float_v0", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec3_float_v0__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec3_float_v0__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_float_v0'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::v0() const\n"
  "    inlib::vec3< float >::v0(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_v1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_v1" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_v1" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v1((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_v1(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_float_v1", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec3_float_v1__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec3_float_v1__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_float_v1'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::v1() const\n"
  "    inlib::vec3< float >::v1(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_v2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_v2" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_v2" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v2((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_v2(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_float_v2", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec3_float_v2__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec3_float_v2__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_float_v2'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::v2() const\n"
  "    inlib::vec3< float >::v2(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_x" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->x();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_y" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->y();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_z" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->z();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_set_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_set_value" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_set_value" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec3_float_set_value" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec3_float_set_value" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->set_value((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_set_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_set_value" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_set_value" "', argument " "2"" of type '" "float const [3]""'");  }
    arg2 = reinterpret_cast< float * >(argp2); (arg1)->set_value((float const (*))arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_set_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_float_set_value", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_vec3_float_set_value__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_vec3_float_set_value__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_float_set_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::set_value(float const &,float const &,float const &)\n"
  "    inlib::vec3< float >::set_value(float const [3])\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; PyObject *swig_obj[4] ; if (!SWIG_Python_UnpackTuple(args, "vec3_float_value", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_value" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_value" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_value" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vec3_float_value" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_value" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vec3_float_value" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_value" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); ((inlib::vec3< float > const *)arg1)->value(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_length" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)((inlib::vec3< float > const *)arg1)->length();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_normalize" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float)(arg1)->normalize();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float_dot", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_dot" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_dot" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_dot" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = (float)((inlib::vec3< float > const *)arg1)->dot((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_cross(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float_cross", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_cross" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_cross" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_cross" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = ((inlib::vec3< float > const *)arg1)->cross((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< float >(static_cast< const inlib::vec3< float >& >(result))), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_equal" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_equal" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_equal" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = (bool)((inlib::vec3< float > const *)arg1)->equal((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_divide" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_divide" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; result = (bool)(arg1)->divide((float const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float_multiply", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_multiply" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_multiply" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->multiply((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_add" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_add" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_add" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2); (arg1)->add((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_add" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_add" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec3_float_add" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec3_float_add" "', argument " "4"" of type '" "float""'"); }  
  temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->add((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_add(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_float_add", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec3_float_add__SWIG_0(self, argc, argv);}  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_vec3_float_add__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_float_add'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::add(inlib::vec3< float > const &)\n"
  "    inlib::vec3< float >::add(float const &,float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_subtract__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_subtract" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_subtract" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_subtract" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2); (arg1)->subtract((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_subtract__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_subtract" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float_subtract" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec3_float_subtract" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec3_float_subtract" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->subtract((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_subtract(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_float_subtract", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec3_float_subtract__SWIG_0(self, argc, argv);}  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_vec3_float_subtract__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_float_subtract'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< float >::subtract(inlib::vec3< float > const &)\n"
  "    inlib::vec3< float >::subtract(float const &,float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_float_cos_angle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; float *arg3 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float_cos_angle", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_cos_angle" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float_cos_angle" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_cos_angle" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vec3_float_cos_angle" "', argument " "3"" of type '" "float &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float_cos_angle" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3);
  result = (bool)((inlib::vec3< float > const *)arg1)->cos_angle((inlib::vec3< float > const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< float > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float___imul__" "', argument " "1"" of type '" "inlib::vec3< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float___imul__" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = (inlib::vec3< float > *) &(arg1)->operator *=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float___add__" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float___add__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float___add__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = ((inlib::vec3< float > const *)arg1)->operator +((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< float >(static_cast< const inlib::vec3< float >& >(result))), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_float___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float___sub__" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float___sub__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float___sub__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = ((inlib::vec3< float > const *)arg1)->operator -((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< float >(static_cast< const inlib::vec3< float >& >(result))), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_float___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float___mul__" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_float___mul__" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = ((inlib::vec3< float > const *)arg1)->operator *((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< float >(static_cast< const inlib::vec3< float >& >(result))), SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_float___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float___eq__" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float___eq__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float___eq__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = (bool)((inlib::vec3< float > const *)arg1)->operator ==((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_float___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_float___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float___ne__" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_float___ne__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_float___ne__" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = (bool)((inlib::vec3< float > const *)arg1)->operator !=((inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_float_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_size" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  result = (unsigned int)((inlib::vec3< float > const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_float_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< float > *arg1 = (inlib::vec3< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_float_data" "', argument " "1"" of type '" "inlib::vec3< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); result = (float *)((inlib::vec3< float > const *)arg1)->data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *vec3_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__vec3T_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vec3_float_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_vec3_double__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::vec3< double > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::vec3< double > *)new inlib::vec3< double >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_double__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec3< double > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3_double" "', argument " "1"" of type '" "double const [3]""'");  }
    arg1 = reinterpret_cast< double * >(argp1);
  result = (inlib::vec3< double > *)new inlib::vec3< double >((double const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_double__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; double *arg1 = 0 ; double *arg2 = 0 ; double *arg3 = 0 ; double temp1 ; double val1 ;
  int ecode1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; double temp3 ; double val3 ; int ecode3 = 0 ;
  inlib::vec3< double > *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vec3_double" "', argument " "1"" of type '" "double""'"); }  
  temp1 = static_cast< double >(val1); arg1 = &temp1; ecode2 = SWIG_AsVal_double(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vec3_double" "', argument " "2"" of type '" "double""'"); }  
  temp2 = static_cast< double >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_vec3_double" "', argument " "3"" of type '" "double""'"); }  
  temp3 = static_cast< double >(val3); arg3 = &temp3;
  result = (inlib::vec3< double > *)new inlib::vec3< double >((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_vec3_double(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vec3_double" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_double__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::vec3< double > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3_double" "', argument " "1"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec3_double" "', argument " "1"" of type '" "inlib::vec3< double > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  result = (inlib::vec3< double > *)new inlib::vec3< double >((inlib::vec3< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3_double(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vec3_double", 0, 3, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_vec3_double__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_vec3_double__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_vec3_double__SWIG_3(self, argc, argv);}  }  if (argc == 3) { int _v; {
      int res = SWIG_AsVal_double(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_vec3_double__SWIG_2(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vec3_double'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::vec3()\n"
  "    inlib::vec3< double >::vec3(double const [3])\n"
  "    inlib::vec3< double >::vec3(double const &,double const &,double const &)\n"
  "    inlib::vec3< double >::vec3(inlib::vec3< double > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_v0__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  double result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_v0" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->v0();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_v1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  double result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_v1" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->v1();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_v2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  double result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_v2" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->v2();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_v0__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_v0" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_v0" "', argument " "2"" of type '" "double""'"); }  
  temp2 = static_cast< double >(val2); arg2 = &temp2; (arg1)->v0((double const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_v0(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_double_v0", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec3_double_v0__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec3_double_v0__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_double_v0'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::v0() const\n"
  "    inlib::vec3< double >::v0(double const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_v1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_v1" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_v1" "', argument " "2"" of type '" "double""'"); }  
  temp2 = static_cast< double >(val2); arg2 = &temp2; (arg1)->v1((double const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_v1(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_double_v1", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec3_double_v1__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec3_double_v1__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_double_v1'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::v1() const\n"
  "    inlib::vec3< double >::v1(double const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_v2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_v2" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_v2" "', argument " "2"" of type '" "double""'"); }  
  temp2 = static_cast< double >(val2); arg2 = &temp2; (arg1)->v2((double const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_v2(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_double_v2", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec3_double_v2__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec3_double_v2__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_double_v2'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::v2() const\n"
  "    inlib::vec3< double >::v2(double const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_x" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->x();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_y" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->y();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_z" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->z();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_set_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; double *arg3 = 0 ;
  double *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; double temp3 ; double val3 ;
  int ecode3 = 0 ; double temp4 ; double val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_set_value" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_set_value" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec3_double_set_value" "', argument " "3"" of type '" "double""'"); }
    temp3 = static_cast< double >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec3_double_set_value" "', argument " "4"" of type '" "double""'"); }
    temp4 = static_cast< double >(val4); arg4 = &temp4;
  (arg1)->set_value((double const &)*arg2,(double const &)*arg3,(double const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_set_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_set_value" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_set_value" "', argument " "2"" of type '" "double const [3]""'");  }
    arg2 = reinterpret_cast< double * >(argp2); (arg1)->set_value((double const (*))arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_set_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_double_set_value", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_vec3_double_set_value__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_vec3_double_set_value__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_double_set_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::set_value(double const &,double const &,double const &)\n"
  "    inlib::vec3< double >::set_value(double const [3])\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; double *arg3 = 0 ; double *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; PyObject *swig_obj[4] ; if (!SWIG_Python_UnpackTuple(args, "vec3_double_value", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_value" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_double,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_value" "', argument " "2"" of type '" "double &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_value" "', argument " "2"" of type '" "double &""'"); }
   arg2 = reinterpret_cast< double * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vec3_double_value" "', argument " "3"" of type '" "double &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_value" "', argument " "3"" of type '" "double &""'"); }
   arg3 = reinterpret_cast< double * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vec3_double_value" "', argument " "4"" of type '" "double &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_value" "', argument " "4"" of type '" "double &""'"); }
   arg4 = reinterpret_cast< double * >(argp4); ((inlib::vec3< double > const *)arg1)->value(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_length" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)((inlib::vec3< double > const *)arg1)->length();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_normalize" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double)(arg1)->normalize();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; double result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double_dot", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_dot" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_dot" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_dot" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = (double)((inlib::vec3< double > const *)arg1)->dot((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_cross(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< double > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double_cross", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_cross" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_cross" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_cross" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = ((inlib::vec3< double > const *)arg1)->cross((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< double >(static_cast< const inlib::vec3< double >& >(result))), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_equal" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_equal" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_equal" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = (bool)((inlib::vec3< double > const *)arg1)->equal((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ;
  double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_divide" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_divide" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2; result = (bool)(arg1)->divide((double const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ;
  double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double_multiply", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_multiply" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_multiply" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2; (arg1)->multiply((double const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_add" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_add" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_add" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2); (arg1)->add((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; double *arg3 = 0 ;
  double *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; double temp3 ; double val3 ;
  int ecode3 = 0 ; double temp4 ; double val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_add" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_add" "', argument " "2"" of type '" "double""'"); }  
  temp2 = static_cast< double >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_double(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec3_double_add" "', argument " "3"" of type '" "double""'"); }  
  temp3 = static_cast< double >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_double(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec3_double_add" "', argument " "4"" of type '" "double""'"); }  
  temp4 = static_cast< double >(val4); arg4 = &temp4;
  (arg1)->add((double const &)*arg2,(double const &)*arg3,(double const &)*arg4); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_add(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_double_add", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec3_double_add__SWIG_0(self, argc, argv);}  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_vec3_double_add__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_double_add'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::add(inlib::vec3< double > const &)\n"
  "    inlib::vec3< double >::add(double const &,double const &,double const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_subtract__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_subtract" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_subtract" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_subtract" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2); (arg1)->subtract((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_subtract__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; double *arg3 = 0 ;
  double *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; double temp3 ; double val3 ;
  int ecode3 = 0 ; double temp4 ; double val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_subtract" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double_subtract" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec3_double_subtract" "', argument " "3"" of type '" "double""'"); }
    temp3 = static_cast< double >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec3_double_subtract" "', argument " "4"" of type '" "double""'"); }
    temp4 = static_cast< double >(val4); arg4 = &temp4;
  (arg1)->subtract((double const &)*arg2,(double const &)*arg3,(double const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_subtract(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec3_double_subtract", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec3_double_subtract__SWIG_0(self, argc, argv);}  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec3T_double_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_vec3_double_subtract__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec3_double_subtract'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3< double >::subtract(inlib::vec3< double > const &)\n"
  "    inlib::vec3< double >::subtract(double const &,double const &,double const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3_double_cos_angle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; double *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "vec3_double_cos_angle", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_cos_angle" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double_cos_angle" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_cos_angle" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_double,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vec3_double_cos_angle" "', argument " "3"" of type '" "double &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double_cos_angle" "', argument " "3"" of type '" "double &""'"); }
   arg3 = reinterpret_cast< double * >(argp3);
  result = (bool)((inlib::vec3< double > const *)arg1)->cos_angle((inlib::vec3< double > const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ;
  double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< double > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double___imul__" "', argument " "1"" of type '" "inlib::vec3< double > *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double___imul__" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2;
  result = (inlib::vec3< double > *) &(arg1)->operator *=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< double > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double___add__" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double___add__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double___add__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = ((inlib::vec3< double > const *)arg1)->operator +((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< double >(static_cast< const inlib::vec3< double >& >(result))), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_double___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< double > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double___sub__" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double___sub__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double___sub__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = ((inlib::vec3< double > const *)arg1)->operator -((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< double >(static_cast< const inlib::vec3< double >& >(result))), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_double___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; double temp2 ;
  double val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3< double > result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double___mul__" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3_double___mul__" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2;
  result = ((inlib::vec3< double > const *)arg1)->operator *((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3< double >(static_cast< const inlib::vec3< double >& >(result))), SWIGTYPE_p_inlib__vec3T_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_double___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double___eq__" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double___eq__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double___eq__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = (bool)((inlib::vec3< double > const *)arg1)->operator ==((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_double___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; inlib::vec3< double > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec3_double___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double___ne__" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_double_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3_double___ne__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3_double___ne__" "', argument " "2"" of type '" "inlib::vec3< double > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< double > * >(argp2);
  result = (bool)((inlib::vec3< double > const *)arg1)->operator !=((inlib::vec3< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3_double_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_size" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1);
  result = (unsigned int)((inlib::vec3< double > const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3_double_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3< double > *arg1 = (inlib::vec3< double > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  double *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3T_double_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3_double_data" "', argument " "1"" of type '" "inlib::vec3< double > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3< double > * >(argp1); result = (double *)((inlib::vec3< double > const *)arg1)->data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *vec3_double_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__vec3T_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vec3_double_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_vec4_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::vec4< float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::vec4< float > *)new inlib::vec4< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec4< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec4_float" "', argument " "1"" of type '" "float const [4]""'");  }
    arg1 = reinterpret_cast< float * >(argp1); result = (inlib::vec4< float > *)new inlib::vec4< float >((float const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 = 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ; float temp1 ; float val1 ;
  int ecode1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; float temp4 ;
  float val4 ; int ecode4 = 0 ; inlib::vec4< float > *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vec4_float" "', argument " "1"" of type '" "float""'"); }  
  temp1 = static_cast< float >(val1); arg1 = &temp1; ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vec4_float" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_vec4_float" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_vec4_float" "', argument " "4"" of type '" "float""'"); }  
  temp4 = static_cast< float >(val4); arg4 = &temp4;
  result = (inlib::vec4< float > *)new inlib::vec4< float >((float const &)*arg1,(float const &)*arg2,(float const &)*arg3,(float const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_vec4_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vec4_float" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4_float__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec4< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec4_float" "', argument " "1"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec4_float" "', argument " "1"" of type '" "inlib::vec4< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  result = (inlib::vec4< float > *)new inlib::vec4< float >((inlib::vec4< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4_float(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vec4_float", 0, 4, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_vec4_float__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_vec4_float__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_vec4_float__SWIG_3(self, argc, argv);}  }  if (argc == 4) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_vec4_float__SWIG_2(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vec4_float'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::vec4()\n" "    inlib::vec4< float >::vec4(float const [4])\n"
  "    inlib::vec4< float >::vec4(float const &,float const &,float const &,float const &)\n"
  "    inlib::vec4< float >::vec4(inlib::vec4< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_v0__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v0" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float)((inlib::vec4< float > const *)arg1)->v0();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v1" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float)((inlib::vec4< float > const *)arg1)->v1();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v2" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float)((inlib::vec4< float > const *)arg1)->v2();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v3" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float)((inlib::vec4< float > const *)arg1)->v3();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v0__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v0" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_v0" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v0((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v0(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_v0", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec4_float_v0__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec4_float_v0__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_v0'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::v0() const\n"
  "    inlib::vec4< float >::v0(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_v1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v1" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_v1" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v1((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v1(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_v1", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec4_float_v1__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec4_float_v1__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_v1'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::v1() const\n"
  "    inlib::vec4< float >::v1(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_v2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v2" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_v2" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v2((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v2(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_v2", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec4_float_v2__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec4_float_v2__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_v2'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::v2() const\n"
  "    inlib::vec4< float >::v2(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_v3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_v3" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_v3" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v3((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_v3(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_v3", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_vec4_float_v3__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_vec4_float_v3__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_v3'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::v3() const\n"
  "    inlib::vec4< float >::v3(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_set_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ;
  float val3 ; int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_set_value" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_set_value" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec4_float_set_value" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec4_float_set_value" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "vec4_float_set_value" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5;
  (arg1)->set_value((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_set_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_set_value" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float_set_value" "', argument " "2"" of type '" "float const [4]""'");  }
    arg2 = reinterpret_cast< float * >(argp2); (arg1)->set_value((float const (*))arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float_value", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_value" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float_value" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_value" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vec4_float_value" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_value" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vec4_float_value" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_value" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "vec4_float_value" "', argument " "5"" of type '" "float &""'");  } 
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_value" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); ((inlib::vec4< float > const *)arg1)->value(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_set_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; unsigned int arg2 ; float *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_set_value" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_set_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec4_float_set_value" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; result = (bool)(arg1)->set_value(arg2,(float const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_set_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_set_value", 0, 5, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_vec4_float_set_value__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_vec4_float_set_value__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_vec4_float_set_value__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_set_value'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::vec4< float >::set_value(float const &,float const &,float const &,float const &)\n"
  "    inlib::vec4< float >::set_value(float const [4])\n" "    inlib::vec4< float >::set_value(unsigned int,float const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_length" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float)((inlib::vec4< float > const *)arg1)->length();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_normalize" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float)(arg1)->normalize();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_equal" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float_equal" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_equal" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2);
  result = (bool)((inlib::vec4< float > const *)arg1)->equal((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float_multiply", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_multiply" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_multiply" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->multiply((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_divide(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float_divide", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_divide" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_divide" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; result = (bool)(arg1)->divide((float const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_add" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float_add" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_add" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2); (arg1)->add((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ;
  float val3 ; int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_add" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_add" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec4_float_add" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec4_float_add" "', argument " "4"" of type '" "float""'"); }  
  temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "vec4_float_add" "', argument " "5"" of type '" "float""'"); }  
  temp5 = static_cast< float >(val5); arg5 = &temp5;
  (arg1)->add((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_add(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_add", 0, 5, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec4_float_add__SWIG_0(self, argc, argv);}  }  }  if (argc == 5) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_vec4_float_add__SWIG_1(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_add'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::add(inlib::vec4< float > const &)\n"
  "    inlib::vec4< float >::add(float const &,float const &,float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float_subtract__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_subtract" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float_subtract" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float_subtract" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2); (arg1)->subtract((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_subtract__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ;
  float val3 ; int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_subtract" "', argument " "1"" of type '" "inlib::vec4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float_subtract" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vec4_float_subtract" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vec4_float_subtract" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "vec4_float_subtract" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5;
  (arg1)->subtract((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_subtract(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "vec4_float_subtract", 0, 5, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_vec4_float_subtract__SWIG_0(self, argc, argv);}  }  }  if (argc == 5) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__vec4T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_vec4_float_subtract__SWIG_1(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vec4_float_subtract'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4< float >::subtract(inlib::vec4< float > const &)\n"
  "    inlib::vec4< float >::subtract(float const &,float const &,float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4_float___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec4< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float___add__" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float___add__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float___add__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2);
  result = ((inlib::vec4< float > const *)arg1)->operator +((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec4< float >(static_cast< const inlib::vec4< float >& >(result))), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4_float___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec4< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float___sub__" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float___sub__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float___sub__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2);
  result = ((inlib::vec4< float > const *)arg1)->operator -((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec4< float >(static_cast< const inlib::vec4< float >& >(result))), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4_float___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::vec4< float > result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float___mul__" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4_float___mul__" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = ((inlib::vec4< float > const *)arg1)->operator *((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec4< float >(static_cast< const inlib::vec4< float >& >(result))), SWIGTYPE_p_inlib__vec4T_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4_float___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float___eq__" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float___eq__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float___eq__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2);
  result = (bool)((inlib::vec4< float > const *)arg1)->operator ==((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4_float___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; inlib::vec4< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "vec4_float___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float___ne__" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4_float___ne__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4_float___ne__" "', argument " "2"" of type '" "inlib::vec4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4< float > * >(argp2);
  result = (bool)((inlib::vec4< float > const *)arg1)->operator !=((inlib::vec4< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4_float_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_size" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1);
  result = (unsigned int)((inlib::vec4< float > const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4_float_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4< float > *arg1 = (inlib::vec4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4_float_data" "', argument " "1"" of type '" "inlib::vec4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4< float > * >(argp1); result = (float *)((inlib::vec4< float > const *)arg1)->data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *vec4_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__vec4T_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vec4_float_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_mat_float_4__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::mat< float,4 > *)new inlib::mat< float,4 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_mat_float_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mat_float_4" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_mat_float_4__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::mat< float,4 > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mat_float_4" "', argument " "1"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mat_float_4" "', argument " "1"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  result = (inlib::mat< float,4 > *)new inlib::mat< float,4 >((inlib::mat< float,4 > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat_float_4__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::mat< float,4 > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mat_float_4" "', argument " "1"" of type '" "float const []""'");  }
    arg1 = reinterpret_cast< float * >(argp1);
  result = (inlib::mat< float,4 > *)new inlib::mat< float,4 >((float const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat_float_4(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_mat_float_4", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_mat_float_4__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_mat_float_4__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_mat_float_4__SWIG_2(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_mat_float_4'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat< float,4 >::mat()\n"
  "    inlib::mat< float,4 >::mat(inlib::mat< float,4 > const &)\n" "    inlib::mat< float,4 >::mat(float const [])\n");
  return 0; }
SWIGINTERN PyObject *_wrap_mat_float_4_set_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; unsigned int arg2 ; unsigned int arg3 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; float temp4 ;
  float val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_set_value", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_set_value" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4_set_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat_float_4_set_value" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat_float_4_set_value" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; (arg1)->set_value(arg2,arg3,(float const &)*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; float *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_value" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat_float_4_value" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (float *) &((inlib::mat< float,4 > const *)arg1)->value(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; float result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_value" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat_float_4_value" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (float)(arg1)->value(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat_float_4_value", 0, 3, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__matT_float_4_t, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_mat_float_4_value__SWIG_0(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__matT_float_4_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_mat_float_4_value__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat_float_4_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat< float,4 >::value(unsigned int,unsigned int) const\n"
  "    inlib::mat< float,4 >::value(unsigned int,unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat_float_4_set_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_set_matrix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_set_matrix" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_set_matrix" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_set_matrix" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2); (arg1)->set_matrix((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_set_constant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_set_constant", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_set_constant" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4_set_constant" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->set_constant((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_set_zero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_set_zero" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); (arg1)->set_zero(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_set_identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_set_identity" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); (arg1)->set_identity(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_set_diagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_set_diagonal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_set_diagonal" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4_set_diagonal" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->set_diagonal((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_mul_mtx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_mul_mtx", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_mul_mtx" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_mul_mtx" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_mul_mtx" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2); (arg1)->mul_mtx((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_left_mul_mtx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_left_mul_mtx", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_left_mul_mtx" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_left_mul_mtx" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_left_mul_mtx" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2); (arg1)->left_mul_mtx((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_data" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); result = (float *)((inlib::mat< float,4 > const *)arg1)->data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_size" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  result = (unsigned int)((inlib::mat< float,4 > const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_equal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_equal" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_equal" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_equal" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (bool)((inlib::mat< float,4 > const *)arg1)->equal((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_equal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ;
  float *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_equal" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_equal" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_equal" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat_float_4_equal" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3;
  result = (bool)((inlib::mat< float,4 > const *)arg1)->equal((inlib::mat< float,4 > const &)*arg2,(float const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_equal(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat_float_4_equal", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__matT_float_4_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_mat_float_4_equal__SWIG_0(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__matT_float_4_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_mat_float_4_equal__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat_float_4_equal'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat< float,4 >::equal(inlib::mat< float,4 > const &) const\n"
  "    inlib::mat< float,4 >::equal(inlib::mat< float,4 > const &,float const &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat_float_4_trace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_trace" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); result = (float)((inlib::mat< float,4 > const *)arg1)->trace();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_transpose" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); (arg1)->transpose(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ;
  float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_multiply", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_multiply" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4_multiply" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->multiply((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_is_symmetric(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_is_symmetric" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  result = (bool)((inlib::mat< float,4 > const *)arg1)->is_symmetric(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_is_antisymmetric(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_is_antisymmetric" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  result = (bool)((inlib::mat< float,4 > const *)arg1)->is_antisymmetric();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_symmetric_part(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_symmetric_part", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_symmetric_part" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_symmetric_part" "', argument " "2"" of type '" "inlib::mat< float,4 > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_symmetric_part" "', argument " "2"" of type '" "inlib::mat< float,4 > &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2); ((inlib::mat< float,4 > const *)arg1)->symmetric_part(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_antisymmetric_part(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_antisymmetric_part", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_antisymmetric_part" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_antisymmetric_part" "', argument " "2"" of type '" "inlib::mat< float,4 > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_antisymmetric_part" "', argument " "2"" of type '" "inlib::mat< float,4 > &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2); ((inlib::mat< float,4 > const *)arg1)->antisymmetric_part(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_determinant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  float result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_determinant" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  result = (float)((inlib::mat< float,4 > const *)arg1)->determinant();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4_invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4_invert", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4_invert" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4_invert" "', argument " "2"" of type '" "inlib::mat< float,4 > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4_invert" "', argument " "2"" of type '" "inlib::mat< float,4 > &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (bool)((inlib::mat< float,4 > const *)arg1)->invert(*arg2); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4___call__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___call__" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4___call__" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat_float_4___call__" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (float)((inlib::mat< float,4 > const *)arg1)->operator ()(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___eq__" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4___eq__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4___eq__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (bool)((inlib::mat< float,4 > const *)arg1)->operator ==((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_mat_float_4___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___ne__" "', argument " "1"" of type '" "inlib::mat< float,4 > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4___ne__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4___ne__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (bool)((inlib::mat< float,4 > const *)arg1)->operator !=((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_mat_float_4___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; inlib::mat< float,4 > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___imul__" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4___imul__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4___imul__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (inlib::mat< float,4 > *) &(arg1)->operator *=((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::mat< float,4 > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___iadd__" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4___iadd__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4___iadd__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (inlib::mat< float,4 > *) &(arg1)->operator +=((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; inlib::mat< float,4 > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::mat< float,4 > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "mat_float_4___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___isub__" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat_float_4___isub__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat_float_4___isub__" "', argument " "2"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat< float,4 > * >(argp2);
  result = (inlib::mat< float,4 > *) &(arg1)->operator -=((inlib::mat< float,4 > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = (inlib::mat< float,4 > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; inlib::mat< float,4 > *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat_float_4___imul__" "', argument " "1"" of type '" "inlib::mat< float,4 > *""'");  }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat_float_4___imul__" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = (inlib::mat< float,4 > *) &(arg1)->operator *=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat_float_4___imul__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat_float_4___imul__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__matT_float_4_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_mat_float_4___imul____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__matT_float_4_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat_float_4___imul____SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat_float_4___imul__'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat< float,4 >::operator *=(inlib::mat< float,4 > const &)\n"
  "    inlib::mat< float,4 >::operator *=(float const &)\n"); return 0; }
SWIGINTERN PyObject *mat_float_4_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__matT_float_4_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mat_float_4_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_mat4_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::mat4< float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::mat4< float > *)new inlib::mat4< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat< float,4 > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::mat4< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__matT_float_4_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mat4_float" "', argument " "1"" of type '" "inlib::mat< float,4 > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mat4_float" "', argument " "1"" of type '" "inlib::mat< float,4 > const &""'"); }
   arg1 = reinterpret_cast< inlib::mat< float,4 > * >(argp1);
  result = (inlib::mat4< float > *)new inlib::mat4< float >((inlib::mat< float,4 > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_mat4_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mat4_float" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::mat4< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__mat4T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mat4_float" "', argument " "1"" of type '" "inlib::mat4< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mat4_float" "', argument " "1"" of type '" "inlib::mat4< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1);
  result = (inlib::mat4< float > *)new inlib::mat4< float >((inlib::mat4< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4_float__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 = 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ; float *arg5 = 0 ;
  float *arg6 = 0 ; float *arg7 = 0 ; float *arg8 = 0 ; float *arg9 = 0 ; float *arg10 = 0 ; float *arg11 = 0 ;
  float *arg12 = 0 ; float *arg13 = 0 ; float *arg14 = 0 ; float *arg15 = 0 ; float *arg16 = 0 ; float temp1 ; float val1 ;
  int ecode1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; float temp4 ;
  float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ; float temp6 ; float val6 ; int ecode6 = 0 ;
  float temp7 ; float val7 ; int ecode7 = 0 ; float temp8 ; float val8 ; int ecode8 = 0 ; float temp9 ; float val9 ;
  int ecode9 = 0 ; float temp10 ; float val10 ; int ecode10 = 0 ; float temp11 ; float val11 ; int ecode11 = 0 ; float temp12 ;
  float val12 ; int ecode12 = 0 ; float temp13 ; float val13 ; int ecode13 = 0 ; float temp14 ; float val14 ; int ecode14 = 0 ;
  float temp15 ; float val15 ; int ecode15 = 0 ; float temp16 ; float val16 ; int ecode16 = 0 ;
  inlib::mat4< float > *result = 0 ; if ((nobjs < 16) || (nobjs > 16)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_mat4_float" "', argument " "1"" of type '" "float""'"); }  
  temp1 = static_cast< float >(val1); arg1 = &temp1; ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_mat4_float" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_mat4_float" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_mat4_float" "', argument " "4"" of type '" "float""'"); }  
  temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_mat4_float" "', argument " "5"" of type '" "float""'"); }  
  temp5 = static_cast< float >(val5); arg5 = &temp5; ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_mat4_float" "', argument " "6"" of type '" "float""'"); }  
  temp6 = static_cast< float >(val6); arg6 = &temp6; ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_mat4_float" "', argument " "7"" of type '" "float""'"); }  
  temp7 = static_cast< float >(val7); arg7 = &temp7; ecode8 = SWIG_AsVal_float(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_mat4_float" "', argument " "8"" of type '" "float""'"); }  
  temp8 = static_cast< float >(val8); arg8 = &temp8; ecode9 = SWIG_AsVal_float(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_mat4_float" "', argument " "9"" of type '" "float""'"); }  
  temp9 = static_cast< float >(val9); arg9 = &temp9; ecode10 = SWIG_AsVal_float(swig_obj[9], &val10); if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_mat4_float" "', argument " "10"" of type '" "float""'"); }  
  temp10 = static_cast< float >(val10); arg10 = &temp10; ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_mat4_float" "', argument " "11"" of type '" "float""'"); }  
  temp11 = static_cast< float >(val11); arg11 = &temp11; ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_mat4_float" "', argument " "12"" of type '" "float""'"); }  
  temp12 = static_cast< float >(val12); arg12 = &temp12; ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "new_mat4_float" "', argument " "13"" of type '" "float""'"); }  
  temp13 = static_cast< float >(val13); arg13 = &temp13; ecode14 = SWIG_AsVal_float(swig_obj[13], &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_mat4_float" "', argument " "14"" of type '" "float""'"); }  
  temp14 = static_cast< float >(val14); arg14 = &temp14; ecode15 = SWIG_AsVal_float(swig_obj[14], &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_mat4_float" "', argument " "15"" of type '" "float""'"); }  
  temp15 = static_cast< float >(val15); arg15 = &temp15; ecode16 = SWIG_AsVal_float(swig_obj[15], &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "new_mat4_float" "', argument " "16"" of type '" "float""'"); }  
  temp16 = static_cast< float >(val16); arg16 = &temp16;
  result = (inlib::mat4< float > *)new inlib::mat4< float >((float const &)*arg1,(float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5,(float const &)*arg6,(float const &)*arg7,(float const &)*arg8,(float const &)*arg9,(float const &)*arg10,(float const &)*arg11,(float const &)*arg12,(float const &)*arg13,(float const &)*arg14,(float const &)*arg15,(float const &)*arg16);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4_float(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[17] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_mat4_float", 0, 16, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_mat4_float__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_mat4_float__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__matT_float_4_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_mat4_float__SWIG_1(self, argc, argv);}  }  if (argc == 16) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_float(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_float(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_float(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_float(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                        int res = SWIG_AsVal_float(argv[9], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                          int res = SWIG_AsVal_float(argv[10], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                            int res = SWIG_AsVal_float(argv[11], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                              int res = SWIG_AsVal_float(argv[12], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                int res = SWIG_AsVal_float(argv[13], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                  int res = SWIG_AsVal_float(argv[14], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                    int res = SWIG_AsVal_float(argv[15], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                                    return _wrap_new_mat4_float__SWIG_3(self, argc, argv);}  }  }  }  }  }  }  }  }  }  }  }  }
           }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_mat4_float'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::mat4()\n"
  "    inlib::mat4< float >::mat4(inlib::mat< float,4 > const &)\n"
  "    inlib::mat4< float >::mat4(inlib::mat4< float > const &)\n"
  "    inlib::mat4< float >::mat4(float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_set_matrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; inlib::mat4< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_matrix" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__mat4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4_float_set_matrix" "', argument " "2"" of type '" "inlib::mat4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_set_matrix" "', argument " "2"" of type '" "inlib::mat4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat4< float > * >(argp2); (arg1)->set_matrix((inlib::mat4< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_matrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; float *arg5 = 0 ; float *arg6 = 0 ; float *arg7 = 0 ; float *arg8 = 0 ; float *arg9 = 0 ; float *arg10 = 0 ;
  float *arg11 = 0 ; float *arg12 = 0 ; float *arg13 = 0 ; float *arg14 = 0 ; float *arg15 = 0 ; float *arg16 = 0 ;
  float *arg17 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ; float temp6 ;
  float val6 ; int ecode6 = 0 ; float temp7 ; float val7 ; int ecode7 = 0 ; float temp8 ; float val8 ; int ecode8 = 0 ;
  float temp9 ; float val9 ; int ecode9 = 0 ; float temp10 ; float val10 ; int ecode10 = 0 ; float temp11 ; float val11 ;
  int ecode11 = 0 ; float temp12 ; float val12 ; int ecode12 = 0 ; float temp13 ; float val13 ; int ecode13 = 0 ; float temp14 ;
  float val14 ; int ecode14 = 0 ; float temp15 ; float val15 ; int ecode15 = 0 ; float temp16 ; float val16 ; int ecode16 = 0 ;
  float temp17 ; float val17 ; int ecode17 = 0 ; if ((nobjs < 17) || (nobjs > 17)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_matrix" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_matrix" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_set_matrix" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_set_matrix" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_set_matrix" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5; ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "mat4_float_set_matrix" "', argument " "6"" of type '" "float""'"); }
    temp6 = static_cast< float >(val6); arg6 = &temp6; ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "mat4_float_set_matrix" "', argument " "7"" of type '" "float""'"); }
    temp7 = static_cast< float >(val7); arg7 = &temp7; ecode8 = SWIG_AsVal_float(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "mat4_float_set_matrix" "', argument " "8"" of type '" "float""'"); }
    temp8 = static_cast< float >(val8); arg8 = &temp8; ecode9 = SWIG_AsVal_float(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "mat4_float_set_matrix" "', argument " "9"" of type '" "float""'"); }
    temp9 = static_cast< float >(val9); arg9 = &temp9; ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "mat4_float_set_matrix" "', argument " "10"" of type '" "float""'"); }
    temp10 = static_cast< float >(val10); arg10 = &temp10; ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "mat4_float_set_matrix" "', argument " "11"" of type '" "float""'"); }
    temp11 = static_cast< float >(val11); arg11 = &temp11; ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "mat4_float_set_matrix" "', argument " "12"" of type '" "float""'"); }
    temp12 = static_cast< float >(val12); arg12 = &temp12; ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "mat4_float_set_matrix" "', argument " "13"" of type '" "float""'"); }
    temp13 = static_cast< float >(val13); arg13 = &temp13; ecode14 = SWIG_AsVal_float(swig_obj[13], &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "mat4_float_set_matrix" "', argument " "14"" of type '" "float""'"); }
    temp14 = static_cast< float >(val14); arg14 = &temp14; ecode15 = SWIG_AsVal_float(swig_obj[14], &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "mat4_float_set_matrix" "', argument " "15"" of type '" "float""'"); }
    temp15 = static_cast< float >(val15); arg15 = &temp15; ecode16 = SWIG_AsVal_float(swig_obj[15], &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "mat4_float_set_matrix" "', argument " "16"" of type '" "float""'"); }
    temp16 = static_cast< float >(val16); arg16 = &temp16; ecode17 = SWIG_AsVal_float(swig_obj[16], &val17);
  if (!SWIG_IsOK(ecode17)) {
    SWIG_exception_fail(SWIG_ArgError(ecode17), "in method '" "mat4_float_set_matrix" "', argument " "17"" of type '" "float""'"); }
    temp17 = static_cast< float >(val17); arg17 = &temp17;
  (arg1)->set_matrix((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5,(float const &)*arg6,(float const &)*arg7,(float const &)*arg8,(float const &)*arg9,(float const &)*arg10,(float const &)*arg11,(float const &)*arg12,(float const &)*arg13,(float const &)*arg14,(float const &)*arg15,(float const &)*arg16,(float const &)*arg17);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_matrix(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[18] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_set_matrix", 0, 17, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_mat4_float_set_matrix__SWIG_0(self, argc, argv);}  }  } 
  if (argc == 17) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_float(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_float(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_float(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_float(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                        int res = SWIG_AsVal_float(argv[9], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                          int res = SWIG_AsVal_float(argv[10], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                            int res = SWIG_AsVal_float(argv[11], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                              int res = SWIG_AsVal_float(argv[12], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                int res = SWIG_AsVal_float(argv[13], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                  int res = SWIG_AsVal_float(argv[14], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                    int res = SWIG_AsVal_float(argv[15], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                      int res = SWIG_AsVal_float(argv[16], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                                      return _wrap_mat4_float_set_matrix__SWIG_1(self, argc, argv);}  }  }  }  }  }  }  }  }  }
                   }  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_set_matrix'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::set_matrix(inlib::mat4< float > const &)\n"
  "    inlib::mat4< float >::set_matrix(float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &,float const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_set_scale__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_scale" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_scale" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->set_scale((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_scale__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_scale" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_scale" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_set_scale" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_set_scale" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->set_scale((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_scale(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_set_scale", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_set_scale__SWIG_0(self, argc, argv);}  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_mat4_float_set_scale__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_set_scale'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::set_scale(float const &)\n"
  "    inlib::mat4< float >::set_scale(float const &,float const &,float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_set_translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  float temp4 ; float val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_set_translate", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_translate" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_translate" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_set_translate" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_set_translate" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->set_translate((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ;
  PyObject *swig_obj[5] ; if (!SWIG_Python_UnpackTuple(args, "mat4_float_set_rotate", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_rotate" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_rotate" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_set_rotate" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_set_rotate" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_set_rotate" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5;
  (arg1)->set_rotate((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_ortho(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; float *arg6 = 0 ; float *arg7 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ;
  int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ;
  float val5 ; int ecode5 = 0 ; float temp6 ; float val6 ; int ecode6 = 0 ; float temp7 ; float val7 ; int ecode7 = 0 ;
  PyObject *swig_obj[7] ; if (!SWIG_Python_UnpackTuple(args, "mat4_float_set_ortho", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_ortho" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_ortho" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_set_ortho" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_set_ortho" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_set_ortho" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5; ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "mat4_float_set_ortho" "', argument " "6"" of type '" "float""'"); }
    temp6 = static_cast< float >(val6); arg6 = &temp6; ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "mat4_float_set_ortho" "', argument " "7"" of type '" "float""'"); }
    temp7 = static_cast< float >(val7); arg7 = &temp7;
  (arg1)->set_ortho((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5,(float const &)*arg6,(float const &)*arg7);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_set_frustum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; float *arg6 = 0 ; float *arg7 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ;
  int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ;
  float val5 ; int ecode5 = 0 ; float temp6 ; float val6 ; int ecode6 = 0 ; float temp7 ; float val7 ; int ecode7 = 0 ;
  PyObject *swig_obj[7] ; if (!SWIG_Python_UnpackTuple(args, "mat4_float_set_frustum", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_set_frustum" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_set_frustum" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_set_frustum" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_set_frustum" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_set_frustum" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5; ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "mat4_float_set_frustum" "', argument " "6"" of type '" "float""'"); }
    temp6 = static_cast< float >(val6); arg6 = &temp6; ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "mat4_float_set_frustum" "', argument " "7"" of type '" "float""'"); }
    temp7 = static_cast< float >(val7); arg7 = &temp7;
  (arg1)->set_frustum((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5,(float const &)*arg6,(float const &)*arg7);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_get_translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_get_translate", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_get_translate" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4_float_get_translate" "', argument " "2"" of type '" "float &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_get_translate" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4_float_get_translate" "', argument " "3"" of type '" "float &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_get_translate" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "mat4_float_get_translate" "', argument " "4"" of type '" "float &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_get_translate" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); ((inlib::mat4< float > const *)arg1)->get_translate(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_mul_4", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_4" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4_float_mul_4" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_4" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4_float_mul_4" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_4" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "mat4_float_mul_4" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_4" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "mat4_float_mul_4" "', argument " "5"" of type '" "float &""'");  } 
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_4" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); ((inlib::mat4< float > const *)arg1)->mul_4(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; PyObject *swig_obj[4] ; if (!SWIG_Python_UnpackTuple(args, "mat4_float_mul_3", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_3" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4_float_mul_3" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_3" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4_float_mul_3" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_3" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "mat4_float_mul_3" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_3" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); ((inlib::mat4< float > const *)arg1)->mul_3(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_mul_2", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_2" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4_float_mul_2" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_2" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4_float_mul_2" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4_float_mul_2" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); ((inlib::mat4< float > const *)arg1)->mul_2(*arg2,*arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_scale__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_scale" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_mul_scale" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_mul_scale" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_mul_scale" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->mul_scale((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_scale__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_scale" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_mul_scale" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->mul_scale((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_scale(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_mul_scale", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_mul_scale__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_mat4_float_mul_scale__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_mul_scale'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::mul_scale(float const &,float const &,float const &)\n"
  "    inlib::mat4< float >::mul_scale(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  float temp4 ; float val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_mul_translate", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_translate" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_mul_translate" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_mul_translate" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_mul_translate" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->mul_translate((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ;
  PyObject *swig_obj[5] ; if (!SWIG_Python_UnpackTuple(args, "mat4_float_mul_rotate", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_rotate" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_mul_rotate" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_mul_rotate" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_mul_rotate" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_mul_rotate" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5;
  (arg1)->mul_rotate((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_left_mul_rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ;
  PyObject *swig_obj[5] ; if (!SWIG_Python_UnpackTuple(args, "mat4_float_left_mul_rotate", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_left_mul_rotate" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_left_mul_rotate" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_left_mul_rotate" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_left_mul_rotate" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_left_mul_rotate" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5;
  (arg1)->left_mul_rotate((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_left_mul_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  float temp4 ; float val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_left_mul_scale", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_left_mul_scale" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_left_mul_scale" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_left_mul_scale" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_left_mul_scale" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->left_mul_scale((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_left_mul_translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ;
  int ecode3 = 0 ; float temp4 ; float val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_left_mul_translate", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_left_mul_translate" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_left_mul_translate" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_left_mul_translate" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_left_mul_translate" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4;
  (arg1)->left_mul_translate((float const &)*arg2,(float const &)*arg3,(float const &)*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v00__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v00" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v00" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v00((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v10__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v10" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v10" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v10((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v20__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v20" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v20" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v20((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v30__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v30" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v30" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v30((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v01__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v01" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v01" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v01((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v11__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v11" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v11" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v11((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v21__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v21" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v21" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v21((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v31__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v31" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v31" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v31((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v02__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v02" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v02" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v02((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v12__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v12" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v12" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v12((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v22__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v22" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v22" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v22((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v32__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v32" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v32" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v32((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v03__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v03" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v03" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v03((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v13__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v13" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v13" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v13((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v23__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v23" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v23" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v23((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v33__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v33" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_v33" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->v33((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v00__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v00" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v00();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v00(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v00", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v00__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v00__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v00'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v00(float const &)\n"
  "    inlib::mat4< float >::v00() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v10__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v10" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v10();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v10(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v10", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v10__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v10__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v10'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v10(float const &)\n"
  "    inlib::mat4< float >::v10() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v20__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v20" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v20();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v20(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v20", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v20__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v20__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v20'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v20(float const &)\n"
  "    inlib::mat4< float >::v20() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v30__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v30" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v30();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v30(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v30", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v30__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v30__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v30'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v30(float const &)\n"
  "    inlib::mat4< float >::v30() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v01__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v01" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v01();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v01(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v01", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v01__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v01__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v01'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v01(float const &)\n"
  "    inlib::mat4< float >::v01() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v11__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v11" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v11();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v11(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v11", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v11__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v11__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v11'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v11(float const &)\n"
  "    inlib::mat4< float >::v11() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v21__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v21" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v21();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v21(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v21", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v21__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v21__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v21'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v21(float const &)\n"
  "    inlib::mat4< float >::v21() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v31__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v31" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v31();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v31(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v31", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v31__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v31__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v31'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v31(float const &)\n"
  "    inlib::mat4< float >::v31() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v02__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v02" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v02();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v02(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v02", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v02__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v02__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v02'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v02(float const &)\n"
  "    inlib::mat4< float >::v02() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v12__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v12" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v12();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v12(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v12", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v12__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v12__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v12'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v12(float const &)\n"
  "    inlib::mat4< float >::v12() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v22__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v22" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v22();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v22(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v22", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v22__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v22__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v22'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v22(float const &)\n"
  "    inlib::mat4< float >::v22() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v32__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v32" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v32();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v32(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v32", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v32__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v32__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v32'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v32(float const &)\n"
  "    inlib::mat4< float >::v32() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v03__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v03" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v03();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v03(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v03", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v03__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v03__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v03'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v03(float const &)\n"
  "    inlib::mat4< float >::v03() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v13__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v13" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v13();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v13(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v13", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v13__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v13__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v13'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v13(float const &)\n"
  "    inlib::mat4< float >::v13() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v23__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v23" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v23();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v23(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v23", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v23__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v23__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v23'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v23(float const &)\n"
  "    inlib::mat4< float >::v23() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_v33__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_v33" "', argument " "1"" of type '" "inlib::mat4< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); result = (float *) &((inlib::mat4< float > const *)arg1)->v33();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4_float_v33(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "mat4_float_v33", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_mat4_float_v33__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_mat4_float_v33__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'mat4_float_v33'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4< float >::v33(float const &)\n"
  "    inlib::mat4< float >::v33() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4_float_mul_mtx_rot_root(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = (inlib::mat4< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; float *arg5 = 0 ; float *arg6 = 0 ; float *arg7 = 0 ; float *arg8 = 0 ; float *arg9 = 0 ; float *arg10 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ;
  float temp4 ; float val4 ; int ecode4 = 0 ; float temp5 ; float val5 ; int ecode5 = 0 ; float temp6 ; float val6 ;
  int ecode6 = 0 ; float temp7 ; float val7 ; int ecode7 = 0 ; float temp8 ; float val8 ; int ecode8 = 0 ; float temp9 ;
  float val9 ; int ecode9 = 0 ; float temp10 ; float val10 ; int ecode10 = 0 ; PyObject *swig_obj[10] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4_float_mul_mtx_rot_root", 10, 10, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4T_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "1"" of type '" "inlib::mat4< float > *""'");  }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "3"" of type '" "float""'"); }
    temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "4"" of type '" "float""'"); }
    temp4 = static_cast< float >(val4); arg4 = &temp4; ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "5"" of type '" "float""'"); }
    temp5 = static_cast< float >(val5); arg5 = &temp5; ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "6"" of type '" "float""'"); }
    temp6 = static_cast< float >(val6); arg6 = &temp6; ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "7"" of type '" "float""'"); }
    temp7 = static_cast< float >(val7); arg7 = &temp7; ecode8 = SWIG_AsVal_float(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "8"" of type '" "float""'"); }
    temp8 = static_cast< float >(val8); arg8 = &temp8; ecode9 = SWIG_AsVal_float(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "9"" of type '" "float""'"); }
    temp9 = static_cast< float >(val9); arg9 = &temp9; ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "mat4_float_mul_mtx_rot_root" "', argument " "10"" of type '" "float""'"); }
    temp10 = static_cast< float >(val10); arg10 = &temp10;
  (arg1)->mul_mtx_rot_root((float const &)*arg2,(float const &)*arg3,(float const &)*arg4,(float const &)*arg5,(float const &)*arg6,(float const &)*arg7,(float const &)*arg8,(float const &)*arg9,(float const &)*arg10);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *mat4_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__mat4T_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mat4_float_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_qrot_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::qrot< float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::qrot< float > *)new inlib::qrot< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_qrot_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ;
  int ecode2 = 0 ; inlib::qrot< float > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_qrot_float" "', argument " "1"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_qrot_float" "', argument " "1"" of type '" "inlib::vec3< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_qrot_float" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2);
  result = (inlib::qrot< float > *)new inlib::qrot< float >((inlib::vec3< float > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_qrot_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = 0 ; inlib::vec3< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; inlib::qrot< float > *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_qrot_float" "', argument " "1"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_qrot_float" "', argument " "1"" of type '" "inlib::vec3< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_qrot_float" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_qrot_float" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  result = (inlib::qrot< float > *)new inlib::qrot< float >((inlib::vec3< float > const &)*arg1,(inlib::vec3< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_qrot_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_qrot_float" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_qrot_float__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::qrot< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__qrotT_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_qrot_float" "', argument " "1"" of type '" "inlib::qrot< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_qrot_float" "', argument " "1"" of type '" "inlib::qrot< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  result = (inlib::qrot< float > *)new inlib::qrot< float >((inlib::qrot< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_qrot_float(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_qrot_float", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_qrot_float__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_qrot_float__SWIG_3(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_new_qrot_float__SWIG_2(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_qrot_float__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_qrot_float'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::qrot< float >::qrot()\n"
  "    inlib::qrot< float >::qrot(inlib::vec3< float > const &,float)\n"
  "    inlib::qrot< float >::qrot(inlib::vec3< float > const &,inlib::vec3< float > const &)\n"
  "    inlib::qrot< float >::qrot(inlib::qrot< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_qrot_float___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::qrot< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::qrot< float > *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "qrot_float___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float___imul__" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__qrotT_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float___imul__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float___imul__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::qrot< float > * >(argp2);
  result = (inlib::qrot< float > *) &(arg1)->operator *=((inlib::qrot< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::qrot< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "qrot_float___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float___eq__" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__qrotT_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float___eq__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float___eq__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::qrot< float > * >(argp2);
  result = (bool)((inlib::qrot< float > const *)arg1)->operator ==((inlib::qrot< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_qrot_float___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::qrot< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "qrot_float___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float___ne__" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__qrotT_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float___ne__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float___ne__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::qrot< float > * >(argp2);
  result = (bool)((inlib::qrot< float > const *)arg1)->operator !=((inlib::qrot< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_qrot_float___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::qrot< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; inlib::qrot< float > result;
  if (!SWIG_Python_UnpackTuple(args, "qrot_float___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float___mul__" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__qrotT_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float___mul__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float___mul__" "', argument " "2"" of type '" "inlib::qrot< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::qrot< float > * >(argp2);
  result = ((inlib::qrot< float > const *)arg1)->operator *((inlib::qrot< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::qrot< float >(static_cast< const inlib::qrot< float >& >(result))), SWIGTYPE_p_inlib__qrotT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_qrot_float_invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_invert" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1); result = (bool)(arg1)->invert();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::qrot< float > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "qrot_float_inverse", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_inverse" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__qrotT_float_t,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_inverse" "', argument " "2"" of type '" "inlib::qrot< float > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_inverse" "', argument " "2"" of type '" "inlib::qrot< float > &""'"); }
   arg2 = reinterpret_cast< inlib::qrot< float > * >(argp2);
  result = (bool)((inlib::qrot< float > const *)arg1)->inverse(*arg2); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_set_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ;
  float arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; float val3 ; int ecode3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_set_value" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_set_value" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_set_value" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "qrot_float_set_value" "', argument " "3"" of type '" "float""'"); }
    arg3 = static_cast< float >(val3); result = (bool)(arg1)->set_value((inlib::vec3< float > const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_set_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ;
  inlib::vec3< float > *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_set_value" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_set_value" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_set_value" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "qrot_float_set_value" "', argument " "3"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_set_value" "', argument " "3"" of type '" "inlib::vec3< float > const &""'"); }
   arg3 = reinterpret_cast< inlib::vec3< float > * >(argp3);
  result = (bool)(arg1)->set_value((inlib::vec3< float > const &)*arg2,(inlib::vec3< float > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ;
  float *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_value" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_value" "', argument " "2"" of type '" "inlib::vec3< float > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_value" "', argument " "2"" of type '" "inlib::vec3< float > &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "qrot_float_value" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_value" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)((inlib::qrot< float > const *)arg1)->value(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_set_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::mat4< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_set_value" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__mat4T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_set_value" "', argument " "2"" of type '" "inlib::mat4< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_set_value" "', argument " "2"" of type '" "inlib::mat4< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::mat4< float > * >(argp2); (arg1)->set_value((inlib::mat4< float > const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_set_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "qrot_float_set_value", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_qrot_float_set_value__SWIG_2(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_qrot_float_set_value__SWIG_1(self, argc, argv);}  }  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_qrot_float_set_value__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'qrot_float_set_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::qrot< float >::set_value(inlib::vec3< float > const &,float)\n"
  "    inlib::qrot< float >::set_value(inlib::vec3< float > const &,inlib::vec3< float > const &)\n"
  "    inlib::qrot< float >::set_value(inlib::mat4< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_qrot_float_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::mat4< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_value" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__mat4T_float_t,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_value" "', argument " "2"" of type '" "inlib::mat4< float > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_value" "', argument " "2"" of type '" "inlib::mat4< float > &""'"); }
   arg2 = reinterpret_cast< inlib::mat4< float > * >(argp2); ((inlib::qrot< float > const *)arg1)->value(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "qrot_float_value", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_qrot_float_value__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_qrot_float_value__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'qrot_float_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::qrot< float >::value(inlib::vec3< float > &,float &) const\n"
  "    inlib::qrot< float >::value(inlib::mat4< float > &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_qrot_float_mult_vec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; inlib::vec3< float > *arg2 = 0 ; inlib::vec3< float > *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "qrot_float_mult_vec", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_mult_vec" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_mult_vec" "', argument " "2"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_mult_vec" "', argument " "2"" of type '" "inlib::vec3< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3< float > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__vec3T_float_t,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "qrot_float_mult_vec" "', argument " "3"" of type '" "inlib::vec3< float > &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_mult_vec" "', argument " "3"" of type '" "inlib::vec3< float > &""'"); }
   arg3 = reinterpret_cast< inlib::vec3< float > * >(argp3);
  ((inlib::qrot< float > const *)arg1)->mult_vec((inlib::vec3< float > const &)*arg2,*arg3); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_mul_3f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; PyObject *swig_obj[4] ; if (!SWIG_Python_UnpackTuple(args, "qrot_float_mul_3f", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_mul_3f" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qrot_float_mul_3f" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_mul_3f" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "qrot_float_mul_3f" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_mul_3f" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "qrot_float_mul_3f" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "qrot_float_mul_3f" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); ((inlib::qrot< float > const *)arg1)->mul_3f(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_quat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::vec4< float > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_quat" "', argument " "1"" of type '" "inlib::qrot< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1);
  result = (inlib::vec4< float > *) &((inlib::qrot< float > const *)arg1)->quat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_quat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::qrot< float > *arg1 = (inlib::qrot< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::vec4< float > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__qrotT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qrot_float_quat" "', argument " "1"" of type '" "inlib::qrot< float > *""'");  }
   arg1 = reinterpret_cast< inlib::qrot< float > * >(argp1); result = (inlib::vec4< float > *) &(arg1)->quat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4T_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_qrot_float_quat(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "qrot_float_quat", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_qrot_float_quat__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__qrotT_float_t, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_qrot_float_quat__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'qrot_float_quat'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::qrot< float >::quat() const\n" "    inlib::qrot< float >::quat()\n");
  return 0; }
SWIGINTERN PyObject *qrot_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__qrotT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *qrot_float_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_vec3f__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::vec3f *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::vec3f *)new inlib::vec3f();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3f__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec3f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3f" "', argument " "1"" of type '" "float const [3]""'");  }
    arg1 = reinterpret_cast< float * >(argp1); result = (inlib::vec3f *)new inlib::vec3f((float const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3f__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; float arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; inlib::vec3f *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vec3f" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vec3f" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_vec3f" "', argument " "3"" of type '" "float""'"); }  
  arg3 = static_cast< float >(val3); result = (inlib::vec3f *)new inlib::vec3f(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_vec3f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vec3f" "', argument " "1"" of type '" "inlib::vec3f *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3f__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3f *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec3f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3f,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3f" "', argument " "1"" of type '" "inlib::vec3f const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec3f" "', argument " "1"" of type '" "inlib::vec3f const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1); result = (inlib::vec3f *)new inlib::vec3f((inlib::vec3f const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3f__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec3f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec3f" "', argument " "1"" of type '" "inlib::vec3< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec3f" "', argument " "1"" of type '" "inlib::vec3< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3< float > * >(argp1);
  result = (inlib::vec3f *)new inlib::vec3f((inlib::vec3< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec3f(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vec3f", 0, 3, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_vec3f__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_vec3f__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_vec3f__SWIG_3(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_vec3f__SWIG_4(self, argc, argv);}  }  if (argc == 3) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_vec3f__SWIG_2(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vec3f'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec3f::vec3f()\n" "    inlib::vec3f::vec3f(float const [3])\n"
  "    inlib::vec3f::vec3f(float,float,float)\n" "    inlib::vec3f::vec3f(inlib::vec3f const &)\n"
  "    inlib::vec3f::vec3f(inlib::vec3< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec3f___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; inlib::vec3f result; if (!SWIG_Python_UnpackTuple(args, "vec3f___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3f___mul__" "', argument " "1"" of type '" "inlib::vec3f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3f___mul__" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = ((inlib::vec3f const *)arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3f(static_cast< const inlib::vec3f& >(result))), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3f___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; inlib::vec3f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3f result;
  if (!SWIG_Python_UnpackTuple(args, "vec3f___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3f___add__" "', argument " "1"" of type '" "inlib::vec3f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3f___add__" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3f___add__" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2);
  result = ((inlib::vec3f const *)arg1)->operator +((inlib::vec3f const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3f(static_cast< const inlib::vec3f& >(result))), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3f___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; inlib::vec3f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3f result;
  if (!SWIG_Python_UnpackTuple(args, "vec3f___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3f___sub__" "', argument " "1"" of type '" "inlib::vec3f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3f___sub__" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3f___sub__" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2);
  result = ((inlib::vec3f const *)arg1)->operator -((inlib::vec3f const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3f(static_cast< const inlib::vec3f& >(result))), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec3f___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; inlib::vec3f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec3f *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "vec3f___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3f___iadd__" "', argument " "1"" of type '" "inlib::vec3f *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec3f___iadd__" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec3f___iadd__" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2);
  result = (inlib::vec3f *) &(arg1)->operator +=((inlib::vec3f const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3f___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; inlib::vec3f *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "vec3f___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3f___imul__" "', argument " "1"" of type '" "inlib::vec3f *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec3f___imul__" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = (inlib::vec3f *) &(arg1)->operator *=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec3f___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec3f *arg1 = (inlib::vec3f *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; inlib::vec3f result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec3f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec3f___neg__" "', argument " "1"" of type '" "inlib::vec3f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1); result = ((inlib::vec3f const *)arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new inlib::vec3f(static_cast< const inlib::vec3f& >(result))), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *vec3f_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__vec3f, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vec3f_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  inlib::vec3f *arg2 = 0 ; float val1 ; int ecode1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  inlib::vec3f result; if (!SWIG_Python_UnpackTuple(args, "__mul__", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__mul__" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2); result = inlib::operator *(arg1,(inlib::vec3f const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec3f(static_cast< const inlib::vec3f& >(result))), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_new_rotf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::rotf *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::rotf *)new inlib::rotf();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_rotf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3f *arg1 = 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  inlib::rotf *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_rotf" "', argument " "1"" of type '" "inlib::vec3f const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_rotf" "', argument " "1"" of type '" "inlib::vec3f const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_rotf" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = (inlib::rotf *)new inlib::rotf((inlib::vec3f const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_rotf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec3f *arg1 = 0 ; inlib::vec3f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; inlib::rotf *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_rotf" "', argument " "1"" of type '" "inlib::vec3f const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_rotf" "', argument " "1"" of type '" "inlib::vec3f const &""'"); }
   arg1 = reinterpret_cast< inlib::vec3f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_rotf" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_rotf" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2);
  result = (inlib::rotf *)new inlib::rotf((inlib::vec3f const &)*arg1,(inlib::vec3f const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_rotf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::rotf *arg1 = (inlib::rotf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__rotf, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_rotf" "', argument " "1"" of type '" "inlib::rotf *""'");  } 
  arg1 = reinterpret_cast< inlib::rotf * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_rotf__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::rotf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::rotf *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__rotf,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_rotf" "', argument " "1"" of type '" "inlib::rotf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_rotf" "', argument " "1"" of type '" "inlib::rotf const &""'"); }
   arg1 = reinterpret_cast< inlib::rotf * >(argp1); result = (inlib::rotf *)new inlib::rotf((inlib::rotf const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_rotf(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_rotf", 0, 2, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_rotf__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_rotf__SWIG_3(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_new_rotf__SWIG_2(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_rotf__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_rotf'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::rotf::rotf()\n" "    inlib::rotf::rotf(inlib::vec3f const &,float)\n"
  "    inlib::rotf::rotf(inlib::vec3f const &,inlib::vec3f const &)\n" "    inlib::rotf::rotf(inlib::rotf const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_rotf___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::rotf *arg1 = (inlib::rotf *) 0 ; inlib::rotf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::rotf *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "rotf___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__rotf, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rotf___imul__" "', argument " "1"" of type '" "inlib::rotf *""'");  }
   arg1 = reinterpret_cast< inlib::rotf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__rotf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rotf___imul__" "', argument " "2"" of type '" "inlib::rotf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rotf___imul__" "', argument " "2"" of type '" "inlib::rotf const &""'"); }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2); result = (inlib::rotf *) &(arg1)->operator *=((inlib::rotf const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, SWIG_POINTER_OWN |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_rotf___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::rotf *arg1 = (inlib::rotf *) 0 ; inlib::rotf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::rotf result;
  if (!SWIG_Python_UnpackTuple(args, "rotf___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__rotf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rotf___mul__" "', argument " "1"" of type '" "inlib::rotf const *""'");  }
   arg1 = reinterpret_cast< inlib::rotf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__rotf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rotf___mul__" "', argument " "2"" of type '" "inlib::rotf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rotf___mul__" "', argument " "2"" of type '" "inlib::rotf const &""'"); }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2);
  result = ((inlib::rotf const *)arg1)->operator *((inlib::rotf const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::rotf(static_cast< const inlib::rotf& >(result))), SWIGTYPE_p_inlib__rotf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_rotf_set_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::rotf *arg1 = (inlib::rotf *) 0 ; inlib::vec3f *arg2 = 0 ; inlib::vec3f *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "rotf_set_value", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__rotf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rotf_set_value" "', argument " "1"" of type '" "inlib::rotf *""'");  }
   arg1 = reinterpret_cast< inlib::rotf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rotf_set_value" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rotf_set_value" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "rotf_set_value" "', argument " "3"" of type '" "inlib::vec3f const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rotf_set_value" "', argument " "3"" of type '" "inlib::vec3f const &""'"); }
   arg3 = reinterpret_cast< inlib::vec3f * >(argp3);
  result = (bool)(arg1)->set_value((inlib::vec3f const &)*arg2,(inlib::vec3f const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *rotf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__rotf, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *rotf_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_vec4f__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::vec4f *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::vec4f *)new inlib::vec4f();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4f__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec4f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec4f" "', argument " "1"" of type '" "float const [4]""'");  }
    arg1 = reinterpret_cast< float * >(argp1); result = (inlib::vec4f *)new inlib::vec4f((float const (*))arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4f__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 = 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ; float temp1 ; float val1 ;
  int ecode1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; float temp3 ; float val3 ; int ecode3 = 0 ; float temp4 ;
  float val4 ; int ecode4 = 0 ; inlib::vec4f *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vec4f" "', argument " "1"" of type '" "float""'"); }  
  temp1 = static_cast< float >(val1); arg1 = &temp1; ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vec4f" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_vec4f" "', argument " "3"" of type '" "float""'"); }  
  temp3 = static_cast< float >(val3); arg3 = &temp3; ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_vec4f" "', argument " "4"" of type '" "float""'"); }  
  temp4 = static_cast< float >(val4); arg4 = &temp4;
  result = (inlib::vec4f *)new inlib::vec4f((float const &)*arg1,(float const &)*arg2,(float const &)*arg3,(float const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_vec4f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vec4f" "', argument " "1"" of type '" "inlib::vec4f *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4f__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::vec4f *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::vec4f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__vec4f,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vec4f" "', argument " "1"" of type '" "inlib::vec4f const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vec4f" "', argument " "1"" of type '" "inlib::vec4f const &""'"); }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1); result = (inlib::vec4f *)new inlib::vec4f((inlib::vec4f const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_vec4f(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vec4f", 0, 4, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_vec4f__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_vec4f__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_vec4f__SWIG_3(self, argc, argv);}  }  if (argc == 4) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_vec4f__SWIG_2(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vec4f'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::vec4f::vec4f()\n" "    inlib::vec4f::vec4f(float const [4])\n"
  "    inlib::vec4f::vec4f(float const &,float const &,float const &,float const &)\n"
  "    inlib::vec4f::vec4f(inlib::vec4f const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_vec4f___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; inlib::vec4f result; if (!SWIG_Python_UnpackTuple(args, "vec4f___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4f___mul__" "', argument " "1"" of type '" "inlib::vec4f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4f___mul__" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = ((inlib::vec4f const *)arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec4f(static_cast< const inlib::vec4f& >(result))), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4f___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; inlib::vec4f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec4f result;
  if (!SWIG_Python_UnpackTuple(args, "vec4f___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4f___add__" "', argument " "1"" of type '" "inlib::vec4f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4f___add__" "', argument " "2"" of type '" "inlib::vec4f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4f___add__" "', argument " "2"" of type '" "inlib::vec4f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4f * >(argp2);
  result = ((inlib::vec4f const *)arg1)->operator +((inlib::vec4f const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec4f(static_cast< const inlib::vec4f& >(result))), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4f___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; inlib::vec4f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec4f result;
  if (!SWIG_Python_UnpackTuple(args, "vec4f___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4f___sub__" "', argument " "1"" of type '" "inlib::vec4f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4f___sub__" "', argument " "2"" of type '" "inlib::vec4f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4f___sub__" "', argument " "2"" of type '" "inlib::vec4f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4f * >(argp2);
  result = ((inlib::vec4f const *)arg1)->operator -((inlib::vec4f const &)*arg2);
  resultobj = SWIG_NewPointerObj((new inlib::vec4f(static_cast< const inlib::vec4f& >(result))), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_vec4f___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; inlib::vec4f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; inlib::vec4f *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "vec4f___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4f___iadd__" "', argument " "1"" of type '" "inlib::vec4f *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec4f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vec4f___iadd__" "', argument " "2"" of type '" "inlib::vec4f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vec4f___iadd__" "', argument " "2"" of type '" "inlib::vec4f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec4f * >(argp2);
  result = (inlib::vec4f *) &(arg1)->operator +=((inlib::vec4f const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_OWN |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4f___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; inlib::vec4f *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "vec4f___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4f___imul__" "', argument " "1"" of type '" "inlib::vec4f *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vec4f___imul__" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = (inlib::vec4f *) &(arg1)->operator *=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_OWN |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_vec4f___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::vec4f *arg1 = (inlib::vec4f *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; inlib::vec4f result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__vec4f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vec4f___neg__" "', argument " "1"" of type '" "inlib::vec4f const *""'");  }
   arg1 = reinterpret_cast< inlib::vec4f * >(argp1); result = ((inlib::vec4f const *)arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new inlib::vec4f(static_cast< const inlib::vec4f& >(result))), SWIGTYPE_p_inlib__vec4f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *vec4f_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__vec4f, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vec4f_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_colorf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::colorf *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::colorf *)new inlib::colorf();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_colorf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; float arg3 ; float arg4 ; float val1 ; int ecode1 = 0 ; float val2 ;
  int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; inlib::colorf *result = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_colorf" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_colorf" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_colorf" "', argument " "3"" of type '" "float""'"); }  
  arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_colorf" "', argument " "4"" of type '" "float""'"); }  
  arg4 = static_cast< float >(val4); result = (inlib::colorf *)new inlib::colorf(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_colorf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; float arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; inlib::colorf *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_colorf" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_colorf" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_colorf" "', argument " "3"" of type '" "float""'"); }  
  arg3 = static_cast< float >(val3); result = (inlib::colorf *)new inlib::colorf(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_colorf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_colorf" "', argument " "1"" of type '" "inlib::colorf *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_colorf__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::colorf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::colorf *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__colorf,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_colorf" "', argument " "1"" of type '" "inlib::colorf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_colorf" "', argument " "1"" of type '" "inlib::colorf const &""'"); }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = (inlib::colorf *)new inlib::colorf((inlib::colorf const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_colorf(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_colorf", 0, 4, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_colorf__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_colorf__SWIG_3(self, argc, argv);}  }  if (argc == 3) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_colorf__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 4) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_colorf__SWIG_1(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_colorf'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::colorf::colorf()\n" "    inlib::colorf::colorf(float,float,float,float)\n"
  "    inlib::colorf::colorf(float,float,float)\n" "    inlib::colorf::colorf(inlib::colorf const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_colorf_r(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_r" "', argument " "1"" of type '" "inlib::colorf const *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = (float)((inlib::colorf const *)arg1)->r();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_g(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_g" "', argument " "1"" of type '" "inlib::colorf const *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = (float)((inlib::colorf const *)arg1)->g();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_b(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_b" "', argument " "1"" of type '" "inlib::colorf const *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = (float)((inlib::colorf const *)arg1)->b();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_a(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_a" "', argument " "1"" of type '" "inlib::colorf const *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = (float)((inlib::colorf const *)arg1)->a();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_set_r(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "colorf_set_r", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_set_r" "', argument " "1"" of type '" "inlib::colorf *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "colorf_set_r" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); (arg1)->set_r(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_set_g(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "colorf_set_g", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_set_g" "', argument " "1"" of type '" "inlib::colorf *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "colorf_set_g" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); (arg1)->set_g(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_set_b(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "colorf_set_b", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_set_b" "', argument " "1"" of type '" "inlib::colorf *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "colorf_set_b" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); (arg1)->set_b(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_set_a(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "colorf_set_a", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_set_a" "', argument " "1"" of type '" "inlib::colorf *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "colorf_set_a" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); (arg1)->set_a(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_tos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::string result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__colorf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_tos" "', argument " "1"" of type '" "inlib::colorf const *""'");  }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = ((inlib::colorf const *)arg1)->tos();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_aquamarine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_aquamarine", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::aquamarine();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumaquamarine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumaquamarine", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumaquamarine();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_black(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_black", 0, 0, 0)) SWIG_fail; result = inlib::colorf::black();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_blue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_blue", 0, 0, 0)) SWIG_fail; result = inlib::colorf::blue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_cadetblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_cadetblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::cadetblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_cornflowerblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_cornflowerblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::cornflowerblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_darkslateblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_darkslateblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::darkslateblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_lightblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_lightblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::lightblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_lightsteelblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_lightsteelblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::lightsteelblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumslateblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumslateblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumslateblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_midnightblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_midnightblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::midnightblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_navyblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_navyblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::navyblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_navy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_navy", 0, 0, 0)) SWIG_fail; result = inlib::colorf::navy();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_skyblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_skyblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::skyblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_slateblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_slateblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::slateblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_steelblue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_steelblue", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::steelblue();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_coral(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_coral", 0, 0, 0)) SWIG_fail; result = inlib::colorf::coral();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_cyan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_cyan", 0, 0, 0)) SWIG_fail; result = inlib::colorf::cyan();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_firebrick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_firebrick", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::firebrick();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_brown(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_brown", 0, 0, 0)) SWIG_fail; result = inlib::colorf::brown();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_gold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_gold", 0, 0, 0)) SWIG_fail; result = inlib::colorf::gold();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_goldenrod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_goldenrod", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::goldenrod();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_green(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_green", 0, 0, 0)) SWIG_fail; result = inlib::colorf::green();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_darkgreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_darkgreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::darkgreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_darkolivegreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_darkolivegreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::darkolivegreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_forestgreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_forestgreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::forestgreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_limegreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_limegreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::limegreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumseagreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumseagreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumseagreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumspringgreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumspringgreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumspringgreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_palegreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_palegreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::palegreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_seagreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_seagreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::seagreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_springgreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_springgreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::springgreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_yellowgreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_yellowgreen", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::yellowgreen();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_darkslategrey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_darkslategrey", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::darkslategrey();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_dimgrey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_dimgrey", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::dimgrey();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_lightgrey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_lightgrey", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::lightgrey();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_grey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_grey", 0, 0, 0)) SWIG_fail; result = inlib::colorf::grey();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_khaki(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_khaki", 0, 0, 0)) SWIG_fail; result = inlib::colorf::khaki();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_magenta(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_magenta", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::magenta();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_maroon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_maroon", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::maroon();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_orange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_orange", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::orange();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_orchid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_orchid", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::orchid();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_darkorchid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_darkorchid", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::darkorchid();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumorchid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumorchid", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumorchid();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_pink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_pink", 0, 0, 0)) SWIG_fail; result = inlib::colorf::pink();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_plum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_plum", 0, 0, 0)) SWIG_fail; result = inlib::colorf::plum();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_red(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_red", 0, 0, 0)) SWIG_fail; result = inlib::colorf::red();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_indianred(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_indianred", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::indianred();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumvioletred(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumvioletred", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumvioletred();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_orangered(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_orangered", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::orangered();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_violetred(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_violetred", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::violetred();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_salmon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_salmon", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::salmon();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_sienna(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_sienna", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::sienna();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_tan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_tan", 0, 0, 0)) SWIG_fail; result = inlib::colorf::tan();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_thistle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_thistle", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::thistle();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_turquoise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_turquoise", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::turquoise();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_darkturquoise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_darkturquoise", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::darkturquoise();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_mediumturquoise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_mediumturquoise", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::mediumturquoise();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_violet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_violet", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::violet();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_blueviolet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_blueviolet", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::blueviolet();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_wheat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_wheat", 0, 0, 0)) SWIG_fail; result = inlib::colorf::wheat();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_white(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_white", 0, 0, 0)) SWIG_fail; result = inlib::colorf::white();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_yellow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_yellow", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::yellow();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_greenyellow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf result; if (!SWIG_Python_UnpackTuple(args, "colorf_greenyellow", 0, 0, 0)) SWIG_fail;
  result = inlib::colorf::greenyellow();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_colorf_to(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; std::string result; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "colorf_to" "', argument " "1"" of type '" "inlib::colorf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "colorf_to" "', argument " "1"" of type '" "inlib::colorf const &""'"); }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); result = inlib::colorf::to((inlib::colorf const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *colorf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__colorf, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *colorf_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_cmp_colorf___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::cmp_colorf *arg1 = (inlib::cmp_colorf *) 0 ; inlib::colorf *arg2 = 0 ; inlib::colorf *arg3 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "cmp_colorf___call__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__cmp_colorf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cmp_colorf___call__" "', argument " "1"" of type '" "inlib::cmp_colorf const *""'");  }
   arg1 = reinterpret_cast< inlib::cmp_colorf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cmp_colorf___call__" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cmp_colorf___call__" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "cmp_colorf___call__" "', argument " "3"" of type '" "inlib::colorf const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cmp_colorf___call__" "', argument " "3"" of type '" "inlib::colorf const &""'"); }
   arg3 = reinterpret_cast< inlib::colorf * >(argp3);
  result = (bool)((inlib::cmp_colorf const *)arg1)->operator ()((inlib::colorf const &)*arg2,(inlib::colorf const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_cmp_colorf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::cmp_colorf *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "new_cmp_colorf", 0, 0, 0)) SWIG_fail;
  result = (inlib::cmp_colorf *)new inlib::cmp_colorf();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__cmp_colorf, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_cmp_colorf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::cmp_colorf *arg1 = (inlib::cmp_colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__cmp_colorf, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_cmp_colorf" "', argument " "1"" of type '" "inlib::cmp_colorf *""'");  }
   arg1 = reinterpret_cast< inlib::cmp_colorf * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *cmp_colorf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__cmp_colorf, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *cmp_colorf_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_rcmp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; char *arg2 = (char *) 0 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ;
  int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rcmp" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rcmp" "', argument " "2"" of type '" "char const *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); result = (bool)inlib::rcmp((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_rcmp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; char *arg2 = (char *) 0 ; int res1 = SWIG_OLDOBJ ; int res2 ;
  char *buf2 = 0 ; int alloc2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rcmp" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rcmp" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rcmp" "', argument " "2"" of type '" "char const *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); result = (bool)inlib::rcmp((std::string const &)*arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_rcmp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; char *arg1 = (char *) 0 ; std::string *arg2 = 0 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ;
  int res2 = SWIG_OLDOBJ ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rcmp" "', argument " "1"" of type '" "char const *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rcmp" "', argument " "2"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rcmp" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::rcmp((char const *)arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_rcmp__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; std::string *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; int res2 = SWIG_OLDOBJ ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "rcmp" "', argument " "1"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rcmp" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  { std::string *ptr = (std::string *)0; res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "rcmp" "', argument " "2"" of type '" "std::string const &""'"); } 
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "rcmp" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)inlib::rcmp((std::string const &)*arg1,(std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_rcmp(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "rcmp", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_rcmp__SWIG_3(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_rcmp__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_rcmp__SWIG_2(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_rcmp__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'rcmp'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::rcmp(char const *,char const *)\n"
  "    inlib::rcmp(std::string const &,char const *)\n" "    inlib::rcmp(char const *,std::string const &)\n"
  "    inlib::rcmp(std::string const &,std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_field_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::field *arg1 = (inlib::sg::field *) 0 ; inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "field_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__field, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "field_write" "', argument " "1"" of type '" "inlib::sg::field *""'");  }
   arg1 = reinterpret_cast< inlib::sg::field * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "field_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "field_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_field_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::field *arg1 = (inlib::sg::field *) 0 ; inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "field_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__field, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "field_read" "', argument " "1"" of type '" "inlib::sg::field *""'");  }
   arg1 = reinterpret_cast< inlib::sg::field * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "field_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "field_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_field_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::field *arg1 = (inlib::sg::field *) 0 ; std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "field_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__field, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "field_dump" "', argument " "1"" of type '" "inlib::sg::field *""'");  }
   arg1 = reinterpret_cast< inlib::sg::field * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "field_dump" "', argument " "2"" of type '" "std::ostream &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "field_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_field_touch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::field *arg1 = (inlib::sg::field *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__field, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "field_touch" "', argument " "1"" of type '" "inlib::sg::field *""'");  }
   arg1 = reinterpret_cast< inlib::sg::field * >(argp1); (arg1)->touch(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_field_touched(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::field *arg1 = (inlib::sg::field *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__field, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "field_touched" "', argument " "1"" of type '" "inlib::sg::field const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::field * >(argp1); result = (bool)((inlib::sg::field const *)arg1)->touched();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_field_reset_touched(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::field *arg1 = (inlib::sg::field *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__field, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "field_reset_touched" "', argument " "1"" of type '" "inlib::sg::field *""'");  }
   arg1 = reinterpret_cast< inlib::sg::field * >(argp1); (arg1)->reset_touched(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *field_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__field, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_bsf_bool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bsf_bool" "', argument " "1"" of type '" "inlib::sg::bsf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_bool___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; inlib::sg::bsf< bool > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< bool > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_bool_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_bool___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< bool > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_bool___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< bool > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp2);
  result = (bool)((inlib::sg::bsf< bool > const *)arg1)->operator ==((inlib::sg::bsf< bool > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_bool___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; inlib::sg::bsf< bool > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< bool > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_bool_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_bool___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< bool > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_bool___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< bool > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp2);
  result = (bool)((inlib::sg::bsf< bool > const *)arg1)->operator !=((inlib::sg::bsf< bool > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_bool___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; bool temp2 ; bool val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< bool > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_bool___eq__" "', argument " "2"" of type '" "bool""'"); }  
  temp2 = static_cast< bool >(val2); arg2 = &temp2;
  result = (bool)((inlib::sg::bsf< bool > const *)arg1)->operator ==((bool const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_bool___eq__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_bool___eq__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_bool_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_bool___eq____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_bool___eq____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_bool___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; bool temp2 ; bool val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< bool > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_bool___ne__" "', argument " "2"" of type '" "bool""'"); }  
  temp2 = static_cast< bool >(val2); arg2 = &temp2;
  result = (bool)((inlib::sg::bsf< bool > const *)arg1)->operator !=((bool const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_bool___ne__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_bool___ne__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_bool_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_bool___ne____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_bool___ne____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_bool___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool___nonzero__" "', argument " "1"" of type '" "inlib::sg::bsf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); result = (bool)(arg1)->operator bool();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_bool_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool_value" "', argument " "1"" of type '" "inlib::sg::bsf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); result = (bool *) &(arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bool, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_bool_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool_value" "', argument " "1"" of type '" "inlib::sg::bsf< bool > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1);
  result = (bool *) &((inlib::sg::bsf< bool > const *)arg1)->value(); resultobj = SWIG_From_bool(static_cast< bool >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_bool_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; bool temp2 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool_value" "', argument " "1"" of type '" "inlib::sg::bsf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_bool_value" "', argument " "2"" of type '" "bool""'"); }  
  temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->value((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_bool_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_bool_value", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_bsf_bool_value__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_bsf_bool_value__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_bool_value__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bsf_bool_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bsf< bool >::value()\n" "    inlib::sg::bsf< bool >::value() const\n"
  "    inlib::sg::bsf< bool >::value(bool const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_bsf_bool_value_no_cmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< bool > *arg1 = (inlib::sg::bsf< bool > *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; bool temp2 ;
  bool val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "bsf_bool_value_no_cmp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_bool_value_no_cmp" "', argument " "1"" of type '" "inlib::sg::bsf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< bool > * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_bool_value_no_cmp" "', argument " "2"" of type '" "bool""'"); }
    temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->value_no_cmp((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *bsf_bool_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bsfT_bool_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_bsf_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bsf_float" "', argument " "1"" of type '" "inlib::sg::bsf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_float___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; inlib::sg::bsf< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_float___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_float___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< float > * >(argp2);
  result = (bool)((inlib::sg::bsf< float > const *)arg1)->operator ==((inlib::sg::bsf< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_float___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; inlib::sg::bsf< float > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_float_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_float___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< float > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_float___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< float > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< float > * >(argp2);
  result = (bool)((inlib::sg::bsf< float > const *)arg1)->operator !=((inlib::sg::bsf< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_float___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_float___eq__" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = (bool)((inlib::sg::bsf< float > const *)arg1)->operator ==((float const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_float___eq__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_float___eq__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_float___eq____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_float___eq____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_float___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_float___ne__" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2;
  result = (bool)((inlib::sg::bsf< float > const *)arg1)->operator !=((float const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_float___ne__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_float___ne__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_float_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_float___ne____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_float___ne____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_float_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float_value" "', argument " "1"" of type '" "inlib::sg::bsf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1); result = (float *) &(arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_float_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float_value" "', argument " "1"" of type '" "inlib::sg::bsf< float > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1);
  result = (float *) &((inlib::sg::bsf< float > const *)arg1)->value();
  resultobj = SWIG_From_float(static_cast< float >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_float_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; float temp2 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float_value" "', argument " "1"" of type '" "inlib::sg::bsf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_float_value" "', argument " "2"" of type '" "float""'"); }  
  temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->value((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_float_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_float_value", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_bsf_float_value__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_bsf_float_value__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_float_t, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_float_value__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bsf_float_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bsf< float >::value()\n" "    inlib::sg::bsf< float >::value() const\n"
  "    inlib::sg::bsf< float >::value(float const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_bsf_float_value_no_cmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< float > *arg1 = (inlib::sg::bsf< float > *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float temp2 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "bsf_float_value_no_cmp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_float_value_no_cmp" "', argument " "1"" of type '" "inlib::sg::bsf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< float > * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_float_value_no_cmp" "', argument " "2"" of type '" "float""'"); }
    temp2 = static_cast< float >(val2); arg2 = &temp2; (arg1)->value_no_cmp((float const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *bsf_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bsfT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_bsf_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bsf_string" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_string___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ;
  inlib::sg::bsf< std::string > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_std__string_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_string___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< std::string > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_string___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< std::string > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp2);
  result = (bool)((inlib::sg::bsf< std::string > const *)arg1)->operator ==((inlib::sg::bsf< std::string > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_string___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ;
  inlib::sg::bsf< std::string > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_std__string_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_string___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< std::string > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_string___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< std::string > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp2);
  result = (bool)((inlib::sg::bsf< std::string > const *)arg1)->operator !=((inlib::sg::bsf< std::string > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_string___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_string___eq__" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_string___eq__" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)((inlib::sg::bsf< std::string > const *)arg1)->operator ==((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_string___eq__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_string___eq__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string___eq____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string___eq____SWIG_1(self, argc, argv);}  }  }  fail:
  Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_string___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_string___ne__" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_string___ne__" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)((inlib::sg::bsf< std::string > const *)arg1)->operator !=((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_string___ne__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_string___ne__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string___ne____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string___ne____SWIG_1(self, argc, argv);}  }  }  fail:
  Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_string_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string_value" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1); result = (std::string *) &(arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_string_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string_value" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1);
  result = (std::string *) &((inlib::sg::bsf< std::string > const *)arg1)->value();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_string_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string_value" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_string_value" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_string_value" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->value((std::string const &)*arg2); resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_bsf_string_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_string_value", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string_value__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string_value__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_string_value__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bsf_string_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bsf< std::string >::value()\n"
  "    inlib::sg::bsf< std::string >::value() const\n" "    inlib::sg::bsf< std::string >::value(std::string const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_bsf_string_value_no_cmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< std::string > *arg1 = (inlib::sg::bsf< std::string > *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "bsf_string_value_no_cmp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_string_value_no_cmp" "', argument " "1"" of type '" "inlib::sg::bsf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< std::string > * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_string_value_no_cmp" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_string_value_no_cmp" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->value_no_cmp((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *bsf_string_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bsfT_std__string_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_bsf_rotf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bsf_rotf" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_rotf___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ;
  inlib::sg::bsf< inlib::rotf > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_rotf___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::rotf > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_rotf___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::rotf > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::rotf > const *)arg1)->operator ==((inlib::sg::bsf< inlib::rotf > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_rotf___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ;
  inlib::sg::bsf< inlib::rotf > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_rotf___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::rotf > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_rotf___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::rotf > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::rotf > const *)arg1)->operator !=((inlib::sg::bsf< inlib::rotf > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_rotf___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; inlib::rotf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__rotf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_rotf___eq__" "', argument " "2"" of type '" "inlib::rotf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_rotf___eq__" "', argument " "2"" of type '" "inlib::rotf const &""'"); }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::rotf > const *)arg1)->operator ==((inlib::rotf const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_rotf___eq__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_rotf___eq__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_rotf___eq____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_bsf_rotf___eq____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_rotf___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; inlib::rotf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__rotf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_rotf___ne__" "', argument " "2"" of type '" "inlib::rotf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_rotf___ne__" "', argument " "2"" of type '" "inlib::rotf const &""'"); }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::rotf > const *)arg1)->operator !=((inlib::rotf const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_rotf___ne__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_rotf___ne__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_rotf___ne____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_bsf_rotf___ne____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_rotf_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; inlib::rotf *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1); result = (inlib::rotf *) &(arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_rotf_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; inlib::rotf *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  result = (inlib::rotf *) &((inlib::sg::bsf< inlib::rotf > const *)arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_rotf_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; inlib::rotf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__rotf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_rotf_value" "', argument " "2"" of type '" "inlib::rotf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_rotf_value" "', argument " "2"" of type '" "inlib::rotf const &""'"); }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2); (arg1)->value((inlib::rotf const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_rotf_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_rotf_value", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_rotf_value__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_rotf_value__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_bsf_rotf_value__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bsf_rotf_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bsf< inlib::rotf >::value()\n"
  "    inlib::sg::bsf< inlib::rotf >::value() const\n" "    inlib::sg::bsf< inlib::rotf >::value(inlib::rotf const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_bsf_rotf_value_no_cmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< inlib::rotf > *arg1 = (inlib::sg::bsf< inlib::rotf > *) 0 ; inlib::rotf *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "bsf_rotf_value_no_cmp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_rotf_value_no_cmp" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::rotf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::rotf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__rotf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_rotf_value_no_cmp" "', argument " "2"" of type '" "inlib::rotf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_rotf_value_no_cmp" "', argument " "2"" of type '" "inlib::rotf const &""'"); }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2); (arg1)->value_no_cmp((inlib::rotf const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *bsf_rotf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bsfT_inlib__rotf_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_bsf_colorf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bsf_colorf" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_colorf___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ;
  inlib::sg::bsf< inlib::colorf > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_colorf___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::colorf > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_colorf___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::colorf > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::colorf > const *)arg1)->operator ==((inlib::sg::bsf< inlib::colorf > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_colorf___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ;
  inlib::sg::bsf< inlib::colorf > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_colorf___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::colorf > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_colorf___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::colorf > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::colorf > const *)arg1)->operator !=((inlib::sg::bsf< inlib::colorf > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_colorf___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ;
  inlib::colorf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_colorf___eq__" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_colorf___eq__" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::colorf > const *)arg1)->operator ==((inlib::colorf const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_colorf___eq__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_colorf___eq__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_colorf___eq____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_bsf_colorf___eq____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_colorf___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ;
  inlib::colorf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_colorf___ne__" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_colorf___ne__" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::colorf > const *)arg1)->operator !=((inlib::colorf const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_colorf___ne__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_colorf___ne__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_colorf___ne____SWIG_0(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_bsf_colorf___ne____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_colorf_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; inlib::colorf *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1); result = (inlib::colorf *) &(arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_colorf_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; inlib::colorf *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  result = (inlib::colorf *) &((inlib::sg::bsf< inlib::colorf > const *)arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_colorf_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ;
  inlib::colorf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_colorf_value" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_colorf_value" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2); (arg1)->value((inlib::colorf const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_colorf_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_colorf_value", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_colorf_value__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_colorf_value__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_bsf_colorf_value__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bsf_colorf_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bsf< inlib::colorf >::value()\n"
  "    inlib::sg::bsf< inlib::colorf >::value() const\n" "    inlib::sg::bsf< inlib::colorf >::value(inlib::colorf const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_bsf_colorf_value_no_cmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< inlib::colorf > *arg1 = (inlib::sg::bsf< inlib::colorf > *) 0 ; inlib::colorf *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "bsf_colorf_value_no_cmp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_colorf_value_no_cmp" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::colorf > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::colorf > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_colorf_value_no_cmp" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_colorf_value_no_cmp" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2); (arg1)->value_no_cmp((inlib::colorf const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *bsf_colorf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bsfT_inlib__colorf_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_bsf_winding_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bsf_winding_type" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_winding_type___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  inlib::sg::bsf< inlib::sg::winding_type > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_winding_type___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_winding_type___eq__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::sg::winding_type > const *)arg1)->operator ==((inlib::sg::bsf< inlib::sg::winding_type > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_winding_type___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  inlib::sg::bsf< inlib::sg::winding_type > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bsf_winding_type___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bsf_winding_type___ne__" "', argument " "2"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp2);
  result = (bool)((inlib::sg::bsf< inlib::sg::winding_type > const *)arg1)->operator !=((inlib::sg::bsf< inlib::sg::winding_type > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_winding_type___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  inlib::sg::winding_type *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 ; inlib::sg::winding_type temp2 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type___eq__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1); ecode2 = SWIG_AsVal_int (swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_winding_type___eq__" "', argument " "2"" of type '" "inlib::sg::winding_type const &""'"); }
   else { temp2 = static_cast< inlib::sg::winding_type >(val2); arg2 = &temp2; } 
  result = (bool)((inlib::sg::bsf< inlib::sg::winding_type > const *)arg1)->operator ==((inlib::sg::winding_type const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_winding_type___eq__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_winding_type___eq__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_winding_type___eq____SWIG_0(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_winding_type___eq____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_winding_type___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  inlib::sg::winding_type *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 ; inlib::sg::winding_type temp2 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type___ne__" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1); ecode2 = SWIG_AsVal_int (swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_winding_type___ne__" "', argument " "2"" of type '" "inlib::sg::winding_type const &""'"); }
   else { temp2 = static_cast< inlib::sg::winding_type >(val2); arg2 = &temp2; } 
  result = (bool)((inlib::sg::bsf< inlib::sg::winding_type > const *)arg1)->operator !=((inlib::sg::winding_type const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_winding_type___ne__(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_winding_type___ne__", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_winding_type___ne____SWIG_0(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_winding_type___ne____SWIG_1(self, argc, argv);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bsf_winding_type_value__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::sg::winding_type *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1);
  result = (inlib::sg::winding_type *) &(arg1)->value();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__winding_type, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_bsf_winding_type_value__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; inlib::sg::winding_type *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1);
  result = (inlib::sg::winding_type *) &((inlib::sg::bsf< inlib::sg::winding_type > const *)arg1)->value();
  resultobj = SWIG_From_int(static_cast< int >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_winding_type_value__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  inlib::sg::winding_type *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 ; inlib::sg::winding_type temp2 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type_value" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1); ecode2 = SWIG_AsVal_int (swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_winding_type_value" "', argument " "2"" of type '" "inlib::sg::winding_type const &""'"); }
   else { temp2 = static_cast< inlib::sg::winding_type >(val2); arg2 = &temp2; } 
  (arg1)->value((inlib::sg::winding_type const &)*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bsf_winding_type_value(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bsf_winding_type_value", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_winding_type_value__SWIG_0(self, argc, argv);}  }  if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bsf_winding_type_value__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_bsf_winding_type_value__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bsf_winding_type_value'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bsf< inlib::sg::winding_type >::value()\n"
  "    inlib::sg::bsf< inlib::sg::winding_type >::value() const\n"
  "    inlib::sg::bsf< inlib::sg::winding_type >::value(inlib::sg::winding_type const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_bsf_winding_type_value_no_cmp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::bsf< inlib::sg::winding_type > *arg1 = (inlib::sg::bsf< inlib::sg::winding_type > *) 0 ;
  inlib::sg::winding_type *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 ; inlib::sg::winding_type temp2 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "bsf_winding_type_value_no_cmp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bsf_winding_type_value_no_cmp" "', argument " "1"" of type '" "inlib::sg::bsf< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bsf< inlib::sg::winding_type > * >(argp1); ecode2 = SWIG_AsVal_int (swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bsf_winding_type_value_no_cmp" "', argument " "2"" of type '" "inlib::sg::winding_type const &""'"); }
   else { temp2 = static_cast< inlib::sg::winding_type >(val2); arg2 = &temp2; } 
  (arg1)->value_no_cmp((inlib::sg::winding_type const &)*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *bsf_winding_type_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bsfT_inlib__sg__winding_type_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_iwbuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iwbuf" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uchar arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned char val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::uchar""'"); }
    arg2 = static_cast< inlib::uchar >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; char arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  char val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_char(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "char""'"); }  
  arg2 = static_cast< char >(val2); result = (bool)(arg1)->write(arg2); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint16 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned short val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::uint16""'"); }
    arg2 = static_cast< inlib::uint16 >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::int16 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; short val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::int16""'"); }
    arg2 = static_cast< inlib::int16 >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::int32 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::int32""'"); }
    arg2 = static_cast< inlib::int32 >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint64 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned long long val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::uint64""'"); }
    arg2 = static_cast< inlib::uint64 >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::int64 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; long long val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "inlib::int64""'"); }
    arg2 = static_cast< inlib::int64 >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  float val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; double arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  double val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "double""'"); }  
  arg2 = static_cast< double >(val2); result = (bool)(arg1)->write(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  bool val2 ; int ecode2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write" "', argument " "2"" of type '" "bool""'"); }  
  arg2 = static_cast< bool >(val2); result = (bool)(arg1)->write(arg2); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "iwbuf_write", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_10(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_0(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_2(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_short(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_3(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_4(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_5(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_6(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_7(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_8(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_9(self, argc, argv);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_iwbuf_write__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'iwbuf_write'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::io::iwbuf::write(inlib::uchar)\n" "    inlib::io::iwbuf::write(char)\n"
  "    inlib::io::iwbuf::write(inlib::uint16)\n" "    inlib::io::iwbuf::write(inlib::int16)\n"
  "    inlib::io::iwbuf::write(inlib::uint32)\n" "    inlib::io::iwbuf::write(inlib::int32)\n"
  "    inlib::io::iwbuf::write(inlib::uint64)\n" "    inlib::io::iwbuf::write(inlib::int64)\n"
  "    inlib::io::iwbuf::write(float)\n" "    inlib::io::iwbuf::write(double)\n" "    inlib::io::iwbuf::write(bool)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::uchar *arg3 = (inlib::uchar *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::uchar const *""'");  }
   arg3 = reinterpret_cast< inlib::uchar * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::uchar const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ; char *arg3 = (char *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; int res3 ; char *buf3 = 0 ; int alloc3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "char const *""'"); }
   arg3 = reinterpret_cast< char * >(buf3); result = (bool)(arg1)->write_vec(arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return resultobj; fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::uint16 *arg3 = (inlib::uint16 *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::uint16 const *""'");  }
   arg3 = reinterpret_cast< inlib::uint16 * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::uint16 const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::int16 *arg3 = (inlib::int16 *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::int16 const *""'");  }
   arg3 = reinterpret_cast< inlib::int16 * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::int16 const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::uint32 *arg3 = (inlib::uint32 *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::uint32 const *""'");  }
   arg3 = reinterpret_cast< inlib::uint32 * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::uint32 const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::int32 *arg3 = (inlib::int32 *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::int32 const *""'");  }
   arg3 = reinterpret_cast< inlib::int32 * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::int32 const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::uint64 *arg3 = (inlib::uint64 *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::uint64 const *""'");  }
   arg3 = reinterpret_cast< inlib::uint64 * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::uint64 const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ;
  inlib::int64 *arg3 = (inlib::int64 *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "inlib::int64 const *""'");  }
   arg3 = reinterpret_cast< inlib::int64 * >(argp3); result = (bool)(arg1)->write_vec(arg2,(inlib::int64 const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ; float *arg3 = (float *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->write_vec(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ; double *arg3 = (double *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "double const *""'");  }
   arg3 = reinterpret_cast< double * >(argp3); result = (bool)(arg1)->write_vec(arg2,(double const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ; bool *arg3 = (bool *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iwbuf_write_vec" "', argument " "3"" of type '" "bool const *""'");  }
   arg3 = reinterpret_cast< bool * >(argp3); result = (bool)(arg1)->write_vec(arg2,(bool const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iwbuf_write_vec" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (bool)(arg1)->write_vec((std::vector< std::string,std::allocator< std::string > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_vec(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "iwbuf_write_vec", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_iwbuf_write_vec__SWIG_11(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_short, 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_iwbuf_write_vec__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_short, 0); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_iwbuf_write_vec__SWIG_3(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_4(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_5(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_long_long, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_6(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_long_long, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_7(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_8(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_9(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_bool, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_10(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_0(self, argc, argv);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_iwbuf_write_vec__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'iwbuf_write_vec'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::uchar const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,char const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::uint16 const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::int16 const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::uint32 const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::int32 const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::uint64 const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,inlib::int64 const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,float const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,double const *)\n"
  "    inlib::io::iwbuf::write_vec(inlib::uint32,bool const *)\n"
  "    inlib::io::iwbuf::write_vec(std::vector< std::string,std::allocator< std::string > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_iwbuf_write_cstr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; char *arg2 = (char *) 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 ;
  char *buf2 = 0 ; int alloc2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "iwbuf_write_cstr", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_cstr" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iwbuf_write_cstr" "', argument " "2"" of type '" "char const *""'"); }
   arg2 = reinterpret_cast< char * >(buf2); result = (bool)(arg1)->write_cstr((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_img(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::uint32 arg2 ; inlib::uint32 arg3 ; inlib::uint32 arg4 ;
  inlib::uchar *arg5 = (inlib::uchar *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ;
  PyObject *swig_obj[5] ; bool result; if (!SWIG_Python_UnpackTuple(args, "iwbuf_write_img", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_img" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iwbuf_write_img" "', argument " "2"" of type '" "inlib::uint32""'"); }
    arg2 = static_cast< inlib::uint32 >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iwbuf_write_img" "', argument " "3"" of type '" "inlib::uint32""'"); }
    arg3 = static_cast< inlib::uint32 >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iwbuf_write_img" "', argument " "4"" of type '" "inlib::uint32""'"); }
    arg4 = static_cast< inlib::uint32 >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iwbuf_write_img" "', argument " "5"" of type '" "inlib::uchar const *""'");  }
   arg5 = reinterpret_cast< inlib::uchar * >(argp5);
  result = (bool)(arg1)->write_img(arg2,arg3,arg4,(inlib::uchar const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_std_vec_vec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::io::iwbuf::std_vec_vec_uint_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_std_vec_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iwbuf_write_std_vec_vec" "', argument " "2"" of type '" "inlib::io::iwbuf::std_vec_vec_uint_t const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iwbuf_write_std_vec_vec" "', argument " "2"" of type '" "inlib::io::iwbuf::std_vec_vec_uint_t const &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf::std_vec_vec_uint_t * >(argp2);
  result = (bool)(arg1)->write_std_vec_vec((inlib::io::iwbuf::std_vec_vec_uint_t const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_std_vec_vec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::io::iwbuf::std_vec_vec_float_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_std_vec_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iwbuf_write_std_vec_vec" "', argument " "2"" of type '" "inlib::io::iwbuf::std_vec_vec_float_t const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iwbuf_write_std_vec_vec" "', argument " "2"" of type '" "inlib::io::iwbuf::std_vec_vec_float_t const &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf::std_vec_vec_float_t * >(argp2);
  result = (bool)(arg1)->write_std_vec_vec((inlib::io::iwbuf::std_vec_vec_float_t const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_std_vec_vec__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; inlib::io::iwbuf::std_vec_vec_string_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_write_std_vec_vec" "', argument " "1"" of type '" "inlib::io::iwbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iwbuf_write_std_vec_vec" "', argument " "2"" of type '" "inlib::io::iwbuf::std_vec_vec_string_t const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iwbuf_write_std_vec_vec" "', argument " "2"" of type '" "inlib::io::iwbuf::std_vec_vec_string_t const &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf::std_vec_vec_string_t * >(argp2);
  result = (bool)(arg1)->write_std_vec_vec((inlib::io::iwbuf::std_vec_vec_string_t const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_write_std_vec_vec(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "iwbuf_write_std_vec_vec", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_iwbuf_write_std_vec_vec__SWIG_0(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_iwbuf_write_std_vec_vec__SWIG_1(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__iwbuf, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_iwbuf_write_std_vec_vec__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'iwbuf_write_std_vec_vec'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::io::iwbuf::write_std_vec_vec(inlib::io::iwbuf::std_vec_vec_uint_t const &)\n"
  "    inlib::io::iwbuf::write_std_vec_vec(inlib::io::iwbuf::std_vec_vec_float_t const &)\n"
  "    inlib::io::iwbuf::write_std_vec_vec(inlib::io::iwbuf::std_vec_vec_string_t const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_iwbuf_buf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; char *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_buf" "', argument " "1"" of type '" "inlib::io::iwbuf const *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); result = (char *)((inlib::io::iwbuf const *)arg1)->buf();
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_iwbuf_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::iwbuf *arg1 = (inlib::io::iwbuf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::uint32 result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iwbuf_length" "', argument " "1"" of type '" "inlib::io::iwbuf const *""'");  }
   arg1 = reinterpret_cast< inlib::io::iwbuf * >(argp1); result = (inlib::uint32)((inlib::io::iwbuf const *)arg1)->length();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *iwbuf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__io__iwbuf, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_irbuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_irbuf" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uchar *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_char,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uchar &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uchar &""'"); }
   arg2 = reinterpret_cast< inlib::uchar * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; char *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_char,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "char &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "char &""'"); }
   arg2 = reinterpret_cast< char * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint16 *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_short,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uint16 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uint16 &""'"); }
   arg2 = reinterpret_cast< inlib::uint16 * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::int16 *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_short,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::int16 &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::int16 &""'"); }
   arg2 = reinterpret_cast< inlib::int16 * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::int32 *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::int32 &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::int32 &""'"); }
   arg2 = reinterpret_cast< inlib::int32 * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint64 *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_long_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uint64 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::uint64 &""'"); }
   arg2 = reinterpret_cast< inlib::uint64 * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::int64 *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_long_long,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::int64 &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "inlib::int64 &""'"); }
   arg2 = reinterpret_cast< inlib::int64 * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; float *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "double &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "double &""'"); }
   arg2 = reinterpret_cast< double * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "irbuf_read", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_0(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_char, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_2(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_short, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_3(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_4(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_5(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_6(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long_long, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_7(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_8(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_9(self, argc, argv);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read__SWIG_10(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'irbuf_read'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::io::irbuf::read(inlib::uchar &)\n" "    inlib::io::irbuf::read(char &)\n"
  "    inlib::io::irbuf::read(inlib::uint16 &)\n" "    inlib::io::irbuf::read(inlib::int16 &)\n"
  "    inlib::io::irbuf::read(inlib::uint32 &)\n" "    inlib::io::irbuf::read(inlib::int32 &)\n"
  "    inlib::io::irbuf::read(inlib::uint64 &)\n" "    inlib::io::irbuf::read(inlib::int64 &)\n"
  "    inlib::io::irbuf::read(float &)\n" "    inlib::io::irbuf::read(double &)\n" "    inlib::io::irbuf::read(bool &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; inlib::uchar **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_unsigned_char,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uchar *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uchar *&""'"); }
   arg3 = reinterpret_cast< inlib::uchar ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; char **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_char,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "char *&""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "char *&""'"); }
   arg3 = reinterpret_cast< char ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ;
  inlib::uint16 **arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_unsigned_short,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uint16 *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uint16 *&""'"); }
   arg3 = reinterpret_cast< inlib::uint16 ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; inlib::int16 **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_short,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::int16 *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::int16 *&""'"); }
   arg3 = reinterpret_cast< inlib::int16 ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ;
  inlib::uint32 **arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_unsigned_int,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uint32 *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uint32 *&""'"); }
   arg3 = reinterpret_cast< inlib::uint32 ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; inlib::int32 **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::int32 *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::int32 *&""'"); }
   arg3 = reinterpret_cast< inlib::int32 ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ;
  inlib::uint64 **arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_unsigned_long_long,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uint64 *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::uint64 *&""'"); }
   arg3 = reinterpret_cast< inlib::uint64 ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; inlib::int64 **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_long_long,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::int64 *&""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "inlib::int64 *&""'"); }
   arg3 = reinterpret_cast< inlib::int64 ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; float **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "float *&""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "float *&""'"); }
   arg3 = reinterpret_cast< float ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; double **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_double,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "double *&""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "double *&""'"); }
   arg3 = reinterpret_cast< double ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; bool **arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_p_bool,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "bool *&""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "3"" of type '" "bool *&""'"); }
   arg3 = reinterpret_cast< bool ** >(argp3); result = (bool)(arg1)->read_vec(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_vec" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (bool)(arg1)->read_vec(*arg2); resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_vec(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "irbuf_read_vec", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_11(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_char, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_unsigned_short, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_short, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_3(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_unsigned_int, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_4(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_int, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_5(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_unsigned_long_long, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_6(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_long_long, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_7(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_float, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_8(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_double, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_9(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_bool, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_10(self, argc, argv);}  }  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_unsigned_char, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_vec__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'irbuf_read_vec'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::uchar *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,char *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::uint16 *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::int16 *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::uint32 *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::int32 *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::uint64 *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,inlib::int64 *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,float *&)\n" "    inlib::io::irbuf::read_vec(inlib::uint32 &,double *&)\n"
  "    inlib::io::irbuf::read_vec(inlib::uint32 &,bool *&)\n"
  "    inlib::io::irbuf::read_vec(std::vector< std::string,std::allocator< std::string > > &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_irbuf_read_cstr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; char **arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "irbuf_read_cstr", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_cstr" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_p_char,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_cstr" "', argument " "2"" of type '" "char *&""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_cstr" "', argument " "2"" of type '" "char *&""'"); }
   arg2 = reinterpret_cast< char ** >(argp2); result = (bool)(arg1)->read_cstr(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_img(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::uint32 *arg2 = 0 ; inlib::uint32 *arg3 = 0 ;
  inlib::uint32 *arg4 = 0 ; inlib::uchar **arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "irbuf_read_img", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_img" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_img" "', argument " "2"" of type '" "inlib::uint32 &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_img" "', argument " "2"" of type '" "inlib::uint32 &""'"); }
   arg2 = reinterpret_cast< inlib::uint32 * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "irbuf_read_img" "', argument " "3"" of type '" "inlib::uint32 &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_img" "', argument " "3"" of type '" "inlib::uint32 &""'"); }
   arg3 = reinterpret_cast< inlib::uint32 * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "irbuf_read_img" "', argument " "4"" of type '" "inlib::uint32 &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_img" "', argument " "4"" of type '" "inlib::uint32 &""'"); }
   arg4 = reinterpret_cast< inlib::uint32 * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_p_unsigned_char,  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "irbuf_read_img" "', argument " "5"" of type '" "inlib::uchar *&""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_img" "', argument " "5"" of type '" "inlib::uchar *&""'"); }
   arg5 = reinterpret_cast< inlib::uchar ** >(argp5); result = (bool)(arg1)->read_img(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_std_vec_vec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::io::irbuf::std_vec_vec_uint_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_std_vec_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_std_vec_vec" "', argument " "2"" of type '" "inlib::io::irbuf::std_vec_vec_uint_t &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_std_vec_vec" "', argument " "2"" of type '" "inlib::io::irbuf::std_vec_vec_uint_t &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf::std_vec_vec_uint_t * >(argp2); result = (bool)(arg1)->read_std_vec_vec(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_std_vec_vec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::io::irbuf::std_vec_vec_float_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_std_vec_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_std_vec_vec" "', argument " "2"" of type '" "inlib::io::irbuf::std_vec_vec_float_t &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_std_vec_vec" "', argument " "2"" of type '" "inlib::io::irbuf::std_vec_vec_float_t &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf::std_vec_vec_float_t * >(argp2); result = (bool)(arg1)->read_std_vec_vec(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_std_vec_vec__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::io::irbuf *arg1 = (inlib::io::irbuf *) 0 ; inlib::io::irbuf::std_vec_vec_string_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__io__irbuf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "irbuf_read_std_vec_vec" "', argument " "1"" of type '" "inlib::io::irbuf *""'");  }
   arg1 = reinterpret_cast< inlib::io::irbuf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "irbuf_read_std_vec_vec" "', argument " "2"" of type '" "inlib::io::irbuf::std_vec_vec_string_t &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "irbuf_read_std_vec_vec" "', argument " "2"" of type '" "inlib::io::irbuf::std_vec_vec_string_t &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf::std_vec_vec_string_t * >(argp2); result = (bool)(arg1)->read_std_vec_vec(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_irbuf_read_std_vec_vec(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "irbuf_read_std_vec_vec", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_std_vec_vec__SWIG_0(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_std_vec_vec__SWIG_1(self, argc, argv);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__io__irbuf, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_irbuf_read_std_vec_vec__SWIG_2(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'irbuf_read_std_vec_vec'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::io::irbuf::read_std_vec_vec(inlib::io::irbuf::std_vec_vec_uint_t &)\n"
  "    inlib::io::irbuf::read_std_vec_vec(inlib::io::irbuf::std_vec_vec_float_t &)\n"
  "    inlib::io::irbuf::read_std_vec_vec(inlib::io::irbuf::std_vec_vec_string_t &)\n"); return 0; }
SWIGINTERN PyObject *irbuf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__io__irbuf, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sf_bool_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< bool > *arg1 = (inlib::sg::sf< bool > *) 0 ; inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_bool_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_bool_write" "', argument " "1"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_bool_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_bool_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_bool_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< bool > *arg1 = (inlib::sg::sf< bool > *) 0 ; inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_bool_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_bool_read" "', argument " "1"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_bool_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_bool_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_bool_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< bool > *arg1 = (inlib::sg::sf< bool > *) 0 ; std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_bool_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_bool_dump" "', argument " "1"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< bool > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_bool_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_bool_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_bool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::sf< bool > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::sf< bool > *)new inlib::sg::sf< bool >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_bool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; bool *arg1 = 0 ; bool temp1 ; bool val1 ; int ecode1 = 0 ; inlib::sg::sf< bool > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_bool(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_sf_bool" "', argument " "1"" of type '" "bool""'"); }  
  temp1 = static_cast< bool >(val1); arg1 = &temp1;
  result = (inlib::sg::sf< bool > *)new inlib::sg::sf< bool >((bool const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_bool__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::sf< bool > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::sf< bool > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__sfT_bool_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_bool" "', argument " "1"" of type '" "inlib::sg::sf< bool > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_bool" "', argument " "1"" of type '" "inlib::sg::sf< bool > const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::sf< bool > * >(argp1);
  result = (inlib::sg::sf< bool > *)new inlib::sg::sf< bool >((inlib::sg::sf< bool > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_bool(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_sf_bool", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_sf_bool__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__sfT_bool_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_sf_bool__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_bool(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_sf_bool__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_sf_bool'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::sf< bool >::sf()\n" "    inlib::sg::sf< bool >::sf(bool const &)\n"
  "    inlib::sg::sf< bool >::sf(inlib::sg::sf< bool > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_sf_bool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< bool > *arg1 = (inlib::sg::sf< bool > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_bool_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sf_bool" "', argument " "1"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< bool > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *sf_bool_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__sfT_bool_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sf_bool_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_sf_float_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< float > *arg1 = (inlib::sg::sf< float > *) 0 ; inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_float_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_float_write" "', argument " "1"" of type '" "inlib::sg::sf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_float_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_float_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_float_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< float > *arg1 = (inlib::sg::sf< float > *) 0 ; inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_float_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_float_read" "', argument " "1"" of type '" "inlib::sg::sf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_float_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_float_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_float_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< float > *arg1 = (inlib::sg::sf< float > *) 0 ; std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_float_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_float_dump" "', argument " "1"" of type '" "inlib::sg::sf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_float_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_float_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::sf< float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::sf< float > *)new inlib::sg::sf< float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float *arg1 = 0 ; float temp1 ; float val1 ; int ecode1 = 0 ; inlib::sg::sf< float > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_sf_float" "', argument " "1"" of type '" "float""'"); }  
  temp1 = static_cast< float >(val1); arg1 = &temp1;
  result = (inlib::sg::sf< float > *)new inlib::sg::sf< float >((float const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::sf< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::sf< float > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__sfT_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_float" "', argument " "1"" of type '" "inlib::sg::sf< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_float" "', argument " "1"" of type '" "inlib::sg::sf< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::sf< float > * >(argp1);
  result = (inlib::sg::sf< float > *)new inlib::sg::sf< float >((inlib::sg::sf< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_float(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_sf_float", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_sf_float__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__sfT_float_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_sf_float__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_sf_float__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_sf_float'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::sf< float >::sf()\n" "    inlib::sg::sf< float >::sf(float const &)\n"
  "    inlib::sg::sf< float >::sf(inlib::sg::sf< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_sf_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf< float > *arg1 = (inlib::sg::sf< float > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sfT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sf_float" "', argument " "1"" of type '" "inlib::sg::sf< float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf< float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *sf_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__sfT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sf_float_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_tex_expand_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int arg1 ; unsigned int *arg2 = 0 ; unsigned int *arg3 = 0 ; unsigned int *arg4 = 0 ; unsigned int val1 ;
  int ecode1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  PyObject *swig_obj[4] ; if (!SWIG_Python_UnpackTuple(args, "tex_expand_size", 4, 4, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tex_expand_size" "', argument " "1"" of type '" "unsigned int""'"); }
    arg1 = static_cast< unsigned int >(val1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tex_expand_size" "', argument " "2"" of type '" "unsigned int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tex_expand_size" "', argument " "2"" of type '" "unsigned int &""'"); }
   arg2 = reinterpret_cast< unsigned int * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tex_expand_size" "', argument " "3"" of type '" "unsigned int &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tex_expand_size" "', argument " "3"" of type '" "unsigned int &""'"); }
   arg3 = reinterpret_cast< unsigned int * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_unsigned_int,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tex_expand_size" "', argument " "4"" of type '" "unsigned int &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tex_expand_size" "', argument " "4"" of type '" "unsigned int &""'"); }
   arg4 = reinterpret_cast< unsigned int * >(argp4); inlib::tex_expand_size(arg1,*arg2,*arg3,*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_string_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_string *arg1 = (inlib::sg::sf_string *) 0 ; inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_string_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_string_write" "', argument " "1"" of type '" "inlib::sg::sf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_string * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_string_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_string_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_string_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_string *arg1 = (inlib::sg::sf_string *) 0 ; inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_string_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_string_read" "', argument " "1"" of type '" "inlib::sg::sf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_string * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_string_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_string_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_string_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_string *arg1 = (inlib::sg::sf_string *) 0 ; std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_string_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_string_dump" "', argument " "1"" of type '" "inlib::sg::sf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_string * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_string_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_string_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_string__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::sf_string *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::sf_string *)new inlib::sg::sf_string();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_string__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; int res1 = SWIG_OLDOBJ ; inlib::sg::sf_string *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_string" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_string" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  result = (inlib::sg::sf_string *)new inlib::sg::sf_string((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_delete_sf_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_string *arg1 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_string, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sf_string" "', argument " "1"" of type '" "inlib::sg::sf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_string * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_string__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::sf_string *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::sf_string *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__sf_string,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_string" "', argument " "1"" of type '" "inlib::sg::sf_string const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_string" "', argument " "1"" of type '" "inlib::sg::sf_string const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::sf_string * >(argp1);
  result = (inlib::sg::sf_string *)new inlib::sg::sf_string((inlib::sg::sf_string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_string(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_sf_string", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_sf_string__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__sf_string, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_sf_string__SWIG_2(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_new_sf_string__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_sf_string'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::sf_string::sf_string()\n"
  "    inlib::sg::sf_string::sf_string(std::string const &)\n"
  "    inlib::sg::sf_string::sf_string(inlib::sg::sf_string const &)\n"); return 0; }
SWIGINTERN PyObject *sf_string_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__sf_string, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sf_string_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_sf_rotf_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_rotf *arg1 = (inlib::sg::sf_rotf *) 0 ; inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_rotf_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_rotf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_rotf_write" "', argument " "1"" of type '" "inlib::sg::sf_rotf *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_rotf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_rotf_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_rotf_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_rotf_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_rotf *arg1 = (inlib::sg::sf_rotf *) 0 ; inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_rotf_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_rotf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_rotf_read" "', argument " "1"" of type '" "inlib::sg::sf_rotf *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_rotf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_rotf_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_rotf_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_rotf_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_rotf *arg1 = (inlib::sg::sf_rotf *) 0 ; std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_rotf_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_rotf, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_rotf_dump" "', argument " "1"" of type '" "inlib::sg::sf_rotf *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_rotf * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_rotf_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_rotf_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_rotf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::sf_rotf *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::sf_rotf *)new inlib::sg::sf_rotf();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_rotf, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_rotf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::rotf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::sf_rotf *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__rotf,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_rotf" "', argument " "1"" of type '" "inlib::rotf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_rotf" "', argument " "1"" of type '" "inlib::rotf const &""'"); }
   arg1 = reinterpret_cast< inlib::rotf * >(argp1);
  result = (inlib::sg::sf_rotf *)new inlib::sg::sf_rotf((inlib::rotf const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_rotf, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_sf_rotf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_rotf *arg1 = (inlib::sg::sf_rotf *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_rotf, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sf_rotf" "', argument " "1"" of type '" "inlib::sg::sf_rotf *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_rotf * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_rotf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::sf_rotf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::sf_rotf *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__sf_rotf,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_rotf" "', argument " "1"" of type '" "inlib::sg::sf_rotf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_rotf" "', argument " "1"" of type '" "inlib::sg::sf_rotf const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::sf_rotf * >(argp1);
  result = (inlib::sg::sf_rotf *)new inlib::sg::sf_rotf((inlib::sg::sf_rotf const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_rotf, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_rotf(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_sf_rotf", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_sf_rotf__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__rotf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_sf_rotf__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__sf_rotf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_sf_rotf__SWIG_2(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_sf_rotf'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::sf_rotf::sf_rotf()\n"
  "    inlib::sg::sf_rotf::sf_rotf(inlib::rotf const &)\n" "    inlib::sg::sf_rotf::sf_rotf(inlib::sg::sf_rotf const &)\n");
  return 0; }
SWIGINTERN PyObject *sf_rotf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__sf_rotf, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sf_rotf_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_sf_vec_colorf_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_vec< inlib::colorf,float > *arg1 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; inlib::io::iwbuf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_vec_colorf_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_vec_colorf_write" "', argument " "1"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_vec_colorf_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_vec_colorf_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_vec_colorf_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_vec< inlib::colorf,float > *arg1 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; inlib::io::irbuf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_vec_colorf_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_vec_colorf_read" "', argument " "1"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_vec_colorf_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_vec_colorf_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_vec_colorf_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_vec< inlib::colorf,float > *arg1 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; std::ostream *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "sf_vec_colorf_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_vec_colorf_dump" "', argument " "1"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_vec_colorf_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_vec_colorf_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_vec_colorf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)new inlib::sg::sf_vec< inlib::colorf,float >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_vec_colorf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::colorf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_vec_colorf" "', argument " "1"" of type '" "inlib::colorf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_vec_colorf" "', argument " "1"" of type '" "inlib::colorf const &""'"); }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)new inlib::sg::sf_vec< inlib::colorf,float >((inlib::colorf const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_sf_vec_colorf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_vec< inlib::colorf,float > *arg1 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sf_vec_colorf" "', argument " "1"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_vec_colorf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::sf_vec< inlib::colorf,float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_vec_colorf" "', argument " "1"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_vec_colorf" "', argument " "1"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)new inlib::sg::sf_vec< inlib::colorf,float >((inlib::sg::sf_vec< inlib::colorf,float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_vec_colorf(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_sf_vec_colorf", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_sf_vec_colorf__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_sf_vec_colorf__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_sf_vec_colorf__SWIG_2(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_sf_vec_colorf'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::sf_vec< inlib::colorf,float >::sf_vec()\n"
  "    inlib::sg::sf_vec< inlib::colorf,float >::sf_vec(inlib::colorf const &)\n"
  "    inlib::sg::sf_vec< inlib::colorf,float >::sf_vec(inlib::sg::sf_vec< inlib::colorf,float > const &)\n"); return 0; }
SWIGINTERN PyObject *sf_vec_colorf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sf_vec_colorf_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_sf_enum_winding_type_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_enum< inlib::sg::winding_type > *arg1 = (inlib::sg::sf_enum< inlib::sg::winding_type > *) 0 ;
  inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "sf_enum_winding_type_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_enum_winding_type_write" "', argument " "1"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::winding_type > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_enum_winding_type_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_enum_winding_type_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_enum_winding_type_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_enum< inlib::sg::winding_type > *arg1 = (inlib::sg::sf_enum< inlib::sg::winding_type > *) 0 ;
  inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "sf_enum_winding_type_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_enum_winding_type_read" "', argument " "1"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::winding_type > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_enum_winding_type_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_enum_winding_type_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_sf_enum_winding_type_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::sf_enum< inlib::sg::winding_type > *arg1 = (inlib::sg::sf_enum< inlib::sg::winding_type > *) 0 ;
  std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "sf_enum_winding_type_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sf_enum_winding_type_dump" "', argument " "1"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::winding_type > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sf_enum_winding_type_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sf_enum_winding_type_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_enum_winding_type__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::sf_enum< inlib::sg::winding_type > *result = 0 ;
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::sf_enum< inlib::sg::winding_type > *)new inlib::sg::sf_enum< inlib::sg::winding_type >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_enum_winding_type__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::winding_type *arg1 = 0 ; int val1 ; int ecode1 ; inlib::sg::winding_type temp1 ;
  inlib::sg::sf_enum< inlib::sg::winding_type > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int (swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_sf_enum_winding_type" "', argument " "1"" of type '" "inlib::sg::winding_type const &""'"); }
   else { temp1 = static_cast< inlib::sg::winding_type >(val1); arg1 = &temp1; } 
  result = (inlib::sg::sf_enum< inlib::sg::winding_type > *)new inlib::sg::sf_enum< inlib::sg::winding_type >((inlib::sg::winding_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_sf_enum_winding_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inlib::sg::sf_enum< inlib::sg::winding_type > *arg1 = (inlib::sg::sf_enum< inlib::sg::winding_type > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sf_enum_winding_type" "', argument " "1"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::winding_type > * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_enum_winding_type__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::sf_enum< inlib::sg::winding_type > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::sf_enum< inlib::sg::winding_type > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_sf_enum_winding_type" "', argument " "1"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_sf_enum_winding_type" "', argument " "1"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::winding_type > * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::winding_type > *)new inlib::sg::sf_enum< inlib::sg::winding_type >((inlib::sg::sf_enum< inlib::sg::winding_type > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_sf_enum_winding_type(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "new_sf_enum_winding_type", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_sf_enum_winding_type__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_sf_enum_winding_type__SWIG_2(self, argc, argv);}  }  if (argc == 1) {
    int _v; { int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_sf_enum_winding_type__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_sf_enum_winding_type'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::sf_enum< inlib::sg::winding_type >::sf_enum()\n"
  "    inlib::sg::sf_enum< inlib::sg::winding_type >::sf_enum(inlib::sg::winding_type const &)\n"
  "    inlib::sg::sf_enum< inlib::sg::winding_type >::sf_enum(inlib::sg::sf_enum< inlib::sg::winding_type > const &)\n");
  return 0; }
SWIGINTERN PyObject *sf_enum_winding_type_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *sf_enum_winding_type_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_bmf_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bmf_string" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; inlib::sg::bmf< std::string > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "bmf_string___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string___eq__" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bmfT_std__string_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bmf_string___eq__" "', argument " "2"" of type '" "inlib::sg::bmf< std::string > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string___eq__" "', argument " "2"" of type '" "inlib::sg::bmf< std::string > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp2);
  result = (bool)((inlib::sg::bmf< std::string > const *)arg1)->operator ==((inlib::sg::bmf< std::string > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bmf_string___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; inlib::sg::bmf< std::string > *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "bmf_string___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string___ne__" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bmfT_std__string_t,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bmf_string___ne__" "', argument " "2"" of type '" "inlib::sg::bmf< std::string > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string___ne__" "', argument " "2"" of type '" "inlib::sg::bmf< std::string > const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp2);
  result = (bool)((inlib::sg::bmf< std::string > const *)arg1)->operator !=((inlib::sg::bmf< std::string > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_bmf_string_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_size" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  result = (unsigned int)((inlib::sg::bmf< std::string > const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_empty" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  result = (bool)((inlib::sg::bmf< std::string > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_values__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_values" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *) &((inlib::sg::bmf< std::string > const *)arg1)->values();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_values__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_values" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *) &(arg1)->values();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_values(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bmf_string_values", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bmf_string_values__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_bmf_string_values__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bmf_string_values'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bmf< std::string >::values() const\n"
  "    inlib::sg::bmf< std::string >::values()\n"); return 0; }
SWIGINTERN PyObject *_wrap_bmf_string_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_add" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bmf_string_add" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_add" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->add((std::string const &)*arg2); resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_add" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bmf_string_add" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_add" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  (arg1)->add((std::vector< std::string,std::allocator< std::string > > const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_add(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "bmf_string_add", 0, 2, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bmf_string_add__SWIG_1(self, argc, argv);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_bmf_string_add__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'bmf_string_add'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::bmf< std::string >::add(std::string const &)\n"
  "    inlib::sg::bmf< std::string >::add(std::vector< std::string,std::allocator< std::string > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_bmf_string_insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; inlib::sg::bmf< std::string >::it_t *arg2 = 0 ;
  std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  PyObject *swig_obj[3] ; if (!SWIG_Python_UnpackTuple(args, "bmf_string_insert", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_insert" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bmf_string_insert" "', argument " "2"" of type '" "inlib::sg::bmf< std::string >::it_t const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_insert" "', argument " "2"" of type '" "inlib::sg::bmf< std::string >::it_t const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bmf< std::string >::it_t * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bmf_string_insert" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_insert" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  (arg1)->insert((inlib::sg::bmf< std::string >::it_t const &)*arg2,(std::string const &)*arg3);
  resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail:
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_set_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; unsigned int arg2 ; std::string *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; int res3 = SWIG_OLDOBJ ; PyObject *swig_obj[3] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "bmf_string_set_value", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_set_value" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bmf_string_set_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bmf_string_set_value" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_set_value" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  result = (bool)(arg1)->set_value(arg2,(std::string const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail:
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_get_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; unsigned int arg2 ; std::string *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  bool result; if (!SWIG_Python_UnpackTuple(args, "bmf_string_get_value", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_get_value" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bmf_string_get_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bmf_string_get_value" "', argument " "3"" of type '" "std::string &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_get_value" "', argument " "3"" of type '" "std::string &""'"); }
   arg3 = reinterpret_cast< std::string * >(argp3); result = (bool)(arg1)->get_value(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_clear" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1); (arg1)->clear(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_bmf_string_set_values(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::bmf< std::string > *arg1 = (inlib::sg::bmf< std::string > *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "bmf_string_set_values", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__bmfT_std__string_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bmf_string_set_values" "', argument " "1"" of type '" "inlib::sg::bmf< std::string > *""'");  }
   arg1 = reinterpret_cast< inlib::sg::bmf< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bmf_string_set_values" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bmf_string_set_values" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  (arg1)->set_values((std::vector< std::string,std::allocator< std::string > > const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *bmf_string_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__bmfT_std__string_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_mf_string_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::mf_string *arg1 = (inlib::sg::mf_string *) 0 ; inlib::io::iwbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mf_string_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__mf_string, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mf_string_write" "', argument " "1"" of type '" "inlib::sg::mf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::mf_string * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__iwbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mf_string_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mf_string_write" "', argument " "2"" of type '" "inlib::io::iwbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::iwbuf * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mf_string_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::mf_string *arg1 = (inlib::sg::mf_string *) 0 ; inlib::io::irbuf *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mf_string_read", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__mf_string, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mf_string_read" "', argument " "1"" of type '" "inlib::sg::mf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::mf_string * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__io__irbuf,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mf_string_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mf_string_read" "', argument " "2"" of type '" "inlib::io::irbuf &""'"); }
   arg2 = reinterpret_cast< inlib::io::irbuf * >(argp2); result = (bool)(arg1)->read(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mf_string_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::mf_string *arg1 = (inlib::sg::mf_string *) 0 ; std::ostream *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "mf_string_dump", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__mf_string, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mf_string_dump" "', argument " "1"" of type '" "inlib::sg::mf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::mf_string * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mf_string_dump" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mf_string_dump" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2); result = (bool)(arg1)->dump(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mf_string__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::mf_string *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::mf_string *)new inlib::sg::mf_string();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__mf_string, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_mf_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::mf_string *arg1 = (inlib::sg::mf_string *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__mf_string, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mf_string" "', argument " "1"" of type '" "inlib::sg::mf_string *""'");  }
   arg1 = reinterpret_cast< inlib::sg::mf_string * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_mf_string__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::mf_string *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::mf_string *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__mf_string,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mf_string" "', argument " "1"" of type '" "inlib::sg::mf_string const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mf_string" "', argument " "1"" of type '" "inlib::sg::mf_string const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::mf_string * >(argp1);
  result = (inlib::sg::mf_string *)new inlib::sg::mf_string((inlib::sg::mf_string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__mf_string, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mf_string(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_mf_string", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_mf_string__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__mf_string, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_mf_string__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_mf_string'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::mf_string::mf_string()\n"
  "    inlib::sg::mf_string::mf_string(inlib::sg::mf_string const &)\n"); return 0; }
SWIGINTERN PyObject *mf_string_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__mf_string, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mf_string_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap___lshift__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ; std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; std::ostream *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "__lshift__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (std::ostream *) &inlib::sg::operator <<(*arg1,(std::vector< std::string,std::allocator< std::string > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: PyErr_Clear(); Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_set_from_vec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< std::string,std::allocator< std::string > > *arg1 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "set_from_vec", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "set_from_vec" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "set_from_vec" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg1 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "set_from_vec" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "set_from_vec" "', argument " "2"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp2);
  result = (bool)inlib::sg::set_from_vec(*arg1,(std::vector< std::string,std::allocator< std::string > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_get_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::vector< std::string,std::allocator< std::string > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "get_data" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "get_data" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); }
   arg1 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp1);
  result = (std::string *)inlib::sg::get_data((std::vector< std::string,std::allocator< std::string > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_tick_modeling_none(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "tick_modeling_none", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::tick_modeling_none();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tick_modeling_hippo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "tick_modeling_hippo", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::tick_modeling_hippo();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_tick_modeling_hplot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "tick_modeling_hplot", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::tick_modeling_hplot();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_infos_modeling_ROOT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "infos_modeling_ROOT", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::infos_modeling_ROOT();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_encoding_none(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "encoding_none", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::encoding_none(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_encoding_PAW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "encoding_PAW", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::encoding_PAW(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_boxes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_boxes", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_boxes(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_wire_boxes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_wire_boxes", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_wire_boxes();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_lines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_lines", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_lines(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_segments(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_segments", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_segments();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_points(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_points", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_points(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_top_lines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_top_lines", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_top_lines();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_texts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_texts", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_texts(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_curve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_curve", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_curve(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_filled_curve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_filled_curve", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_filled_curve();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_bar_chart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_bar_chart", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_bar_chart();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_solid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_solid", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_solid(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_wire_frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_wire_frame", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_wire_frame();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_reduced_wire_frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::string *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "modeling_reduced_wire_frame", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_reduced_wire_frame();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_polygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_polygon", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_polygon();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_none(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_none", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_none(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_I(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_I", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_I(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_modeling_plus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "modeling_plus", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::modeling_plus(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_light_model_base_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "light_model_base_color", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::light_model_base_color();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_light_model_phong(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "light_model_phong", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::light_model_phong();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_hershey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_hershey", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_hershey(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_arialbd_ttf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_arialbd_ttf", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_arialbd_ttf();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_timesbd_ttf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_timesbd_ttf", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_timesbd_ttf();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_symbol_ttf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_symbol_ttf", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_symbol_ttf(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_stixgeneral_otf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_stixgeneral_otf", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_stixgeneral_otf();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_helvetica_ttf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_helvetica_ttf", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_helvetica_ttf();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_times_roman_ttf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_times_roman_ttf", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_times_roman_ttf();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_font_ROOT_62(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "font_ROOT_62", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::font_ROOT_62(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_node_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_node_end", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::s_node_end(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_s_clear_scene(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "s_clear_scene", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::s_clear_scene(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_color__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::style_color *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::style_color *)new inlib::sg::style_color();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_color, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_color__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::colorf *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ;
  int res2 = 0 ; inlib::sg::style_color *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_style_color" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style_color" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_style_color" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style_color" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2);
  result = (inlib::sg::style_color *)new inlib::sg::style_color((std::string const &)*arg1,(inlib::colorf const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_color, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_new_style_color__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; float arg2 ; float arg3 ; float arg4 ; int res1 = SWIG_OLDOBJ ; float val2 ;
  int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; inlib::sg::style_color *result = 0 ;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_style_color" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style_color" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_style_color" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_style_color" "', argument " "3"" of type '" "float""'"); }  
  arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_style_color" "', argument " "4"" of type '" "float""'"); }  
  arg4 = static_cast< float >(val4);
  result = (inlib::sg::style_color *)new inlib::sg::style_color((std::string const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_color, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail: if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_delete_style_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_color *arg1 = (inlib::sg::style_color *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_color, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style_color" "', argument " "1"" of type '" "inlib::sg::style_color *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_color * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_style_color__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_color *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::style_color *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__style_color,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_style_color" "', argument " "1"" of type '" "inlib::sg::style_color const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style_color" "', argument " "1"" of type '" "inlib::sg::style_color const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::style_color * >(argp1);
  result = (inlib::sg::style_color *)new inlib::sg::style_color((inlib::sg::style_color const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_color, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_color(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_style_color", 0, 4, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_style_color__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__style_color, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_style_color__SWIG_3(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_new_style_color__SWIG_1(self, argc, argv);}  }  }  if (argc == 4) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_style_color__SWIG_2(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_style_color'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_color::style_color()\n"
  "    inlib::sg::style_color::style_color(std::string const &,inlib::colorf const &)\n"
  "    inlib::sg::style_color::style_color(std::string const &,float,float,float)\n"
  "    inlib::sg::style_color::style_color(inlib::sg::style_color const &)\n"); return 0; }
SWIGINTERN PyObject *style_color_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style_color, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_color_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_style_colormap_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "style_colormap_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::style_colormap::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_colormap_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "style_colormap_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::style_colormap::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_colormap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::style_colormap *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::style_colormap *)new inlib::sg::style_colormap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_style_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_colormap *arg1 = (inlib::sg::style_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style_colormap" "', argument " "1"" of type '" "inlib::sg::style_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_colormap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_colormap *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::style_colormap *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__style_colormap,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_style_colormap" "', argument " "1"" of type '" "inlib::sg::style_colormap const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style_colormap" "', argument " "1"" of type '" "inlib::sg::style_colormap const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::style_colormap * >(argp1);
  result = (inlib::sg::style_colormap *)new inlib::sg::style_colormap((inlib::sg::style_colormap const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_colormap(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_style_colormap", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_style_colormap__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__style_colormap, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_style_colormap__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_style_colormap'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_colormap::style_colormap()\n"
  "    inlib::sg::style_colormap::style_colormap(inlib::sg::style_colormap const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_colormap_get_color__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_colormap *arg1 = (inlib::sg::style_colormap *) 0 ; unsigned int arg2 ;
  inlib::colorf *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::style_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_colormap * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_colormap_get_color" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__colorf,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "style_colormap_get_color" "', argument " "3"" of type '" "inlib::colorf &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_colormap_get_color" "', argument " "3"" of type '" "inlib::colorf &""'"); }
   arg3 = reinterpret_cast< inlib::colorf * >(argp3);
  result = (bool)((inlib::sg::style_colormap const *)arg1)->get_color(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_colormap_get_color__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_colormap *arg1 = (inlib::sg::style_colormap *) 0 ; std::string *arg2 = 0 ;
  inlib::colorf *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; void *argp3 = 0 ; int res3 = 0 ;
  bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::style_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_colormap_get_color" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_colormap_get_color" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__colorf,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "style_colormap_get_color" "', argument " "3"" of type '" "inlib::colorf &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_colormap_get_color" "', argument " "3"" of type '" "inlib::colorf &""'"); }
   arg3 = reinterpret_cast< inlib::colorf * >(argp3);
  result = (bool)((inlib::sg::style_colormap const *)arg1)->get_color((std::string const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_colormap_get_color(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_colormap_get_color", 0, 3, argv))) SWIG_fail; --argc; if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_colormap, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_style_colormap_get_color__SWIG_0(self, argc, argv);}  }  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_colormap, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_style_colormap_get_color__SWIG_1(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_colormap_get_color'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_colormap::get_color(unsigned int,inlib::colorf &) const\n"
  "    inlib::sg::style_colormap::get_color(std::string const &,inlib::colorf &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_colormap_get_string_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::style_colormap *arg1 = (inlib::sg::style_colormap *) 0 ; unsigned int arg2 ;
  std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "style_colormap_get_string_color", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_colormap_get_string_color" "', argument " "1"" of type '" "inlib::sg::style_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_colormap * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_colormap_get_string_color" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "style_colormap_get_string_color" "', argument " "3"" of type '" "std::string &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_colormap_get_string_color" "', argument " "3"" of type '" "std::string &""'"); }
   arg3 = reinterpret_cast< std::string * >(argp3);
  result = (bool)((inlib::sg::style_colormap const *)arg1)->get_string_color(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_colormap_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_colormap *arg1 = (inlib::sg::style_colormap *) 0 ; inlib::sg::style_color arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_colormap_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_colormap_add" "', argument " "1"" of type '" "inlib::sg::style_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_colormap * >(argp1); {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__style_color,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_colormap_add" "', argument " "2"" of type '" "inlib::sg::style_color""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_colormap_add" "', argument " "2"" of type '" "inlib::sg::style_color""'"); }
     else { inlib::sg::style_color * temp = reinterpret_cast< inlib::sg::style_color * >(argp2); arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp; }  }  (arg1)->add(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *style_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_style_default_colormap_s_default(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::string *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "style_default_colormap_s_default", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::style_default_colormap::s_default();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_default_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_default_colormap *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "new_style_default_colormap", 0, 0, 0)) SWIG_fail;
  result = (inlib::sg::style_default_colormap *)new inlib::sg::style_default_colormap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_default_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_style_default_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::style_default_colormap *arg1 = (inlib::sg::style_default_colormap *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_default_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style_default_colormap" "', argument " "1"" of type '" "inlib::sg::style_default_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_default_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *style_default_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style_default_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_default_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_style_ROOT_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_ROOT_colormap *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "new_style_ROOT_colormap", 0, 0, 0)) SWIG_fail;
  result = (inlib::sg::style_ROOT_colormap *)new inlib::sg::style_ROOT_colormap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_ROOT_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_style_ROOT_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_ROOT_colormap *arg1 = (inlib::sg::style_ROOT_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_ROOT_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style_ROOT_colormap" "', argument " "1"" of type '" "inlib::sg::style_ROOT_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_ROOT_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *style_ROOT_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style_ROOT_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_ROOT_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_style_povama_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_povama_colormap *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "new_style_povama_colormap", 0, 0, 0)) SWIG_fail;
  result = (inlib::sg::style_povama_colormap *)new inlib::sg::style_povama_colormap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_povama_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_style_povama_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::style_povama_colormap *arg1 = (inlib::sg::style_povama_colormap *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_povama_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style_povama_colormap" "', argument " "1"" of type '" "inlib::sg::style_povama_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_povama_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *style_povama_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style_povama_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_povama_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_to_ulong(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; unsigned long *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "to_ulong", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_ulong" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to_ulong" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "to_ulong" "', argument " "2"" of type '" "unsigned long &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to_ulong" "', argument " "2"" of type '" "unsigned long &""'"); }
   arg2 = reinterpret_cast< unsigned long * >(argp2); result = (bool)inlib::sg::to_ulong((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_find_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::cmaps_t *arg1 = 0 ; std::string *arg2 = 0 ; inlib::colorf *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "find_color", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "find_color" "', argument " "1"" of type '" "inlib::sg::cmaps_t const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "find_color" "', argument " "1"" of type '" "inlib::sg::cmaps_t const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::cmaps_t * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "find_color" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "find_color" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_inlib__colorf,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "find_color" "', argument " "3"" of type '" "inlib::colorf &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "find_color" "', argument " "3"" of type '" "inlib::colorf &""'"); }
   arg3 = reinterpret_cast< inlib::colorf * >(argp3);
  result = (bool)inlib::sg::find_color((std::map< std::string,inlib::sg::style_colormap,std::less< std::string >,std::allocator< std::pair< std::string const,inlib::sg::style_colormap > > > const &)*arg1,(std::string const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_fpi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float result;
  if (!SWIG_Python_UnpackTuple(args, "fpi", 0, 0, 0)) SWIG_fail; result = (float)inlib::fpi();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ftwo_pi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float result;
  if (!SWIG_Python_UnpackTuple(args, "ftwo_pi", 0, 0, 0)) SWIG_fail; result = (float)inlib::ftwo_pi();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fhalf_pi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float result;
  if (!SWIG_Python_UnpackTuple(args, "fhalf_pi", 0, 0, 0)) SWIG_fail; result = (float)inlib::fhalf_pi();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fcos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fcos" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fcos(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fsin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fsin" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fsin(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_facos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "facos" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::facos(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fasin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fasin" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fasin(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ftan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ftan" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::ftan(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fatan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fatan" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fatan(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fatan2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "fatan2", 2, 2, swig_obj)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fatan2" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "fatan2" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = (float)inlib::fatan2(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fsqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fsqrt" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fsqrt(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fpow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "fpow", 2, 2, swig_obj)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fpow" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "fpow" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); result = (float)inlib::fpow(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fexp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fexp" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fexp(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_flog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "flog" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::flog(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_flog10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "flog10" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::flog10(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ffloor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ffloor" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::ffloor(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ffabs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ffabs" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::ffabs(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fceil(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; float result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fceil" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (float)inlib::fceil(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fdeg2rad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float result;
  if (!SWIG_Python_UnpackTuple(args, "fdeg2rad", 0, 0, 0)) SWIG_fail; result = (float)inlib::fdeg2rad();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_frad2deg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float result;
  if (!SWIG_Python_UnpackTuple(args, "frad2deg", 0, 0, 0)) SWIG_fail; result = (float)inlib::frad2deg();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_fround(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0; float arg1 ;
  float val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; int result; if (!args) SWIG_fail; swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fround" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); result = (int)inlib::fround(arg1); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_parser__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::style_parser *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::style_parser *)new inlib::sg::style_parser();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_parser, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_style_parser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style_parser" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_style_parser__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::style_parser *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__style_parser,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_style_parser" "', argument " "1"" of type '" "inlib::sg::style_parser const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style_parser" "', argument " "1"" of type '" "inlib::sg::style_parser const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::style_parser *)new inlib::sg::style_parser((inlib::sg::style_parser const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style_parser, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style_parser(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_style_parser", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_style_parser__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__style_parser, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_style_parser__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_style_parser'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::style_parser()\n"
  "    inlib::sg::style_parser::style_parser(inlib::sg::style_parser const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_no_limit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  int result; if (!SWIG_Python_UnpackTuple(args, "style_parser_no_limit", 0, 0, 0)) SWIG_fail;
  result = (int)inlib::sg::style_parser::no_limit(); resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::style_parser *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_parser_copy", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_copy" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__style_parser,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_copy" "', argument " "2"" of type '" "inlib::sg::style_parser const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_copy" "', argument " "2"" of type '" "inlib::sg::style_parser const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::style_parser * >(argp2); (arg1)->copy((inlib::sg::style_parser const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::style_parser *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "style_parser_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_equal" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__style_parser,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_equal" "', argument " "2"" of type '" "inlib::sg::style_parser const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_equal" "', argument " "2"" of type '" "inlib::sg::style_parser const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::style_parser * >(argp2);
  result = (bool)(arg1)->equal((inlib::sg::style_parser const &)*arg2); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_reset" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); (arg1)->reset(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_tos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_tos" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); result = ((inlib::sg::style_parser const *)arg1)->tos();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_color__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::colorf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_color" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_color" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_color" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2); (arg1)->color((inlib::colorf const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_color__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::colorf result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_color" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); result = ((inlib::sg::style_parser const *)arg1)->color();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_color(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_color", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_color__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_style_parser_color__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_color'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::color(inlib::colorf const &)\n"
  "    inlib::sg::style_parser::color() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_highlight_color__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::colorf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_highlight_color" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_highlight_color" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_highlight_color" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2); (arg1)->highlight_color((inlib::colorf const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_highlight_color__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::colorf result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_highlight_color" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = ((inlib::sg::style_parser const *)arg1)->highlight_color();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_highlight_color(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = {
    0} ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_highlight_color", 0, 2, argv))) SWIG_fail; --argc;
  if (argc == 1) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_highlight_color__SWIG_1(self, argc, argv);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_style_parser_highlight_color__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_highlight_color'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::highlight_color(inlib::colorf const &)\n"
  "    inlib::sg::style_parser::highlight_color() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_back_color__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::colorf *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_back_color" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_back_color" "', argument " "2"" of type '" "inlib::colorf const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_back_color" "', argument " "2"" of type '" "inlib::colorf const &""'"); }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2); (arg1)->back_color((inlib::colorf const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_back_color__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::colorf result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_back_color" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); result = ((inlib::sg::style_parser const *)arg1)->back_color();
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_back_color(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_back_color", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_back_color__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_style_parser_back_color__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_back_color'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::back_color(inlib::colorf const &)\n"
  "    inlib::sg::style_parser::back_color() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_line_width__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_line_width" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_line_width" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->line_width(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_line_width__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_line_width" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->line_width();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_line_width(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_line_width", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_line_width__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_line_width__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_line_width'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::line_width(float)\n"
  "    inlib::sg::style_parser::line_width() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_back_shadow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_back_shadow" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->back_shadow();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_back_shadow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_back_shadow" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_back_shadow" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->back_shadow(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_back_shadow(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_back_shadow", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_back_shadow__SWIG_0(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_back_shadow__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_back_shadow'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::back_shadow() const\n"
  "    inlib::sg::style_parser::back_shadow(float)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_marker_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::marker_style arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_marker_style" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_marker_style" "', argument " "2"" of type '" "inlib::sg::marker_style""'"); }
    arg2 = static_cast< inlib::sg::marker_style >(val2); (arg1)->marker_style(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_marker_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::marker_style result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_marker_style" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::marker_style)((inlib::sg::style_parser const *)arg1)->marker_style();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_marker_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_marker_style", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_marker_style__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_marker_style__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_marker_style'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::marker_style(inlib::sg::marker_style)\n"
  "    inlib::sg::style_parser::marker_style() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_marker_size__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_marker_size" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_marker_size" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->marker_size(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_marker_size__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_marker_size" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->marker_size();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_marker_size(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_marker_size", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_marker_size__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_marker_size__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_marker_size'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::marker_size(float)\n"
  "    inlib::sg::style_parser::marker_size() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_font_size__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_font_size" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_font_size" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->font_size(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_font_size__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_font_size" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->font_size();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_font_size(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_font_size", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_font_size__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_font_size__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_font_size'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::font_size(float)\n"
  "    inlib::sg::style_parser::font_size() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_area_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::area_style arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_area_style" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_area_style" "', argument " "2"" of type '" "inlib::sg::area_style""'"); }
    arg2 = static_cast< inlib::sg::area_style >(val2); (arg1)->area_style(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_area_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::area_style result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_area_style" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::area_style)((inlib::sg::style_parser const *)arg1)->area_style();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_area_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_area_style", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_area_style__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_area_style__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_area_style'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::area_style(inlib::sg::area_style)\n"
  "    inlib::sg::style_parser::area_style() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_modeling__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_modeling" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_modeling" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_modeling" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->modeling((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_modeling__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_modeling" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->modeling();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_modeling(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_modeling", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_modeling__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_style_parser_modeling__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_modeling'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::modeling(std::string const &)\n"
  "    inlib::sg::style_parser::modeling() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_light_model__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_light_model" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_light_model" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_light_model" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->light_model((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_light_model__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_light_model" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->light_model();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_light_model(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_light_model", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_light_model__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_light_model__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_light_model'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::light_model(std::string const &)\n"
  "    inlib::sg::style_parser::light_model() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_tick_modeling__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_tick_modeling" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_tick_modeling" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_tick_modeling" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->tick_modeling((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_tick_modeling__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_tick_modeling" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->tick_modeling();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_tick_modeling(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_tick_modeling", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_tick_modeling__SWIG_1(self, argc, argv);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_tick_modeling__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_tick_modeling'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::tick_modeling(std::string const &)\n"
  "    inlib::sg::style_parser::tick_modeling() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_encoding__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_encoding" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_encoding" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_encoding" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->encoding((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_encoding__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_encoding" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->encoding();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_encoding(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_encoding", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_encoding__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_style_parser_encoding__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_encoding'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::encoding(std::string const &)\n"
  "    inlib::sg::style_parser::encoding() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_smoothing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_smoothing" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_smoothing" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->smoothing(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_smoothing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_smoothing" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (bool)((inlib::sg::style_parser const *)arg1)->smoothing(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_smoothing(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_smoothing", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_smoothing__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_smoothing__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_smoothing'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::smoothing(bool)\n"
  "    inlib::sg::style_parser::smoothing() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_hinting__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_hinting" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_hinting" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->hinting(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_hinting__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_hinting" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (bool)((inlib::sg::style_parser const *)arg1)->hinting(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_hinting(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_hinting", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_hinting__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_hinting__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_hinting'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::hinting(bool)\n"
  "    inlib::sg::style_parser::hinting() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_painting__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::painting_policy result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_painting" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::painting_policy)((inlib::sg::style_parser const *)arg1)->painting();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_painting__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::painting_policy arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_painting" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_painting" "', argument " "2"" of type '" "inlib::sg::painting_policy""'"); }
    arg2 = static_cast< inlib::sg::painting_policy >(val2); (arg1)->painting(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_painting(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_painting", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_painting__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_painting__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_painting'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::painting() const\n"
  "    inlib::sg::style_parser::painting(inlib::sg::painting_policy)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_hatching__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::hatching_policy result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_hatching" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::hatching_policy)((inlib::sg::style_parser const *)arg1)->hatching();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_hatching__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::hatching_policy arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_hatching" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_hatching" "', argument " "2"" of type '" "inlib::sg::hatching_policy""'"); }
    arg2 = static_cast< inlib::sg::hatching_policy >(val2); (arg1)->hatching(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_hatching(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_hatching", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_hatching__SWIG_0(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_hatching__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_hatching'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::hatching() const\n"
  "    inlib::sg::style_parser::hatching(inlib::sg::hatching_policy)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_projection__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::projection_type result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_projection" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::projection_type)((inlib::sg::style_parser const *)arg1)->projection();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_projection__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::projection_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_projection" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_projection" "', argument " "2"" of type '" "inlib::sg::projection_type""'"); }
    arg2 = static_cast< inlib::sg::projection_type >(val2); (arg1)->projection(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_projection(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_projection", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_projection__SWIG_0(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_projection__SWIG_1(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_projection'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::projection() const\n"
  "    inlib::sg::style_parser::projection(inlib::sg::projection_type)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_line_pattern__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::lpat arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned short val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_line_pattern" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_line_pattern" "', argument " "2"" of type '" "inlib::sg::lpat""'"); }
    arg2 = static_cast< inlib::sg::lpat >(val2); (arg1)->line_pattern(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_line_pattern__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::lpat result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_line_pattern" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::lpat)((inlib::sg::style_parser const *)arg1)->line_pattern();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_line_pattern(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_line_pattern", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_line_pattern__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_style_parser_line_pattern__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_line_pattern'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::line_pattern(inlib::sg::lpat)\n"
  "    inlib::sg::style_parser::line_pattern() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_font__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_font" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_font" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_font" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->font((std::string const &)*arg2); resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_font__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_font" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->font();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_font(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_font", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_font__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_style_parser_font__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_font'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::font(std::string const &)\n"
  "    inlib::sg::style_parser::font() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_divisions__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_divisions" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_divisions" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); (arg1)->divisions(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_divisions__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_divisions" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (int)((inlib::sg::style_parser const *)arg1)->divisions(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_divisions(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_divisions", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_divisions__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_divisions__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_divisions'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::divisions(int)\n"
  "    inlib::sg::style_parser::divisions() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_rotation_steps__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; unsigned int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_rotation_steps" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_rotation_steps" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); (arg1)->rotation_steps(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_rotation_steps__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_rotation_steps" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (unsigned int)((inlib::sg::style_parser const *)arg1)->rotation_steps();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_rotation_steps(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = {
    0} ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_rotation_steps", 0, 2, argv))) SWIG_fail; --argc;
  if (argc == 1) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_rotation_steps__SWIG_1(self, argc, argv);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_style_parser_rotation_steps__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_rotation_steps'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::rotation_steps(unsigned int)\n"
  "    inlib::sg::style_parser::rotation_steps() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_offset__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_offset" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_offset" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->offset(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_offset__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_offset" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->offset(); resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_offset(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_offset", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_offset__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_offset__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_offset'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::offset(float)\n"
  "    inlib::sg::style_parser::offset() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_strip_width__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_strip_width" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_strip_width" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->strip_width(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_strip_width__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_strip_width" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->strip_width();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_strip_width(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_strip_width", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_strip_width__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_strip_width__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_strip_width'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::strip_width(float)\n"
  "    inlib::sg::style_parser::strip_width() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_angle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_angle" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_angle" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->angle(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_angle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_angle" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->angle(); resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_angle(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_angle", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_angle__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_angle__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_angle'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::angle(float)\n"
  "    inlib::sg::style_parser::angle() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_scale__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_scale" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_scale" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->scale(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_scale__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_scale" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->scale(); resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_scale(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_scale", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_scale__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_scale__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_scale'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::scale(float)\n"
  "    inlib::sg::style_parser::scale() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_bar_offset__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_bar_offset" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_bar_offset" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->bar_offset(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_bar_offset__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_bar_offset" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->bar_offset();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_bar_offset(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_bar_offset", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_bar_offset__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_bar_offset__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_bar_offset'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::bar_offset(float)\n"
  "    inlib::sg::style_parser::bar_offset() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_bar_width__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_bar_width" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_bar_width" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->bar_width(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_bar_width__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_bar_width" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->bar_width();
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_bar_width(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_bar_width", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_bar_width__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_bar_width__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_bar_width'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::bar_width(float)\n"
  "    inlib::sg::style_parser::bar_width() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_multi_node_limit__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_multi_node_limit" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_multi_node_limit" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); (arg1)->multi_node_limit(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_multi_node_limit__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_multi_node_limit" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (int)((inlib::sg::style_parser const *)arg1)->multi_node_limit();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_multi_node_limit(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_multi_node_limit", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_multi_node_limit__SWIG_1(self, argc, argv);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_multi_node_limit__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_multi_node_limit'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::multi_node_limit(int)\n"
  "    inlib::sg::style_parser::multi_node_limit() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_spacing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_spacing" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_spacing" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->spacing(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_spacing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  float result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_spacing" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (float)((inlib::sg::style_parser const *)arg1)->spacing(); resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_spacing(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_spacing", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_spacing__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_spacing__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_spacing'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::spacing(float)\n"
  "    inlib::sg::style_parser::spacing() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_visible__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_visible" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_visible" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->visible(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_visible__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_visible" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (bool)((inlib::sg::style_parser const *)arg1)->visible(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_visible(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_visible", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_visible__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_visible__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_visible'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::visible(bool)\n"
  "    inlib::sg::style_parser::visible() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_editable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_editable" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_editable" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->editable(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_editable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_editable" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (bool)((inlib::sg::style_parser const *)arg1)->editable(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_editable(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_editable", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_editable__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_editable__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_editable'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::editable(bool)\n"
  "    inlib::sg::style_parser::editable() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_automated__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_automated" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_automated" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->automated(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_automated__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_automated" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (bool)((inlib::sg::style_parser const *)arg1)->automated(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_automated(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_automated", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_automated__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_automated__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_automated'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::automated(bool)\n"
  "    inlib::sg::style_parser::automated() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_cut__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_cut" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_cut" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_cut" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->cut((std::string const &)*arg2); resultobj = SWIG_Py_Void(); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_cut__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_cut" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->cut();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_cut(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_cut", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_cut__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_style_parser_cut__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_cut'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::cut(std::string const &)\n"
  "    inlib::sg::style_parser::cut() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_options__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_options" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_options" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_options" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->options((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_options__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_options" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->options();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_options(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_options", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_options__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_style_parser_options__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_options'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::options(std::string const &)\n"
  "    inlib::sg::style_parser::options() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_color_mapping__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_color_mapping" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_color_mapping" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_color_mapping" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->color_mapping((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_color_mapping__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_color_mapping" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (std::string *) &((inlib::sg::style_parser const *)arg1)->color_mapping();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_color_mapping(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_color_mapping", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_color_mapping__SWIG_1(self, argc, argv);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_color_mapping__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_color_mapping'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::color_mapping(std::string const &)\n"
  "    inlib::sg::style_parser::color_mapping() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_enforced__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_enforced" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_enforced" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->enforced(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_enforced__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_enforced" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (bool)((inlib::sg::style_parser const *)arg1)->enforced(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_enforced(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_enforced", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_enforced__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_enforced__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_enforced'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::enforced(bool)\n"
  "    inlib::sg::style_parser::enforced() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_translation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::vec3f *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_translation" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__vec3f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_translation" "', argument " "2"" of type '" "inlib::vec3f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_translation" "', argument " "2"" of type '" "inlib::vec3f const &""'"); }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2); (arg1)->translation((inlib::vec3f const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_translation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::vec3f result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_translation" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); result = ((inlib::sg::style_parser const *)arg1)->translation();
  resultobj = SWIG_NewPointerObj((new inlib::vec3f(static_cast< const inlib::vec3f& >(result))), SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_translation(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_translation", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_translation__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_inlib__vec3f, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_style_parser_translation__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_translation'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::translation(inlib::vec3f const &)\n"
  "    inlib::sg::style_parser::translation() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_front_face__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::winding_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_front_face" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_front_face" "', argument " "2"" of type '" "inlib::sg::winding_type""'"); }
    arg2 = static_cast< inlib::sg::winding_type >(val2); (arg1)->front_face(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_front_face__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::winding_type result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_front_face" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::winding_type)((inlib::sg::style_parser const *)arg1)->front_face();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_front_face(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_front_face", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_front_face__SWIG_1(self, argc, argv);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_front_face__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_front_face'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::front_face(inlib::sg::winding_type)\n"
  "    inlib::sg::style_parser::front_face() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_hjust__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::hjust arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_hjust" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_hjust" "', argument " "2"" of type '" "inlib::sg::hjust""'"); }
    arg2 = static_cast< inlib::sg::hjust >(val2); (arg1)->hjust(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_hjust__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::hjust result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_hjust" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::hjust)((inlib::sg::style_parser const *)arg1)->hjust();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_hjust(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_hjust", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_hjust__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_hjust__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_hjust'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::hjust(inlib::sg::hjust)\n"
  "    inlib::sg::style_parser::hjust() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_vjust__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; inlib::sg::vjust arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_vjust" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "style_parser_vjust" "', argument " "2"" of type '" "inlib::sg::vjust""'"); }
    arg2 = static_cast< inlib::sg::vjust >(val2); (arg1)->vjust(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_vjust__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::vjust result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_vjust" "', argument " "1"" of type '" "inlib::sg::style_parser const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  result = (inlib::sg::vjust)((inlib::sg::style_parser const *)arg1)->vjust();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_vjust(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_vjust", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_style_parser_vjust__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__style_parser, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_style_parser_vjust__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_vjust'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::vjust(inlib::sg::vjust)\n"
  "    inlib::sg::style_parser::vjust() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_scolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::colorf *arg1 = 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result; if (!SWIG_Python_UnpackTuple(args, "style_parser_scolor", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__colorf,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_scolor" "', argument " "1"" of type '" "inlib::colorf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_scolor" "', argument " "1"" of type '" "inlib::colorf const &""'"); }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_scolor" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_scolor" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2);
  result = (bool)inlib::sg::style_parser::scolor((inlib::colorf const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_shjust__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::hjust *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_shjust" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_shjust" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__hjust,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_shjust" "', argument " "2"" of type '" "inlib::sg::hjust &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_shjust" "', argument " "2"" of type '" "inlib::sg::hjust &""'"); }
   arg2 = reinterpret_cast< inlib::sg::hjust * >(argp2);
  result = (bool)inlib::sg::style_parser::shjust((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_shjust__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::hjust arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_shjust" "', argument " "1"" of type '" "inlib::sg::hjust""'"); }
    arg1 = static_cast< inlib::sg::hjust >(val1); result = (char *)inlib::sg::style_parser::shjust(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_shjust(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_shjust", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v; {
      int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_shjust__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__hjust, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_style_parser_shjust__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_shjust'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::shjust(std::string const &,inlib::sg::hjust &)\n"
  "    inlib::sg::style_parser::shjust(inlib::sg::hjust)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_svjust__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::vjust *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_svjust" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_svjust" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__vjust,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_svjust" "', argument " "2"" of type '" "inlib::sg::vjust &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_svjust" "', argument " "2"" of type '" "inlib::sg::vjust &""'"); }
   arg2 = reinterpret_cast< inlib::sg::vjust * >(argp2);
  result = (bool)inlib::sg::style_parser::svjust((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_svjust__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::vjust arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_svjust" "', argument " "1"" of type '" "inlib::sg::vjust""'"); }
    arg1 = static_cast< inlib::sg::vjust >(val1); result = (char *)inlib::sg::style_parser::svjust(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_svjust(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_svjust", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v; {
      int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_svjust__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__vjust, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_style_parser_svjust__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_svjust'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::svjust(std::string const &,inlib::sg::vjust &)\n"
  "    inlib::sg::style_parser::svjust(inlib::sg::vjust)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_smarker_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::marker_style *arg2 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_smarker_style" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_smarker_style" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__marker_style,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_smarker_style" "', argument " "2"" of type '" "inlib::sg::marker_style &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_smarker_style" "', argument " "2"" of type '" "inlib::sg::marker_style &""'"); }
   arg2 = reinterpret_cast< inlib::sg::marker_style * >(argp2);
  result = (bool)inlib::sg::style_parser::smarker_style((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_smarker_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::marker_style arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_smarker_style" "', argument " "1"" of type '" "inlib::sg::marker_style""'"); }
    arg1 = static_cast< inlib::sg::marker_style >(val1); result = (char *)inlib::sg::style_parser::smarker_style(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_smarker_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_smarker_style", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; { int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_smarker_style__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__marker_style, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_smarker_style__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_smarker_style'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::style_parser::smarker_style(std::string const &,inlib::sg::marker_style &)\n"
  "    inlib::sg::style_parser::smarker_style(inlib::sg::marker_style)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_sarea_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::area_style *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ;
  int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; { std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_sarea_style" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_sarea_style" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__area_style,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_sarea_style" "', argument " "2"" of type '" "inlib::sg::area_style &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_sarea_style" "', argument " "2"" of type '" "inlib::sg::area_style &""'"); }
   arg2 = reinterpret_cast< inlib::sg::area_style * >(argp2);
  result = (bool)inlib::sg::style_parser::sarea_style((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_sarea_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::area_style arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_sarea_style" "', argument " "1"" of type '" "inlib::sg::area_style""'"); }
    arg1 = static_cast< inlib::sg::area_style >(val1); result = (char *)inlib::sg::style_parser::sarea_style(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_sarea_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_sarea_style", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; { int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_sarea_style__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__area_style, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_sarea_style__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_sarea_style'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style_parser::sarea_style(std::string const &,inlib::sg::area_style &)\n"
  "    inlib::sg::style_parser::sarea_style(inlib::sg::area_style)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_spainting_policies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::vector< std::string,std::allocator< std::string > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_spainting_policies" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_spainting_policies" "', argument " "1"" of type '" "std::vector< std::string,std::allocator< std::string > > &""'"); }
   arg1 = reinterpret_cast< std::vector< std::string,std::allocator< std::string > > * >(argp1);
  inlib::sg::style_parser::spainting_policies(*arg1); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_spainting_policy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::painting_policy *arg2 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_spainting_policy" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_spainting_policy" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__painting_policy,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_spainting_policy" "', argument " "2"" of type '" "inlib::sg::painting_policy &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_spainting_policy" "', argument " "2"" of type '" "inlib::sg::painting_policy &""'"); }
   arg2 = reinterpret_cast< inlib::sg::painting_policy * >(argp2);
  result = (bool)inlib::sg::style_parser::spainting_policy((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_spainting_policy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::painting_policy arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_spainting_policy" "', argument " "1"" of type '" "inlib::sg::painting_policy""'"); }
    arg1 = static_cast< inlib::sg::painting_policy >(val1); result = (char *)inlib::sg::style_parser::spainting_policy(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_spainting_policy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_spainting_policy", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; { int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_spainting_policy__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__painting_policy, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_spainting_policy__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_spainting_policy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::style_parser::spainting_policy(std::string const &,inlib::sg::painting_policy &)\n"
  "    inlib::sg::style_parser::spainting_policy(inlib::sg::painting_policy)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_shatching_policy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::hatching_policy *arg2 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_shatching_policy" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_shatching_policy" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__hatching_policy,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_shatching_policy" "', argument " "2"" of type '" "inlib::sg::hatching_policy &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_shatching_policy" "', argument " "2"" of type '" "inlib::sg::hatching_policy &""'"); }
   arg2 = reinterpret_cast< inlib::sg::hatching_policy * >(argp2);
  result = (bool)inlib::sg::style_parser::shatching_policy((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_shatching_policy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::hatching_policy arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_shatching_policy" "', argument " "1"" of type '" "inlib::sg::hatching_policy""'"); }
    arg1 = static_cast< inlib::sg::hatching_policy >(val1); result = (char *)inlib::sg::style_parser::shatching_policy(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_shatching_policy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_shatching_policy", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; { int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_shatching_policy__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__hatching_policy, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_shatching_policy__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_shatching_policy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::style_parser::shatching_policy(std::string const &,inlib::sg::hatching_policy &)\n"
  "    inlib::sg::style_parser::shatching_policy(inlib::sg::hatching_policy)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_sprojection_type__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::string *arg1 = 0 ; inlib::sg::projection_type *arg2 = 0 ; int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_sprojection_type" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_sprojection_type" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__projection_type,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_sprojection_type" "', argument " "2"" of type '" "inlib::sg::projection_type &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_sprojection_type" "', argument " "2"" of type '" "inlib::sg::projection_type &""'"); }
   arg2 = reinterpret_cast< inlib::sg::projection_type * >(argp2);
  result = (bool)inlib::sg::style_parser::sprojection_type((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_sprojection_type__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::projection_type arg1 ; int val1 ; int ecode1 = 0 ; char *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "style_parser_sprojection_type" "', argument " "1"" of type '" "inlib::sg::projection_type""'"); }
    arg1 = static_cast< inlib::sg::projection_type >(val1); result = (char *)inlib::sg::style_parser::sprojection_type(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_sprojection_type(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "style_parser_sprojection_type", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; { int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_style_parser_sprojection_type__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__projection_type, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_style_parser_sprojection_type__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'style_parser_sprojection_type'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::style_parser::sprojection_type(std::string const &,inlib::sg::projection_type &)\n"
  "    inlib::sg::style_parser::sprojection_type(inlib::sg::projection_type)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_parser_sline_pattern(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *arg1 = 0 ; inlib::sg::lpat *arg2 = 0 ; int res1 = SWIG_OLDOBJ ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "style_parser_sline_pattern", 2, 2, swig_obj)) SWIG_fail; {
    std::string *ptr = (std::string *)0; res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_sline_pattern" "', argument " "1"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_sline_pattern" "', argument " "1"" of type '" "std::string const &""'"); }
     arg1 = ptr; }  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_unsigned_short,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_sline_pattern" "', argument " "2"" of type '" "inlib::sg::lpat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_sline_pattern" "', argument " "2"" of type '" "inlib::sg::lpat &""'"); }
   arg2 = reinterpret_cast< inlib::sg::lpat * >(argp2);
  result = (bool)inlib::sg::style_parser::sline_pattern((std::string const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res1)) delete arg1; return resultobj; fail:
  if (SWIG_IsNewObj(res1)) delete arg1; return NULL; }
SWIGINTERN PyObject *_wrap_style_parser_parse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style_parser *arg1 = (inlib::sg::style_parser *) 0 ; std::ostream *arg2 = 0 ; inlib::sg::cmaps_t *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "style_parser_parse", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style_parser, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_parser_parse" "', argument " "1"" of type '" "inlib::sg::style_parser *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style_parser * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_parser_parse" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_parse" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "style_parser_parse" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_parse" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'"); }
   arg3 = reinterpret_cast< inlib::sg::cmaps_t * >(argp3); { std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "style_parser_parse" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_parser_parse" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  result = (bool)(arg1)->parse(*arg2,(inlib::sg::cmaps_t const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail:
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *style_parser_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style_parser, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_parser_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_base_colormap_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "base_colormap_get_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::base_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "base_colormap_get_color" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); result = ((inlib::sg::base_colormap const *)arg1)->get_color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_colormap_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "base_colormap_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_cast" "', argument " "1"" of type '" "inlib::sg::base_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "base_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::base_colormap const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_delete_base_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_base_colormap" "', argument " "1"" of type '" "inlib::sg::base_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_colormap_colorn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_colorn" "', argument " "1"" of type '" "inlib::sg::base_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1);
  result = (unsigned int)((inlib::sg::base_colormap const *)arg1)->colorn();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_colormap_valn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_valn" "', argument " "1"" of type '" "inlib::sg::base_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1);
  result = (unsigned int)((inlib::sg::base_colormap const *)arg1)->valn();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_colormap_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "base_colormap_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_color" "', argument " "1"" of type '" "inlib::sg::base_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "base_colormap_color" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = ((inlib::sg::base_colormap const *)arg1)->color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_colormap_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; float result;
  if (!SWIG_Python_UnpackTuple(args, "base_colormap_value", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_value" "', argument " "1"" of type '" "inlib::sg::base_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "base_colormap_value" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (float)((inlib::sg::base_colormap const *)arg1)->value(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_base_colormap_set_PAW_coloring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::base_colormap *arg1 = (inlib::sg::base_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__base_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base_colormap_set_PAW_coloring" "', argument " "1"" of type '" "inlib::sg::base_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::base_colormap * >(argp1); (arg1)->set_PAW_coloring(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *base_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__base_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_by_value_colormap_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "by_value_colormap_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::by_value_colormap::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_by_value_colormap_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::by_value_colormap *arg1 = (inlib::sg::by_value_colormap *) 0 ; float arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "by_value_colormap_get_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__by_value_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "by_value_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::by_value_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::by_value_colormap * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "by_value_colormap_get_color" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); result = ((inlib::sg::by_value_colormap const *)arg1)->get_color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_by_value_colormap_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::by_value_colormap *arg1 = (inlib::sg::by_value_colormap *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "by_value_colormap_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__by_value_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "by_value_colormap_cast" "', argument " "1"" of type '" "inlib::sg::by_value_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::by_value_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "by_value_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "by_value_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::by_value_colormap const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_by_value_colormap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; inlib::sg::cmaps_t *arg2 = 0 ; std::string *arg3 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ; inlib::sg::by_value_colormap *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_by_value_colormap" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_by_value_colormap" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_by_value_colormap" "', argument " "2"" of type '" "inlib::sg::cmaps_t const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_by_value_colormap" "', argument " "2"" of type '" "inlib::sg::cmaps_t const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::cmaps_t * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_by_value_colormap" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_by_value_colormap" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; } 
  result = (inlib::sg::by_value_colormap *)new inlib::sg::by_value_colormap(*arg1,(inlib::sg::cmaps_t const &)*arg2,(std::string const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__by_value_colormap, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_new_by_value_colormap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::by_value_colormap *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::by_value_colormap *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__by_value_colormap,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_by_value_colormap" "', argument " "1"" of type '" "inlib::sg::by_value_colormap const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_by_value_colormap" "', argument " "1"" of type '" "inlib::sg::by_value_colormap const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::by_value_colormap * >(argp1);
  result = (inlib::sg::by_value_colormap *)new inlib::sg::by_value_colormap((inlib::sg::by_value_colormap const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__by_value_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_by_value_colormap(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_by_value_colormap", 0, 3, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__by_value_colormap, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_by_value_colormap__SWIG_1(self, argc, argv);}  }  if (argc == 3) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_new_by_value_colormap__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_by_value_colormap'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::by_value_colormap::by_value_colormap(std::ostream &,inlib::sg::cmaps_t const &,std::string const &)\n"
  "    inlib::sg::by_value_colormap::by_value_colormap(inlib::sg::by_value_colormap const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_by_value_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::by_value_colormap *arg1 = (inlib::sg::by_value_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__by_value_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_by_value_colormap" "', argument " "1"" of type '" "inlib::sg::by_value_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::by_value_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *by_value_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__by_value_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *by_value_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_grey_scale_colormap_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::string *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "grey_scale_colormap_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::grey_scale_colormap::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_grey_scale_colormap_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::grey_scale_colormap *arg1 = (inlib::sg::grey_scale_colormap *) 0 ; float arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "grey_scale_colormap_get_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__grey_scale_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "grey_scale_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::grey_scale_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_colormap * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "grey_scale_colormap_get_color" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); result = ((inlib::sg::grey_scale_colormap const *)arg1)->get_color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_grey_scale_colormap_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::grey_scale_colormap *arg1 = (inlib::sg::grey_scale_colormap *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "grey_scale_colormap_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__grey_scale_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "grey_scale_colormap_cast" "', argument " "1"" of type '" "inlib::sg::grey_scale_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "grey_scale_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "grey_scale_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::grey_scale_colormap const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_grey_scale_colormap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; unsigned int arg3 ; float val1 ; int ecode1 = 0 ; float val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; inlib::sg::grey_scale_colormap *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_grey_scale_colormap" "', argument " "1"" of type '" "float""'"); }
    arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_grey_scale_colormap" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_grey_scale_colormap" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (inlib::sg::grey_scale_colormap *)new inlib::sg::grey_scale_colormap(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__grey_scale_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_grey_scale_colormap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::grey_scale_colormap *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::grey_scale_colormap *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__grey_scale_colormap,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_grey_scale_colormap" "', argument " "1"" of type '" "inlib::sg::grey_scale_colormap const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_grey_scale_colormap" "', argument " "1"" of type '" "inlib::sg::grey_scale_colormap const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_colormap * >(argp1);
  result = (inlib::sg::grey_scale_colormap *)new inlib::sg::grey_scale_colormap((inlib::sg::grey_scale_colormap const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__grey_scale_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_grey_scale_colormap(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_grey_scale_colormap", 0, 3, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__grey_scale_colormap, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_grey_scale_colormap__SWIG_1(self, argc, argv);}  }  if (argc == 3) {
    int _v; { int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_grey_scale_colormap__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_grey_scale_colormap'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::grey_scale_colormap::grey_scale_colormap(float,float,unsigned int)\n"
  "    inlib::sg::grey_scale_colormap::grey_scale_colormap(inlib::sg::grey_scale_colormap const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_grey_scale_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::grey_scale_colormap *arg1 = (inlib::sg::grey_scale_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__grey_scale_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_grey_scale_colormap" "', argument " "1"" of type '" "inlib::sg::grey_scale_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *grey_scale_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__grey_scale_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *grey_scale_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_grey_scale_inverse_colormap_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::string *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "grey_scale_inverse_colormap_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::grey_scale_inverse_colormap::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_grey_scale_inverse_colormap_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::grey_scale_inverse_colormap *arg1 = (inlib::sg::grey_scale_inverse_colormap *) 0 ;
  float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "grey_scale_inverse_colormap_get_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "grey_scale_inverse_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::grey_scale_inverse_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_inverse_colormap * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "grey_scale_inverse_colormap_get_color" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); result = ((inlib::sg::grey_scale_inverse_colormap const *)arg1)->get_color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_grey_scale_inverse_colormap_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::grey_scale_inverse_colormap *arg1 = (inlib::sg::grey_scale_inverse_colormap *) 0 ;
  std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "grey_scale_inverse_colormap_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "grey_scale_inverse_colormap_cast" "', argument " "1"" of type '" "inlib::sg::grey_scale_inverse_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_inverse_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "grey_scale_inverse_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "grey_scale_inverse_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::grey_scale_inverse_colormap const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_grey_scale_inverse_colormap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; unsigned int arg3 ; float val1 ; int ecode1 = 0 ; float val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; inlib::sg::grey_scale_inverse_colormap *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_grey_scale_inverse_colormap" "', argument " "1"" of type '" "float""'"); }
    arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_grey_scale_inverse_colormap" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_grey_scale_inverse_colormap" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (inlib::sg::grey_scale_inverse_colormap *)new inlib::sg::grey_scale_inverse_colormap(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_grey_scale_inverse_colormap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::grey_scale_inverse_colormap *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::grey_scale_inverse_colormap *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_grey_scale_inverse_colormap" "', argument " "1"" of type '" "inlib::sg::grey_scale_inverse_colormap const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_grey_scale_inverse_colormap" "', argument " "1"" of type '" "inlib::sg::grey_scale_inverse_colormap const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_inverse_colormap * >(argp1);
  result = (inlib::sg::grey_scale_inverse_colormap *)new inlib::sg::grey_scale_inverse_colormap((inlib::sg::grey_scale_inverse_colormap const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_grey_scale_inverse_colormap(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_grey_scale_inverse_colormap", 0, 3, argv))) SWIG_fail; --argc;
  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_grey_scale_inverse_colormap__SWIG_1(self, argc, argv);}  } 
  if (argc == 3) { int _v; { int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_grey_scale_inverse_colormap__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_grey_scale_inverse_colormap'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::grey_scale_inverse_colormap::grey_scale_inverse_colormap(float,float,unsigned int)\n"
  "    inlib::sg::grey_scale_inverse_colormap::grey_scale_inverse_colormap(inlib::sg::grey_scale_inverse_colormap const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_delete_grey_scale_inverse_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::grey_scale_inverse_colormap *arg1 = (inlib::sg::grey_scale_inverse_colormap *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_grey_scale_inverse_colormap" "', argument " "1"" of type '" "inlib::sg::grey_scale_inverse_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::grey_scale_inverse_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *grey_scale_inverse_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__grey_scale_inverse_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *grey_scale_inverse_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_violet_to_red_colormap_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::string *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "violet_to_red_colormap_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::violet_to_red_colormap::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_violet_to_red_colormap_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::violet_to_red_colormap *arg1 = (inlib::sg::violet_to_red_colormap *) 0 ; float arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "violet_to_red_colormap_get_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__violet_to_red_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "violet_to_red_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::violet_to_red_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::violet_to_red_colormap * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "violet_to_red_colormap_get_color" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); result = ((inlib::sg::violet_to_red_colormap const *)arg1)->get_color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_violet_to_red_colormap_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::violet_to_red_colormap *arg1 = (inlib::sg::violet_to_red_colormap *) 0 ;
  std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "violet_to_red_colormap_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__violet_to_red_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "violet_to_red_colormap_cast" "', argument " "1"" of type '" "inlib::sg::violet_to_red_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::violet_to_red_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "violet_to_red_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "violet_to_red_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::violet_to_red_colormap const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_violet_to_red_colormap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; unsigned int arg3 ; float val1 ; int ecode1 = 0 ; float val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; inlib::sg::violet_to_red_colormap *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_violet_to_red_colormap" "', argument " "1"" of type '" "float""'"); }
    arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_violet_to_red_colormap" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_violet_to_red_colormap" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (inlib::sg::violet_to_red_colormap *)new inlib::sg::violet_to_red_colormap(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__violet_to_red_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_violet_to_red_colormap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::violet_to_red_colormap *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::violet_to_red_colormap *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__violet_to_red_colormap,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_violet_to_red_colormap" "', argument " "1"" of type '" "inlib::sg::violet_to_red_colormap const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_violet_to_red_colormap" "', argument " "1"" of type '" "inlib::sg::violet_to_red_colormap const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::violet_to_red_colormap * >(argp1);
  result = (inlib::sg::violet_to_red_colormap *)new inlib::sg::violet_to_red_colormap((inlib::sg::violet_to_red_colormap const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__violet_to_red_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_violet_to_red_colormap(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "new_violet_to_red_colormap", 0, 3, argv))) SWIG_fail; --argc; if (argc == 1) {
    int _v; int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__violet_to_red_colormap, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_violet_to_red_colormap__SWIG_1(self, argc, argv);}  } 
  if (argc == 3) { int _v; { int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_violet_to_red_colormap__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_violet_to_red_colormap'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::violet_to_red_colormap::violet_to_red_colormap(float,float,unsigned int)\n"
  "    inlib::sg::violet_to_red_colormap::violet_to_red_colormap(inlib::sg::violet_to_red_colormap const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_violet_to_red_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::violet_to_red_colormap *arg1 = (inlib::sg::violet_to_red_colormap *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__violet_to_red_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_violet_to_red_colormap" "', argument " "1"" of type '" "inlib::sg::violet_to_red_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::violet_to_red_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *violet_to_red_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__violet_to_red_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *violet_to_red_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_const_colormap_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "const_colormap_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::const_colormap::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_const_colormap_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::const_colormap *arg1 = (inlib::sg::const_colormap *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; inlib::colorf result;
  if (!SWIG_Python_UnpackTuple(args, "const_colormap_get_color", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__const_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_colormap_get_color" "', argument " "1"" of type '" "inlib::sg::const_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::const_colormap * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "const_colormap_get_color" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); result = ((inlib::sg::const_colormap const *)arg1)->get_color(arg2);
  resultobj = SWIG_NewPointerObj((new inlib::colorf(static_cast< const inlib::colorf& >(result))), SWIGTYPE_p_inlib__colorf, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_const_colormap_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::const_colormap *arg1 = (inlib::sg::const_colormap *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "const_colormap_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__const_colormap, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_colormap_cast" "', argument " "1"" of type '" "inlib::sg::const_colormap const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::const_colormap * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "const_colormap_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::const_colormap const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_new_const_colormap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::colorf *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::const_colormap *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__colorf,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_const_colormap" "', argument " "1"" of type '" "inlib::colorf const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_const_colormap" "', argument " "1"" of type '" "inlib::colorf const &""'"); }
   arg1 = reinterpret_cast< inlib::colorf * >(argp1);
  result = (inlib::sg::const_colormap *)new inlib::sg::const_colormap((inlib::colorf const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__const_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_const_colormap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::const_colormap *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::const_colormap *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__const_colormap,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_const_colormap" "', argument " "1"" of type '" "inlib::sg::const_colormap const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_const_colormap" "', argument " "1"" of type '" "inlib::sg::const_colormap const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::const_colormap * >(argp1);
  result = (inlib::sg::const_colormap *)new inlib::sg::const_colormap((inlib::sg::const_colormap const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__const_colormap, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_const_colormap(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_const_colormap", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__colorf, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_const_colormap__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__const_colormap, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_const_colormap__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_const_colormap'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::const_colormap::const_colormap(inlib::colorf const &)\n"
  "    inlib::sg::const_colormap::const_colormap(inlib::sg::const_colormap const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_const_colormap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::const_colormap *arg1 = (inlib::sg::const_colormap *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__const_colormap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_const_colormap" "', argument " "1"" of type '" "inlib::sg::const_colormap *""'");  }
   arg1 = reinterpret_cast< inlib::sg::const_colormap * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *const_colormap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__const_colormap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *const_colormap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; inlib::sg::action *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_action" "', argument " "1"" of type '" "std::ostream &""'");  } 
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_action" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); result = (inlib::sg::action *)new inlib::sg::action(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::action *arg1 = (inlib::sg::action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__action, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_action" "', argument " "1"" of type '" "inlib::sg::action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_action_out(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::action *arg1 = (inlib::sg::action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::ostream *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "action_out" "', argument " "1"" of type '" "inlib::sg::action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::action * >(argp1); result = (std::ostream *) &(arg1)->out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *action_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_search_action__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::search_action *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_search_action" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_search_action" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); result = (inlib::sg::search_action *)new inlib::sg::search_action(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__search_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_search_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_search_action" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_search_action__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::search_action *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::search_action *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__search_action,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_search_action" "', argument " "1"" of type '" "inlib::sg::search_action const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_search_action" "', argument " "1"" of type '" "inlib::sg::search_action const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (inlib::sg::search_action *)new inlib::sg::search_action((inlib::sg::search_action const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__search_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_search_action(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_search_action", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_search_action__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__search_action, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_search_action__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_search_action'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::search_action::search_action(std::ostream &)\n"
  "    inlib::sg::search_action::search_action(inlib::sg::search_action const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_search_action_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_reset" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); (arg1)->reset(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_what(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::search_action::search_what result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_what" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (inlib::sg::search_action::search_what)((inlib::sg::search_action const *)arg1)->what();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_set_what(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; inlib::sg::search_action::search_what arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "search_action_set_what", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_set_what" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "search_action_set_what" "', argument " "2"" of type '" "inlib::sg::search_action::search_what""'"); }
    arg2 = static_cast< inlib::sg::search_action::search_what >(val2); (arg1)->set_what(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_set_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "search_action_set_done", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_set_done" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "search_action_set_done" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->set_done(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_done" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (bool)((inlib::sg::search_action const *)arg1)->done(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_add_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *arg2 = (void *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "search_action_add_obj", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_add_obj" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "search_action_add_obj" "', argument " "2"" of type '" "void *""'");  }
   (arg1)->add_obj(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_objs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< void *,std::allocator< void * > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_objs" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (std::vector< void *,std::allocator< void * > > *) &((inlib::sg::search_action const *)arg1)->objs();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_void_p_std__allocatorT_void_p_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_set_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "search_action_set_class", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_set_class" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "search_action_set_class" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "search_action_set_class" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->set_class((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_search_action_sclass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string result; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_sclass" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); result = (arg1)->sclass();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_sclass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::string *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_sclass" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (std::string *) &((inlib::sg::search_action const *)arg1)->sclass();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_sclass(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "search_action_sclass", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__search_action, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_search_action_sclass__SWIG_0(self, argc, argv);}  }  if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__search_action, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_search_action_sclass__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'search_action_sclass'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::search_action::sclass()\n"
  "    inlib::sg::search_action::sclass() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_search_action_set_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "search_action_set_node", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_set_node" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "search_action_set_node" "', argument " "2"" of type '" "inlib::sg::node *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); (arg1)->set_node(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_node" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (inlib::sg::node *)((inlib::sg::search_action const *)arg1)->node();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_search_action_path_push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "search_action_path_push", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_path_push" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "search_action_path_push" "', argument " "2"" of type '" "inlib::sg::node *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); (arg1)->path_push(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_path_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_path_pop" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); (arg1)->path_pop(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::search_action::path_t *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_path" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (inlib::sg::search_action::path_t *) &((inlib::sg::search_action const *)arg1)->path();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_clear_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_clear_path" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1); (arg1)->clear_path(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_do_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_do_path" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (bool)((inlib::sg::search_action const *)arg1)->do_path(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_search_action_add_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; inlib::sg::search_action::path_t *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "search_action_add_path", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_add_path" "', argument " "1"" of type '" "inlib::sg::search_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "search_action_add_path" "', argument " "2"" of type '" "inlib::sg::search_action::path_t const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "search_action_add_path" "', argument " "2"" of type '" "inlib::sg::search_action::path_t const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::search_action::path_t * >(argp2);
  (arg1)->add_path((inlib::sg::search_action::path_t const &)*arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_search_action_paths(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::search_action *arg1 = (inlib::sg::search_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::search_action::paths_t *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__search_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "search_action_paths" "', argument " "1"" of type '" "inlib::sg::search_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::search_action * >(argp1);
  result = (inlib::sg::search_action::paths_t *) &((inlib::sg::search_action const *)arg1)->paths();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *search_action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__search_action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *search_action_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_win_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ; inlib::sg::win_action *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "new_win_action", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_win_action" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_win_action" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_win_action" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_win_action" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (inlib::sg::win_action *)new inlib::sg::win_action(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__win_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_win_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::win_action *arg1 = (inlib::sg::win_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__win_action, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_win_action" "', argument " "1"" of type '" "inlib::sg::win_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::win_action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_win_action_ww(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::win_action *arg1 = (inlib::sg::win_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__win_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "win_action_ww" "', argument " "1"" of type '" "inlib::sg::win_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::win_action * >(argp1);
  result = (unsigned int)((inlib::sg::win_action const *)arg1)->ww();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_win_action_wh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::win_action *arg1 = (inlib::sg::win_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__win_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "win_action_wh" "', argument " "1"" of type '" "inlib::sg::win_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::win_action * >(argp1);
  result = (unsigned int)((inlib::sg::win_action const *)arg1)->wh();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *win_action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__win_action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *win_action_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_mat4f__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::mat4f *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::mat4f *)new inlib::mat4f();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_mat4f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4f *arg1 = (inlib::mat4f *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4f, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_mat4f" "', argument " "1"" of type '" "inlib::mat4f *""'");  }
   arg1 = reinterpret_cast< inlib::mat4f * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4f__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4f *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::mat4f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__mat4f,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mat4f" "', argument " "1"" of type '" "inlib::mat4f const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mat4f" "', argument " "1"" of type '" "inlib::mat4f const &""'"); }
   arg1 = reinterpret_cast< inlib::mat4f * >(argp1); result = (inlib::mat4f *)new inlib::mat4f((inlib::mat4f const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4f__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; float arg1 ; float arg2 ; float arg3 ; float arg4 ; float arg5 ; float arg6 ; float arg7 ;
  float arg8 ; float arg9 ; float arg10 ; float arg11 ; float arg12 ; float arg13 ; float arg14 ; float arg15 ; float arg16 ;
  float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  float val5 ; int ecode5 = 0 ; float val6 ; int ecode6 = 0 ; float val7 ; int ecode7 = 0 ; float val8 ; int ecode8 = 0 ;
  float val9 ; int ecode9 = 0 ; float val10 ; int ecode10 = 0 ; float val11 ; int ecode11 = 0 ; float val12 ; int ecode12 = 0 ;
  float val13 ; int ecode13 = 0 ; float val14 ; int ecode14 = 0 ; float val15 ; int ecode15 = 0 ; float val16 ;
  int ecode16 = 0 ; inlib::mat4f *result = 0 ; if ((nobjs < 16) || (nobjs > 16)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_mat4f" "', argument " "1"" of type '" "float""'"); }  
  arg1 = static_cast< float >(val1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_mat4f" "', argument " "2"" of type '" "float""'"); }  
  arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_mat4f" "', argument " "3"" of type '" "float""'"); }  
  arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_mat4f" "', argument " "4"" of type '" "float""'"); }  
  arg4 = static_cast< float >(val4); ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_mat4f" "', argument " "5"" of type '" "float""'"); }  
  arg5 = static_cast< float >(val5); ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_mat4f" "', argument " "6"" of type '" "float""'"); }  
  arg6 = static_cast< float >(val6); ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_mat4f" "', argument " "7"" of type '" "float""'"); }  
  arg7 = static_cast< float >(val7); ecode8 = SWIG_AsVal_float(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_mat4f" "', argument " "8"" of type '" "float""'"); }  
  arg8 = static_cast< float >(val8); ecode9 = SWIG_AsVal_float(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_mat4f" "', argument " "9"" of type '" "float""'"); }  
  arg9 = static_cast< float >(val9); ecode10 = SWIG_AsVal_float(swig_obj[9], &val10); if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_mat4f" "', argument " "10"" of type '" "float""'"); }  
  arg10 = static_cast< float >(val10); ecode11 = SWIG_AsVal_float(swig_obj[10], &val11); if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_mat4f" "', argument " "11"" of type '" "float""'"); }  
  arg11 = static_cast< float >(val11); ecode12 = SWIG_AsVal_float(swig_obj[11], &val12); if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_mat4f" "', argument " "12"" of type '" "float""'"); }  
  arg12 = static_cast< float >(val12); ecode13 = SWIG_AsVal_float(swig_obj[12], &val13); if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "new_mat4f" "', argument " "13"" of type '" "float""'"); }  
  arg13 = static_cast< float >(val13); ecode14 = SWIG_AsVal_float(swig_obj[13], &val14); if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_mat4f" "', argument " "14"" of type '" "float""'"); }  
  arg14 = static_cast< float >(val14); ecode15 = SWIG_AsVal_float(swig_obj[14], &val15); if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_mat4f" "', argument " "15"" of type '" "float""'"); }  
  arg15 = static_cast< float >(val15); ecode16 = SWIG_AsVal_float(swig_obj[15], &val16); if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "new_mat4f" "', argument " "16"" of type '" "float""'"); }  
  arg16 = static_cast< float >(val16);
  result = (inlib::mat4f *)new inlib::mat4f(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4f__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::mat4< float > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::mat4f *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__mat4T_float_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_mat4f" "', argument " "1"" of type '" "inlib::mat4< float > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_mat4f" "', argument " "1"" of type '" "inlib::mat4< float > const &""'"); }
   arg1 = reinterpret_cast< inlib::mat4< float > * >(argp1);
  result = (inlib::mat4f *)new inlib::mat4f((inlib::mat4< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, SWIG_POINTER_NEW |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_mat4f(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[17] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_mat4f", 0, 16, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_mat4f__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__mat4f, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_mat4f__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__mat4T_float_t, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_mat4f__SWIG_3(self, argc, argv);}  }  if (argc == 16) { int _v; {
      int res = SWIG_AsVal_float(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_float(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_float(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_float(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_float(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_float(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                        int res = SWIG_AsVal_float(argv[9], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                          int res = SWIG_AsVal_float(argv[10], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                            int res = SWIG_AsVal_float(argv[11], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                              int res = SWIG_AsVal_float(argv[12], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                int res = SWIG_AsVal_float(argv[13], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                  int res = SWIG_AsVal_float(argv[14], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                                    int res = SWIG_AsVal_float(argv[15], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                                    return _wrap_new_mat4f__SWIG_2(self, argc, argv);}  }  }  }  }  }  }  }  }  }  }  }  }  }  }
       }  }  fail: SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_mat4f'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::mat4f::mat4f()\n" "    inlib::mat4f::mat4f(inlib::mat4f const &)\n"
  "    inlib::mat4f::mat4f(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
  "    inlib::mat4f::mat4f(inlib::mat4< float > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_mat4f_mul_2f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4f *arg1 = (inlib::mat4f *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4f_mul_2f", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4f_mul_2f" "', argument " "1"" of type '" "inlib::mat4f const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4f * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4f_mul_2f" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_2f" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4f_mul_2f" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_2f" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); ((inlib::mat4f const *)arg1)->mul_2f(*arg2,*arg3); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4f_mul_3f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4f *arg1 = (inlib::mat4f *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  PyObject *swig_obj[4] ; if (!SWIG_Python_UnpackTuple(args, "mat4f_mul_3f", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4f_mul_3f" "', argument " "1"" of type '" "inlib::mat4f const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4f * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4f_mul_3f" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_3f" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4f_mul_3f" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_3f" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "mat4f_mul_3f" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_3f" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); ((inlib::mat4f const *)arg1)->mul_3f(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_mat4f_mul_4f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::mat4f *arg1 = (inlib::mat4f *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ; float *arg5 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ;
  if (!SWIG_Python_UnpackTuple(args, "mat4f_mul_4f", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__mat4f, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mat4f_mul_4f" "', argument " "1"" of type '" "inlib::mat4f const *""'");  }
   arg1 = reinterpret_cast< inlib::mat4f * >(argp1); res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "mat4f_mul_4f" "', argument " "2"" of type '" "float &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_4f" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "mat4f_mul_4f" "', argument " "3"" of type '" "float &""'");  } 
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_4f" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "mat4f_mul_4f" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_4f" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "mat4f_mul_4f" "', argument " "5"" of type '" "float &""'");  } 
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "mat4f_mul_4f" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); ((inlib::mat4f const *)arg1)->mul_4f(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *mat4f_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__mat4f, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *mat4f_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_state__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::state *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::state *)new inlib::sg::state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_state__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::state *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__state,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_state" "', argument " "1"" of type '" "inlib::sg::state const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_state" "', argument " "1"" of type '" "inlib::sg::state const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  result = (inlib::sg::state *)new inlib::sg::state((inlib::sg::state const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_state(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_state", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_state__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__state, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_state__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_state'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::state::state()\n"
  "    inlib::sg::state::state(inlib::sg::state const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_state_screen2ndc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; int arg2 ; int arg3 ; float *arg4 = 0 ; float *arg5 = 0 ; float *arg6 = 0 ;
  float *arg7 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ; void *argp7 = 0 ; int res7 = 0 ;
  PyObject *swig_obj[7] ; if (!SWIG_Python_UnpackTuple(args, "state_screen2ndc", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_screen2ndc" "', argument " "1"" of type '" "inlib::sg::state const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_screen2ndc" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "state_screen2ndc" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "state_screen2ndc" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2ndc" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "state_screen2ndc" "', argument " "5"" of type '" "float &""'");  } 
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2ndc" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "state_screen2ndc" "', argument " "6"" of type '" "float &""'");  } 
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2ndc" "', argument " "6"" of type '" "float &""'"); }
   arg6 = reinterpret_cast< float * >(argp6); res7 = SWIG_ConvertPtr(swig_obj[6], &argp7, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "state_screen2ndc" "', argument " "7"" of type '" "float &""'");  } 
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2ndc" "', argument " "7"" of type '" "float &""'"); }
   arg7 = reinterpret_cast< float * >(argp7); ((inlib::sg::state const *)arg1)->screen2ndc(arg2,arg3,*arg4,*arg5,*arg6,*arg7);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_screen2wc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; int arg2 ; int arg3 ; float *arg4 = 0 ; float *arg5 = 0 ; float *arg6 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  void *argp5 = 0 ; int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ; PyObject *swig_obj[6] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "state_screen2wc", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_screen2wc" "', argument " "1"" of type '" "inlib::sg::state const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_screen2wc" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "state_screen2wc" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "state_screen2wc" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2wc" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "state_screen2wc" "', argument " "5"" of type '" "float &""'");  } 
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2wc" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "state_screen2wc" "', argument " "6"" of type '" "float &""'");  } 
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2wc" "', argument " "6"" of type '" "float &""'"); }
   arg6 = reinterpret_cast< float * >(argp6);
  result = (bool)((inlib::sg::state const *)arg1)->screen2wc(arg2,arg3,*arg4,*arg5,*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_screen2pwc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; int arg2 ; int arg3 ; float *arg4 = 0 ; float *arg5 = 0 ; float *arg6 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  void *argp5 = 0 ; int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ; PyObject *swig_obj[6] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "state_screen2pwc", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_screen2pwc" "', argument " "1"" of type '" "inlib::sg::state const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_screen2pwc" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "state_screen2pwc" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "state_screen2pwc" "', argument " "4"" of type '" "float &""'");  } 
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2pwc" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "state_screen2pwc" "', argument " "5"" of type '" "float &""'");  } 
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2pwc" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "state_screen2pwc" "', argument " "6"" of type '" "float &""'");  } 
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_screen2pwc" "', argument " "6"" of type '" "float &""'"); }
   arg6 = reinterpret_cast< float * >(argp6);
  result = (bool)((inlib::sg::state const *)arg1)->screen2pwc(arg2,arg3,*arg4,*arg5,*arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_camera_proj_only(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::mat4f *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_camera_proj_only", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_camera_proj_only" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__mat4f,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_camera_proj_only" "', argument " "2"" of type '" "inlib::mat4f &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_camera_proj_only" "', argument " "2"" of type '" "inlib::mat4f &""'"); }
   arg2 = reinterpret_cast< inlib::mat4f * >(argp2); (arg1)->camera_proj_only(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_ww_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_ww_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_ww_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_ww_set" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); if (arg1) (arg1)->m_ww = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_ww_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_ww_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (unsigned int) ((arg1)->m_ww);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_wh_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_wh_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_wh_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_wh_set" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); if (arg1) (arg1)->m_wh = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_wh_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_wh_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (unsigned int) ((arg1)->m_wh);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_proj_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::mat4f *arg2 = (inlib::mat4f *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_proj_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_proj_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__mat4f, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_m_proj_set" "', argument " "2"" of type '" "inlib::mat4f *""'");  }
   arg2 = reinterpret_cast< inlib::mat4f * >(argp2); if (arg1) (arg1)->m_proj = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_proj_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::mat4f *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_proj_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::mat4f *)& ((arg1)->m_proj);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_model_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::mat4f *arg2 = (inlib::mat4f *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_model_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_model_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__mat4f, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_m_model_set" "', argument " "2"" of type '" "inlib::mat4f *""'");  }
   arg2 = reinterpret_cast< inlib::mat4f * >(argp2); if (arg1) (arg1)->m_model = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_model_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::mat4f *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_model_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::mat4f *)& ((arg1)->m_model);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_DEPTH_TEST_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_GL_DEPTH_TEST_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_DEPTH_TEST_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_GL_DEPTH_TEST_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_GL_DEPTH_TEST = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_DEPTH_TEST_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_DEPTH_TEST_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_GL_DEPTH_TEST);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_LIGHTING_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_GL_LIGHTING_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_LIGHTING_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_GL_LIGHTING_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_GL_LIGHTING = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_LIGHTING_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_LIGHTING_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_GL_LIGHTING);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_CULL_FACE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_GL_CULL_FACE_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_CULL_FACE_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_GL_CULL_FACE_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_GL_CULL_FACE = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_CULL_FACE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_CULL_FACE_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_GL_CULL_FACE);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_POLYGON_OFFSET_FILL_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  bool val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_GL_POLYGON_OFFSET_FILL_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_POLYGON_OFFSET_FILL_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_GL_POLYGON_OFFSET_FILL_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_GL_POLYGON_OFFSET_FILL = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_POLYGON_OFFSET_FILL_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_POLYGON_OFFSET_FILL_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_GL_POLYGON_OFFSET_FILL);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_TEXTURE_2D_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_GL_TEXTURE_2D_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_TEXTURE_2D_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_GL_TEXTURE_2D_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_GL_TEXTURE_2D = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_GL_TEXTURE_2D_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_GL_TEXTURE_2D_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_GL_TEXTURE_2D);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_use_vbo_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_use_vbo_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_use_vbo_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_use_vbo_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_use_vbo = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_use_vbo_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_use_vbo_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_use_vbo);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_winding_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::sg::winding_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_winding_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_winding_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_winding_set" "', argument " "2"" of type '" "inlib::sg::winding_type""'"); }
    arg2 = static_cast< inlib::sg::winding_type >(val2); if (arg1) (arg1)->m_winding = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_winding_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::winding_type result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_winding_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::sg::winding_type) ((arg1)->m_winding);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::colorf *arg2 = (inlib::colorf *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_color_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__colorf, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_m_color_set" "', argument " "2"" of type '" "inlib::colorf *""'");  }
   arg2 = reinterpret_cast< inlib::colorf * >(argp2); if (arg1) (arg1)->m_color = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::colorf *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_color_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::colorf *)& ((arg1)->m_color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__colorf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_light_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_light_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_light_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_light_set" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); if (arg1) (arg1)->m_light = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_light_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_light_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (unsigned int) ((arg1)->m_light);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_line_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_line_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_line_width_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_line_width_set" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); if (arg1) (arg1)->m_line_width = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_line_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_line_width_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (float) ((arg1)->m_line_width);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_line_pattern_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; unsigned short arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned short val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_line_pattern_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_line_pattern_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_line_pattern_set" "', argument " "2"" of type '" "unsigned short""'"); }
    arg2 = static_cast< unsigned short >(val2); if (arg1) (arg1)->m_line_pattern = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_line_pattern_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned short result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_line_pattern_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (unsigned short) ((arg1)->m_line_pattern);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_point_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_point_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_point_size_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_point_size_set" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); if (arg1) (arg1)->m_point_size = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_point_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_point_size_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (float) ((arg1)->m_point_size);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_ortho_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_camera_ortho_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_ortho_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_camera_ortho_set" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); if (arg1) (arg1)->m_camera_ortho = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_ortho_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_ortho_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (bool) ((arg1)->m_camera_ortho);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_znear_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_camera_znear_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_znear_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_camera_znear_set" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); if (arg1) (arg1)->m_camera_znear = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_znear_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_znear_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (float) ((arg1)->m_camera_znear);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_zfar_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; if (!SWIG_Python_UnpackTuple(args, "state_m_camera_zfar_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_zfar_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "state_m_camera_zfar_set" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); if (arg1) (arg1)->m_camera_zfar = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_zfar_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; float result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_zfar_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (float) ((arg1)->m_camera_zfar);
  resultobj = SWIG_From_float(static_cast< float >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_position_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::vec3f *arg2 = (inlib::vec3f *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_camera_position_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_position_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__vec3f, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_m_camera_position_set" "', argument " "2"" of type '" "inlib::vec3f *""'");  }
   arg2 = reinterpret_cast< inlib::vec3f * >(argp2); if (arg1) (arg1)->m_camera_position = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_position_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; inlib::vec3f *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_position_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::vec3f *)& ((arg1)->m_camera_position);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec3f, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_orientation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::rotf *arg2 = (inlib::rotf *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_camera_orientation_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_orientation_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__rotf, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_m_camera_orientation_set" "', argument " "2"" of type '" "inlib::rotf *""'");  }
   arg2 = reinterpret_cast< inlib::rotf * >(argp2); if (arg1) (arg1)->m_camera_orientation = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_orientation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; inlib::rotf *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_orientation_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::rotf *)& ((arg1)->m_camera_orientation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__rotf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_lrbt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; inlib::vec4f *arg2 = (inlib::vec4f *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "state_m_camera_lrbt_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_lrbt_set" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__vec4f, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_m_camera_lrbt_set" "', argument " "2"" of type '" "inlib::vec4f *""'");  }
   arg2 = reinterpret_cast< inlib::vec4f * >(argp2); if (arg1) (arg1)->m_camera_lrbt = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_state_m_camera_lrbt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::state *arg1 = (inlib::sg::state *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::vec4f *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__state, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_m_camera_lrbt_get" "', argument " "1"" of type '" "inlib::sg::state *""'");  }
   arg1 = reinterpret_cast< inlib::sg::state * >(argp1); result = (inlib::vec4f *)& ((arg1)->m_camera_lrbt);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__vec4f, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *state_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__state, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *state_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_states(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int arg1 ; unsigned int arg2 ; unsigned int val1 ; int ecode1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  PyObject *swig_obj[2] ; inlib::sg::states *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "new_states", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_states" "', argument " "1"" of type '" "unsigned int""'"); }  
  arg1 = static_cast< unsigned int >(val1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_states" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); result = (inlib::sg::states *)new inlib::sg::states(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__states, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_states(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_states" "', argument " "1"" of type '" "inlib::sg::states *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_states_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::state *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "states_state" "', argument " "1"" of type '" "inlib::sg::states *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1); result = (inlib::sg::state *) &(arg1)->state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_states_pop_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "states_pop_state" "', argument " "1"" of type '" "inlib::sg::states *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1); (arg1)->pop_state(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_states_push_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "states_push_state" "', argument " "1"" of type '" "inlib::sg::states *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1); (arg1)->push_state(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_states_save_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; inlib::sg::state *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "states_save_state", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "states_save_state" "', argument " "1"" of type '" "inlib::sg::states *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__state,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "states_save_state" "', argument " "2"" of type '" "inlib::sg::state const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "states_save_state" "', argument " "2"" of type '" "inlib::sg::state const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::state * >(argp2); (arg1)->save_state((inlib::sg::state const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_states_saved_state__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::state *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "states_saved_state" "', argument " "1"" of type '" "inlib::sg::states const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1);
  result = (inlib::sg::state *) &((inlib::sg::states const *)arg1)->saved_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_states_saved_state__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::states *arg1 = (inlib::sg::states *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::state *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__states, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "states_saved_state" "', argument " "1"" of type '" "inlib::sg::states *""'");  }
   arg1 = reinterpret_cast< inlib::sg::states * >(argp1); result = (inlib::sg::state *) &(arg1)->saved_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_states_saved_state(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "states_saved_state", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__states, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_states_saved_state__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__states, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_states_saved_state__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'states_saved_state'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::states::saved_state() const\n" "    inlib::sg::states::saved_state()\n");
  return 0; }
SWIGINTERN PyObject *states_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__states, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *states_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_matrix_action_load_proj_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; inlib::mat4f *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "matrix_action_load_proj_matrix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_load_proj_matrix" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__mat4f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "matrix_action_load_proj_matrix" "', argument " "2"" of type '" "inlib::mat4f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_load_proj_matrix" "', argument " "2"" of type '" "inlib::mat4f const &""'"); }
   arg2 = reinterpret_cast< inlib::mat4f * >(argp2); (arg1)->load_proj_matrix((inlib::mat4f const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_load_model_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; inlib::mat4f *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "matrix_action_load_model_matrix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_load_model_matrix" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__mat4f,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "matrix_action_load_model_matrix" "', argument " "2"" of type '" "inlib::mat4f const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_load_model_matrix" "', argument " "2"" of type '" "inlib::mat4f const &""'"); }
   arg2 = reinterpret_cast< inlib::mat4f * >(argp2); (arg1)->load_model_matrix((inlib::mat4f const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_matrix_action__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; inlib::sg::matrix_action *result = 0 ;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_matrix_action" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_matrix_action" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_matrix_action" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_matrix_action" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (inlib::sg::matrix_action *)new inlib::sg::matrix_action(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__matrix_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_matrix_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_matrix_action" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_matrix_action__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::matrix_action *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__matrix_action,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_matrix_action" "', argument " "1"" of type '" "inlib::sg::matrix_action const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_matrix_action" "', argument " "1"" of type '" "inlib::sg::matrix_action const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1);
  result = (inlib::sg::matrix_action *)new inlib::sg::matrix_action((inlib::sg::matrix_action const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__matrix_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_matrix_action(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_matrix_action", 0, 3, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__matrix_action, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_matrix_action__SWIG_1(self, argc, argv);}  }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_new_matrix_action__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_matrix_action'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::matrix_action::matrix_action(std::ostream &,unsigned int,unsigned int)\n"
  "    inlib::sg::matrix_action::matrix_action(inlib::sg::matrix_action const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_matrix_action_push_matrices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_push_matrices" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); (arg1)->push_matrices(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_pop_matrices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_pop_matrices" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); (arg1)->pop_matrices(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_projection_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; inlib::mat4f *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_projection_matrix" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); result = (inlib::mat4f *) &(arg1)->projection_matrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_model_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::mat4f *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_model_matrix" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); result = (inlib::mat4f *) &(arg1)->model_matrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__mat4f, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_end" "', argument " "1"" of type '" "inlib::sg::matrix_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); result = (bool)((inlib::sg::matrix_action const *)arg1)->end();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_cur(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_cur" "', argument " "1"" of type '" "inlib::sg::matrix_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); result = (int)((inlib::sg::matrix_action const *)arg1)->cur();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_project_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "matrix_action_project_point", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_project_point" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "matrix_action_project_point" "', argument " "2"" of type '" "float &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_project_point" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "matrix_action_project_point" "', argument " "3"" of type '" "float &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_project_point" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "matrix_action_project_point" "', argument " "4"" of type '" "float &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_project_point" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "matrix_action_project_point" "', argument " "5"" of type '" "float &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_project_point" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); result = (bool)(arg1)->project_point(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_model_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ; float *arg4 = 0 ;
  float *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ;
  if (!SWIG_Python_UnpackTuple(args, "matrix_action_model_point", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_model_point" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "matrix_action_model_point" "', argument " "2"" of type '" "float &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_model_point" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "matrix_action_model_point" "', argument " "3"" of type '" "float &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_model_point" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "matrix_action_model_point" "', argument " "4"" of type '" "float &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_model_point" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "matrix_action_model_point" "', argument " "5"" of type '" "float &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_model_point" "', argument " "5"" of type '" "float &""'"); }
   arg5 = reinterpret_cast< float * >(argp5); (arg1)->model_point(*arg2,*arg3,*arg4,*arg5); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_projected_origin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; float *arg2 = 0 ; float *arg3 = 0 ;
  float *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "matrix_action_projected_origin", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_projected_origin" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "matrix_action_projected_origin" "', argument " "2"" of type '" "float &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_projected_origin" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "matrix_action_projected_origin" "', argument " "3"" of type '" "float &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_projected_origin" "', argument " "3"" of type '" "float &""'"); }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "matrix_action_projected_origin" "', argument " "4"" of type '" "float &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "matrix_action_projected_origin" "', argument " "4"" of type '" "float &""'"); }
   arg4 = reinterpret_cast< float * >(argp4); (arg1)->projected_origin(*arg2,*arg3,*arg4); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_matrices_to_identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_matrices_to_identity" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); (arg1)->matrices_to_identity(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_matrix_action_matrices_from_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::matrix_action *arg1 = (inlib::sg::matrix_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__matrix_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "matrix_action_matrices_from_state" "', argument " "1"" of type '" "inlib::sg::matrix_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::matrix_action * >(argp1); (arg1)->matrices_from_state(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *matrix_action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__matrix_action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *matrix_action_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_points(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "points", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::points(); resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_lines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "lines", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::lines(); resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_loop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "line_loop", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::line_loop();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_strip(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "line_strip", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::line_strip();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_triangles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "triangles", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::triangles();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_triangle_strip(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "triangle_strip", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::triangle_strip();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_triangle_fan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t result; if (!SWIG_Python_UnpackTuple(args, "triangle_fan", 0, 0, 0)) SWIG_fail;
  result = (inlib::gl::mode_t)inlib::gl::triangle_fan();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_is_line(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::gl::mode_t arg1 ; unsigned char val1 ; int ecode1 = 0 ; PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail;
  swig_obj[0] = args; ecode1 = SWIG_AsVal_unsigned_SS_char(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "is_line" "', argument " "1"" of type '" "inlib::gl::mode_t""'"); }
    arg1 = static_cast< inlib::gl::mode_t >(val1); result = (bool)inlib::gl::is_line(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_primitive_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_primitive_visitor" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_one_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; float arg2 ; float arg3 ;
  float arg4 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ;
  int ecode4 = 0 ; PyObject *swig_obj[4] ;
  if (!SWIG_Python_UnpackTuple(args, "primitive_visitor_add_one_point", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_one_point" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_one_point" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_one_point" "', argument " "3"" of type '" "float""'"); }
    arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_one_point" "', argument " "4"" of type '" "float""'"); }
    arg4 = static_cast< float >(val4); (arg1)->add_one_point(arg2,arg3,arg4); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_triangle_fan(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_triangle_fan(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_triangle_strip(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_triangle_strip(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangles" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_triangles(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_triangles(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_triangles" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_triangles" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_triangles(arg2,(float const *)arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_triangles" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4);
  result = (bool)(arg1)->add_triangles(arg2,(float const *)arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangles", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_triangles__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_primitive_visitor_add_triangles__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_triangles__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_triangles__SWIG_2(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_triangles'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_triangles(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangles(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_triangles(unsigned int,float const *,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangles(unsigned int,float const *,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_line_strip" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_line_strip(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_line_strip(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_line_strip" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_line_strip" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_line_strip(arg2,(float const *)arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_line_strip" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4);
  result = (bool)(arg1)->add_line_strip(arg2,(float const *)arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_loop" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_loop" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_loop" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_line_loop" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_line_loop(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_loop" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_loop" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_loop" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_line_loop(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_loop" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_loop" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_loop" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_line_loop" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_line_loop" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_line_loop(arg2,(float const *)arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_loop" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_loop" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_loop" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_line_loop" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4);
  result = (bool)(arg1)->add_line_loop(arg2,(float const *)arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_line_loop", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_line_loop__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_primitive_visitor_add_line_loop__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_line_loop__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_line_loop__SWIG_2(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_line_loop'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_line_loop(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_loop(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_line_loop(unsigned int,float const *,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_loop(unsigned int,float const *,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_lines" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_lines" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_lines" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_lines(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_lines" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_lines" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_lines(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_points" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_points" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_points" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_points(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_points" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_points" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_points(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_points" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_points" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_points" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_points" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_points(arg2,(float const *)arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_points" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_points" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_points" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); result = (bool)(arg1)->add_points(arg2,(float const *)arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ;
  bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_primitive" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_primitive(arg2,arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ; int ecode2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); result = (bool)(arg1)->add_primitive(arg2,arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; float *arg5 = (float *) 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned char val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; bool val6 ; int ecode6 = 0 ; bool result; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "primitive_visitor_add_primitive" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5); ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "primitive_visitor_add_primitive" "', argument " "6"" of type '" "bool""'"); }
    arg6 = static_cast< bool >(val6);
  result = (bool)(arg1)->add_primitive(arg2,arg3,(float const *)arg4,(float const *)arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; float *arg5 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned char val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "primitive_visitor_add_primitive" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5);
  result = (bool)(arg1)->add_primitive(arg2,arg3,(float const *)arg4,(float const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_triangle_fan_xy(arg2,(float const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_triangle_fan_xy(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan_xy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_triangle_fan_xy(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangle_fan_xy", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_triangle_fan_xy__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_triangle_fan_xy__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_triangle_fan_xy__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_triangle_fan_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::primitive_visitor::add_triangle_fan_xy(unsigned int,float const *,bool,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangle_fan_xy(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangle_fan_xy(unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_triangle_strip_xy(arg2,(float const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_triangle_strip_xy(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip_xy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_triangle_strip_xy(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangle_strip_xy", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_triangle_strip_xy__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_triangle_strip_xy__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_triangle_strip_xy__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_triangle_strip_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::primitive_visitor::add_triangle_strip_xy(unsigned int,float const *,bool,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangle_strip_xy(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangle_strip_xy(unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_triangles_xy(arg2,(float const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_triangles_xy(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles_xy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangles_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_triangles_xy(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangles_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangles_xy", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_triangles_xy__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_triangles_xy__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_triangles_xy__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_triangles_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::primitive_visitor::add_triangles_xy(unsigned int,float const *,bool,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangles_xy(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangles_xy(unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_line_loop_xy(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_loop_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_line_loop_xy(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_loop_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_line_loop_xy", 0, 4, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_line_loop_xy__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_line_loop_xy__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_line_loop_xy'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_line_loop_xy(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_loop_xy(unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_line_strip_xy(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_line_strip_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_line_strip_xy(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_line_strip_xy", 0, 4, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_line_strip_xy__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_line_strip_xy__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_line_strip_xy'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_line_strip_xy(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_strip_xy(unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_lines_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_lines_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_lines_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (bool)(arg1)->add_lines_xy(arg2,(float const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_lines_xy" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_lines_xy" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); result = (bool)(arg1)->add_lines_xy(arg2,(float const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; bool arg5 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ;
  bool val6 ; int ecode6 = 0 ; bool result; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "6"" of type '" "bool""'"); }
    arg6 = static_cast< bool >(val6); result = (bool)(arg1)->add_primitive_xy(arg2,arg3,(float const *)arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ;
  bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add_primitive_xy(arg2,arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive_xy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ; int ecode2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_primitive_xy" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); result = (bool)(arg1)->add_primitive_xy(arg2,arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[7] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_primitive_xy", 0, 6, argv))) SWIG_fail; --argc;
  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_primitive_visitor_add_primitive_xy__SWIG_2(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_primitive_xy__SWIG_1(self, argc, argv);}  }  }  }  }  }  if (argc == 6) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_primitive_visitor_add_primitive_xy__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_primitive_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::primitive_visitor::add_primitive_xy(inlib::gl::mode_t,unsigned int,float const *,bool,bool)\n"
  "    inlib::sg::primitive_visitor::add_primitive_xy(inlib::gl::mode_t,unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_primitive_xy(inlib::gl::mode_t,unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_primitive" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->add_primitive(arg2,(std::vector< float,std::allocator< float > > const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; inlib::gl::mode_t arg2 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned char val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_primitive" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_primitive" "', argument " "2"" of type '" "inlib::gl::mode_t""'"); }
    arg2 = static_cast< inlib::gl::mode_t >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_primitive" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  result = (bool)(arg1)->add_primitive(arg2,(std::vector< float,std::allocator< float > > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_primitive(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[7] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_primitive", 0, 6, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_primitive_visitor_add_primitive__SWIG_5(self, argc, argv);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_primitive__SWIG_4(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_primitive_visitor_add_primitive__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
              return _wrap_primitive_visitor_add_primitive__SWIG_3(self, argc, argv);}  }  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_primitive__SWIG_0(self, argc, argv);}  }  }  }  }  }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_primitive_visitor_add_primitive__SWIG_2(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_primitive'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::primitive_visitor::add_primitive(inlib::gl::mode_t,unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_primitive(inlib::gl::mode_t,unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_primitive(inlib::gl::mode_t,unsigned int,float const *,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_primitive(inlib::gl::mode_t,unsigned int,float const *,float const *)\n"
  "    inlib::sg::primitive_visitor::add_primitive(inlib::gl::mode_t,std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::primitive_visitor::add_primitive(inlib::gl::mode_t,std::vector< float,std::allocator< float > > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; bool arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool val3 ; int ecode3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_line_strip" "', argument " "3"" of type '" "bool""'"); }
    arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->add_line_strip((std::vector< float,std::allocator< float > > const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_line_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_line_strip" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  result = (bool)(arg1)->add_line_strip((std::vector< float,std::allocator< float > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_line_strip(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_line_strip", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_primitive_visitor_add_line_strip__SWIG_5(self, argc, argv);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_primitive_visitor_add_line_strip__SWIG_4(self, argc, argv);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_primitive_visitor_add_line_strip__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_primitive_visitor_add_line_strip__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_line_strip__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_line_strip__SWIG_2(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_line_strip'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_line_strip(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_strip(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_line_strip(unsigned int,float const *,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_strip(unsigned int,float const *,float const *)\n"
  "    inlib::sg::primitive_visitor::add_line_strip(std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::primitive_visitor::add_line_strip(std::vector< float,std::allocator< float > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines_xy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; bool arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool val3 ; int ecode3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_lines_xy" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_lines_xy" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_lines_xy" "', argument " "3"" of type '" "bool""'"); }
    arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->add_lines_xy((std::vector< float,std::allocator< float > > const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines_xy__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines_xy" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_lines_xy" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_lines_xy" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  result = (bool)(arg1)->add_lines_xy((std::vector< float,std::allocator< float > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_lines_xy", 0, 4, argv))) SWIG_fail; --argc; if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_primitive_visitor_add_lines_xy__SWIG_3(self, argc, argv);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_primitive_visitor_add_lines_xy__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_primitive_visitor_add_lines_xy__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_lines_xy__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_lines_xy'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_lines_xy(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_lines_xy(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_lines_xy(std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::primitive_visitor::add_lines_xy(std::vector< float,std::allocator< float > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; bool arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool val3 ; int ecode3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_lines" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_lines" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_lines" "', argument " "3"" of type '" "bool""'"); }
    arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->add_lines((std::vector< float,std::allocator< float > > const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_lines" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_lines" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_lines" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  result = (bool)(arg1)->add_lines((std::vector< float,std::allocator< float > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_lines(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = {
    0} ; if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_lines", 0, 4, argv))) SWIG_fail; --argc;
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_primitive_visitor_add_lines__SWIG_3(self, argc, argv);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_primitive_visitor_add_lines__SWIG_2(self, argc, argv);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_primitive_visitor_add_lines__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_lines__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_lines'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_lines(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_lines(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_lines(std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::primitive_visitor::add_lines(std::vector< float,std::allocator< float > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; bool arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; bool val3 ; int ecode3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_points" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "primitive_visitor_add_points" "', argument " "3"" of type '" "bool""'"); }
    arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->add_points((std::vector< float,std::allocator< float > > const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_points" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "primitive_visitor_add_points" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  result = (bool)(arg1)->add_points((std::vector< float,std::allocator< float > > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_points(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = {
    0} ; if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_points", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_primitive_visitor_add_points__SWIG_5(self, argc, argv);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_primitive_visitor_add_points__SWIG_4(self, argc, argv);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_primitive_visitor_add_points__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_primitive_visitor_add_points__SWIG_3(self, argc, argv);}  }  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_points__SWIG_0(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_primitive_visitor_add_points__SWIG_2(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_points'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_points(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_points(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_points(unsigned int,float const *,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_points(unsigned int,float const *,float const *)\n"
  "    inlib::sg::primitive_visitor::add_points(std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::primitive_visitor::add_points(std::vector< float,std::allocator< float > > const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_triangle_fan" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4);
  result = (bool)(arg1)->add_triangle_fan(arg2,(float const *)arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangle_fan", 0, 4, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_triangle_fan__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_primitive_visitor_add_triangle_fan__SWIG_2(self, argc, argv);}  }  }  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_triangle_fan__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_triangle_fan'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_triangle_fan(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangle_fan(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_triangle_fan(unsigned int,float const *,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_fan_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; PyObject *swig_obj[5] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangle_fan_texture", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_fan_texture" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_fan_texture" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_fan_texture" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_fan_texture" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "primitive_visitor_add_triangle_fan_texture" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5);
  result = (bool)(arg1)->add_triangle_fan_texture(arg2,(float const *)arg3,arg4,(float const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "primitive_visitor_add_triangle_strip" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4);
  result = (bool)(arg1)->add_triangle_strip(arg2,(float const *)arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangle_strip", 0, 4, argv))) SWIG_fail; --argc;
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_primitive_visitor_add_triangle_strip__SWIG_1(self, argc, argv);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { return _wrap_primitive_visitor_add_triangle_strip__SWIG_2(self, argc, argv);}  }  }  }  }  if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__primitive_visitor, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_primitive_visitor_add_triangle_strip__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'primitive_visitor_add_triangle_strip'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::primitive_visitor::add_triangle_strip(unsigned int,float const *,bool)\n"
  "    inlib::sg::primitive_visitor::add_triangle_strip(unsigned int,float const *)\n"
  "    inlib::sg::primitive_visitor::add_triangle_strip(unsigned int,float const *,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_primitive_visitor_add_triangle_strip_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::primitive_visitor *arg1 = (inlib::sg::primitive_visitor *) 0 ; unsigned int arg2 ;
  float *arg3 = (float *) 0 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; PyObject *swig_obj[5] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "primitive_visitor_add_triangle_strip_texture", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__primitive_visitor, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "primitive_visitor_add_triangle_strip_texture" "', argument " "1"" of type '" "inlib::sg::primitive_visitor *""'");  }
   arg1 = reinterpret_cast< inlib::sg::primitive_visitor * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "primitive_visitor_add_triangle_strip_texture" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "primitive_visitor_add_triangle_strip_texture" "', argument " "3"" of type '" "float const *""'");  }
   arg3 = reinterpret_cast< float * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "primitive_visitor_add_triangle_strip_texture" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "primitive_visitor_add_triangle_strip_texture" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5);
  result = (bool)(arg1)->add_triangle_strip_texture(arg2,(float const *)arg3,arg4,(float const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *primitive_visitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__primitive_visitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_write_action_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::write_action *arg1 = (inlib::sg::write_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::io::iwbuf *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__write_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_action_buffer" "', argument " "1"" of type '" "inlib::sg::write_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::write_action * >(argp1); result = (inlib::io::iwbuf *) &(arg1)->buffer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__io__iwbuf, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_write_action_beg_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::write_action *arg1 = (inlib::sg::write_action *) 0 ; inlib::sg::node *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "write_action_beg_node", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__write_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_action_beg_node" "', argument " "1"" of type '" "inlib::sg::write_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::write_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_action_beg_node" "', argument " "2"" of type '" "inlib::sg::node const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_action_beg_node" "', argument " "2"" of type '" "inlib::sg::node const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); result = (bool)(arg1)->beg_node((inlib::sg::node const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_write_action_end_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::write_action *arg1 = (inlib::sg::write_action *) 0 ; inlib::sg::node *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "write_action_end_node", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__write_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_action_end_node" "', argument " "1"" of type '" "inlib::sg::write_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::write_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "write_action_end_node" "', argument " "2"" of type '" "inlib::sg::node const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "write_action_end_node" "', argument " "2"" of type '" "inlib::sg::node const &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); result = (bool)(arg1)->end_node((inlib::sg::node const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_write_action_switch_do_all_children(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::write_action *arg1 = (inlib::sg::write_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__write_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "write_action_switch_do_all_children" "', argument " "1"" of type '" "inlib::sg::write_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::write_action * >(argp1); result = (bool)(arg1)->switch_do_all_children();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_write_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::write_action *arg1 = (inlib::sg::write_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__write_action, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_write_action" "', argument " "1"" of type '" "inlib::sg::write_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::write_action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *write_action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__write_action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_node_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "node_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::node::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  if (!SWIG_Python_UnpackTuple(args, "node_check_class_name", 0, 0, 0)) SWIG_fail; inlib::sg::node::check_class_name();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "node_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_cast" "', argument " "1"" of type '" "inlib::sg::node const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::node const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_node_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_copy" "', argument " "1"" of type '" "inlib::sg::node const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1); result = (inlib::sg::node *)((inlib::sg::node const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_node_s_cls(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_s_cls" "', argument " "1"" of type '" "inlib::sg::node const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1); result = (std::string *) &((inlib::sg::node const *)arg1)->s_cls();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_node_fields(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_node_fields" "', argument " "1"" of type '" "inlib::sg::node const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  result = (std::vector< std::string,std::allocator< std::string > > *) &((inlib::sg::node const *)arg1)->node_fields();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_render(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; inlib::sg::render_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "node_render", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_render" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__render_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_render" "', argument " "2"" of type '" "inlib::sg::render_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_render" "', argument " "2"" of type '" "inlib::sg::render_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::render_action * >(argp2); (arg1)->render(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_pick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; inlib::sg::pick_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "node_pick", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_pick" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__pick_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_pick" "', argument " "2"" of type '" "inlib::sg::pick_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_pick" "', argument " "2"" of type '" "inlib::sg::pick_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::pick_action * >(argp2); (arg1)->pick(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_bbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; inlib::sg::bbox_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "node_bbox", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_bbox" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bbox_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_bbox" "', argument " "2"" of type '" "inlib::sg::bbox_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_bbox" "', argument " "2"" of type '" "inlib::sg::bbox_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bbox_action * >(argp2); (arg1)->bbox(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_search(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; inlib::sg::search_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "node_search", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_search" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__search_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_search" "', argument " "2"" of type '" "inlib::sg::search_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_search" "', argument " "2"" of type '" "inlib::sg::search_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::search_action * >(argp2); (arg1)->search(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; inlib::sg::write_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "node_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_write" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__write_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_write" "', argument " "2"" of type '" "inlib::sg::write_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_write" "', argument " "2"" of type '" "inlib::sg::write_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::write_action * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; inlib::sg::event_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "node_event", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_event" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__event_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "node_event" "', argument " "2"" of type '" "inlib::sg::event_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "node_event" "', argument " "2"" of type '" "inlib::sg::event_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::event_action * >(argp2); (arg1)->event(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_node" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_node_reset_touched(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; if (!args) SWIG_fail;
  swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_reset_touched" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1); (arg1)->reset_touched(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_fields__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< inlib::sg::field *,std::allocator< inlib::sg::field * > > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_fields" "', argument " "1"" of type '" "inlib::sg::node *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  result = (std::vector< inlib::sg::field *,std::allocator< inlib::sg::field * > > *) &(arg1)->fields();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_fields__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::node *arg1 = (inlib::sg::node *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< inlib::sg::field *,std::allocator< inlib::sg::field * > > *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__node, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "node_fields" "', argument " "1"" of type '" "inlib::sg::node const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  result = (std::vector< inlib::sg::field *,std::allocator< inlib::sg::field * > > *) &((inlib::sg::node const *)arg1)->fields();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_node_fields(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "node_fields", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__node, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_node_fields__SWIG_0(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__node, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_node_fields__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'node_fields'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::node::fields()\n" "    inlib::sg::node::fields() const\n"); return 0; }
SWIGINTERN PyObject *node_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__node, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_style_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *arg2 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_color_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_color_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp2); if (arg1) (arg1)->color = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_color_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_vec< inlib::colorf,float > *)& ((arg1)->color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_highlight_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *arg2 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_highlight_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_highlight_color_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_highlight_color_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp2); if (arg1) (arg1)->highlight_color = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_highlight_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_highlight_color_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)& ((arg1)->highlight_color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_back_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *arg2 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_back_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_back_color_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_back_color_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp2); if (arg1) (arg1)->back_color = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_back_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_back_color_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)& ((arg1)->back_color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_line_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_line_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_line_width_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_line_width_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->line_width = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_line_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_line_width_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->line_width);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_marker_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_marker_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_marker_size_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_marker_size_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->marker_size = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_marker_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_marker_size_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->marker_size);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_font_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_font_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_font_size_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_font_size_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->font_size = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_font_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_font_size_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->font_size);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_line_pattern_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf< inlib::sg::lpat > *arg2 = (inlib::sg::sf< inlib::sg::lpat > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_line_pattern_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_line_pattern_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_line_pattern_set" "', argument " "2"" of type '" "inlib::sg::sf< inlib::sg::lpat > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< inlib::sg::lpat > * >(argp2); if (arg1) (arg1)->line_pattern = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_line_pattern_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< inlib::sg::lpat > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_line_pattern_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< inlib::sg::lpat > *)& ((arg1)->line_pattern);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_marker_style_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::marker_style > *arg2 = (inlib::sg::sf_enum< inlib::sg::marker_style > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_marker_style_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_marker_style_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__marker_style_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_marker_style_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::marker_style > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::marker_style > * >(argp2); if (arg1) (arg1)->marker_style = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_marker_style_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::marker_style > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_marker_style_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::marker_style > *)& ((arg1)->marker_style);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__marker_style_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_area_style_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::area_style > *arg2 = (inlib::sg::sf_enum< inlib::sg::area_style > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_area_style_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_area_style_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__area_style_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_area_style_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::area_style > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::area_style > * >(argp2); if (arg1) (arg1)->area_style = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_area_style_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::area_style > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_area_style_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::area_style > *)& ((arg1)->area_style);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__area_style_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_modeling_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_modeling_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_modeling_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_modeling_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->modeling = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_modeling_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_modeling_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->modeling);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_light_model_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_light_model_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_light_model_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_light_model_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->light_model = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_light_model_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_light_model_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->light_model);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_tick_modeling_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_tick_modeling_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_tick_modeling_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_tick_modeling_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->tick_modeling = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_tick_modeling_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_tick_modeling_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->tick_modeling);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_encoding_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_encoding_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_encoding_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_encoding_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->encoding = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_encoding_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_encoding_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->encoding);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_smoothing_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_smoothing_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_smoothing_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_smoothing_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->smoothing = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_smoothing_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_smoothing_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->smoothing);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_hinting_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_hinting_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_hinting_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_hinting_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->hinting = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_hinting_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_hinting_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->hinting);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_cut_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_cut_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_cut_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_cut_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->cut = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_cut_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_cut_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->cut);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_painting_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::painting_policy > *arg2 = (inlib::sg::sf_enum< inlib::sg::painting_policy > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_painting_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_painting_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_painting_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::painting_policy > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::painting_policy > * >(argp2); if (arg1) (arg1)->painting = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_painting_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::painting_policy > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_painting_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::painting_policy > *)& ((arg1)->painting);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_hatching_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::hatching_policy > *arg2 = (inlib::sg::sf_enum< inlib::sg::hatching_policy > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_hatching_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_hatching_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_hatching_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::hatching_policy > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::hatching_policy > * >(argp2); if (arg1) (arg1)->hatching = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_hatching_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::hatching_policy > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_hatching_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::hatching_policy > *)& ((arg1)->hatching);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_projection_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::projection_type > *arg2 = (inlib::sg::sf_enum< inlib::sg::projection_type > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_projection_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_projection_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__projection_type_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_projection_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::projection_type > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::projection_type > * >(argp2); if (arg1) (arg1)->projection = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_projection_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::projection_type > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_projection_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::projection_type > *)& ((arg1)->projection);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__projection_type_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_font_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_font_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_font_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_font_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->font = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_font_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_font_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->font);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_multi_node_limit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< int > *arg2 = (inlib::sg::sf< int > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_multi_node_limit_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_multi_node_limit_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_int_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_multi_node_limit_set" "', argument " "2"" of type '" "inlib::sg::sf< int > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< int > * >(argp2); if (arg1) (arg1)->multi_node_limit = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_multi_node_limit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< int > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_multi_node_limit_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< int > *)& ((arg1)->multi_node_limit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_int_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_divisions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< int > *arg2 = (inlib::sg::sf< int > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_divisions_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_divisions_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_int_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_divisions_set" "', argument " "2"" of type '" "inlib::sg::sf< int > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< int > * >(argp2); if (arg1) (arg1)->divisions = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_divisions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< int > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_divisions_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< int > *)& ((arg1)->divisions);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_int_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_rotation_steps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< unsigned int > *arg2 = (inlib::sg::sf< unsigned int > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_rotation_steps_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_rotation_steps_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_unsigned_int_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_rotation_steps_set" "', argument " "2"" of type '" "inlib::sg::sf< unsigned int > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< unsigned int > * >(argp2); if (arg1) (arg1)->rotation_steps = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_rotation_steps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< unsigned int > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_rotation_steps_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< unsigned int > *)& ((arg1)->rotation_steps);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_unsigned_int_t, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_spacing_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_spacing_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_spacing_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_spacing_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->spacing = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_spacing_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_spacing_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->spacing);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_angle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_angle_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_angle_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_angle_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->angle = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_angle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_angle_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->angle);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_scale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_scale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_scale_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_scale_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->scale = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_scale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_scale_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->scale);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_offset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_offset_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_offset_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_offset_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->offset = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_offset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_offset_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->offset);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_strip_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_strip_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_strip_width_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_strip_width_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->strip_width = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_strip_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_strip_width_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->strip_width);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_visible_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_visible_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_visible_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_visible_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->visible = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_visible_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_visible_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->visible);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_bar_offset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_bar_offset_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_bar_offset_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_bar_offset_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->bar_offset = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_bar_offset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_bar_offset_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->bar_offset);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_bar_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_bar_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_bar_width_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_bar_width_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->bar_width = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_bar_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_bar_width_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->bar_width);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_editable_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_editable_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_editable_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_editable_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->editable = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_editable_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_editable_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->editable);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_automated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_automated_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_automated_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_automated_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->automated = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_automated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_automated_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->automated);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_options_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_options_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_options_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_options_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->options = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_options_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_options_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->options);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_color_mapping_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_color_mapping_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_color_mapping_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_color_mapping_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->color_mapping = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_color_mapping_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_color_mapping_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->color_mapping);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_enforced_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_enforced_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_enforced_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_enforced_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->enforced = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_enforced_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_enforced_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->enforced);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_translation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ;
  inlib::sg::sf_vec< inlib::vec3f,float > *arg2 = (inlib::sg::sf_vec< inlib::vec3f,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "style_translation_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_translation_set" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_translation_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::vec3f,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::vec3f,float > * >(argp2); if (arg1) (arg1)->translation = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_translation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::vec3f,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_translation_get" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::vec3f,float > *)& ((arg1)->translation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_style_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_copy" "', argument " "1"" of type '" "inlib::sg::style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (inlib::sg::node *)((inlib::sg::style const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_style_s_cls(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_s_cls" "', argument " "1"" of type '" "inlib::sg::style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); result = (std::string *) &((inlib::sg::style const *)arg1)->s_cls();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::style *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::style *)new inlib::sg::style();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_style(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_style" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::style *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::style *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__style,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_style" "', argument " "1"" of type '" "inlib::sg::style const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_style" "', argument " "1"" of type '" "inlib::sg::style const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  result = (inlib::sg::style *)new inlib::sg::style((inlib::sg::style const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__style, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_style", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_style__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__style, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_style__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_style'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::style::style()\n"
  "    inlib::sg::style::style(inlib::sg::style const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_style_from_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::style *arg1 = (inlib::sg::style *) 0 ; std::ostream *arg2 = 0 ; inlib::sg::cmaps_t *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "style_from_string", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "style_from_string" "', argument " "1"" of type '" "inlib::sg::style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "style_from_string" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_from_string" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "style_from_string" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_from_string" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'"); }
   arg3 = reinterpret_cast< inlib::sg::cmaps_t * >(argp3); { std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "style_from_string" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "style_from_string" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  result = (bool)(arg1)->from_string(*arg2,(inlib::sg::cmaps_t const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail:
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *style_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__style, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *style_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_text_style_visible_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_visible_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_visible_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_visible_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->visible = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_visible_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_visible_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->visible);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *arg2 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_color_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_color_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp2); if (arg1) (arg1)->color = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_color_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)& ((arg1)->color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_back_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *arg2 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_back_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_back_color_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_back_color_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp2); if (arg1) (arg1)->back_color = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_back_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_back_color_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)& ((arg1)->back_color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_back_shadow_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_back_shadow_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_back_shadow_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_back_shadow_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->back_shadow = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_back_shadow_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_back_shadow_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->back_shadow);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_modeling_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_modeling_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_modeling_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_modeling_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->modeling = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_modeling_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_modeling_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->modeling);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_font_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_font_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_font_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_font_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->font = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_font_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_font_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->font);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_font_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_font_size_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_font_size_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_font_size_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->font_size = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_font_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_font_size_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->font_size);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_encoding_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf_string *arg2 = (inlib::sg::sf_string *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_encoding_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_encoding_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_encoding_set" "', argument " "2"" of type '" "inlib::sg::sf_string *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_string * >(argp2); if (arg1) (arg1)->encoding = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_encoding_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_encoding_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf_string *)& ((arg1)->encoding);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_string, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_smoothing_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_smoothing_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_smoothing_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_smoothing_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->smoothing = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_smoothing_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_smoothing_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->smoothing);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_hinting_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_hinting_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_hinting_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_hinting_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->hinting = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_hinting_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_hinting_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->hinting);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_hjust_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::hjust > *arg2 = (inlib::sg::sf_enum< inlib::sg::hjust > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_hjust_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_hjust_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__hjust_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_hjust_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::hjust > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::hjust > * >(argp2); if (arg1) (arg1)->hjust = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_hjust_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::hjust > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_hjust_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::hjust > *)& ((arg1)->hjust);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__hjust_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_vjust_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::vjust > *arg2 = (inlib::sg::sf_enum< inlib::sg::vjust > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_vjust_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_vjust_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__vjust_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_vjust_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::vjust > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::vjust > * >(argp2); if (arg1) (arg1)->vjust = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_vjust_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::vjust > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_vjust_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::vjust > *)& ((arg1)->vjust);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__vjust_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_scale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_scale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_scale_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_scale_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->scale = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_scale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_scale_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->scale);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_x_orientation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_vec< inlib::vec3f,float > *arg2 = (inlib::sg::sf_vec< inlib::vec3f,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_x_orientation_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_x_orientation_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_x_orientation_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::vec3f,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::vec3f,float > * >(argp2); if (arg1) (arg1)->x_orientation = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_x_orientation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; inlib::sg::sf_vec< inlib::vec3f,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_x_orientation_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::vec3f,float > *)& ((arg1)->x_orientation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_y_orientation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_vec< inlib::vec3f,float > *arg2 = (inlib::sg::sf_vec< inlib::vec3f,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_y_orientation_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_y_orientation_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_y_orientation_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::vec3f,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::vec3f,float > * >(argp2); if (arg1) (arg1)->y_orientation = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_y_orientation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; inlib::sg::sf_vec< inlib::vec3f,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_y_orientation_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::vec3f,float > *)& ((arg1)->y_orientation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_rotated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_rotated_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_rotated_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_rotated_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->rotated = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_rotated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_rotated_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->rotated);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_line_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_line_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_line_width_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_line_width_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->line_width = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_line_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_line_width_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->line_width);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_line_pattern_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf< inlib::sg::lpat > *arg2 = (inlib::sg::sf< inlib::sg::lpat > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_line_pattern_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_line_pattern_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_line_pattern_set" "', argument " "2"" of type '" "inlib::sg::sf< inlib::sg::lpat > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< inlib::sg::lpat > * >(argp2); if (arg1) (arg1)->line_pattern = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_line_pattern_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; inlib::sg::sf< inlib::sg::lpat > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_line_pattern_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf< inlib::sg::lpat > *)& ((arg1)->line_pattern);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_enforced_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_enforced_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_enforced_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_enforced_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->enforced = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_enforced_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_enforced_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->enforced);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_translation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_vec< inlib::vec3f,float > *arg2 = (inlib::sg::sf_vec< inlib::vec3f,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_translation_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_translation_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_translation_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::vec3f,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::vec3f,float > * >(argp2); if (arg1) (arg1)->translation = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_translation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::vec3f,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_translation_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::vec3f,float > *)& ((arg1)->translation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_front_face_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ;
  inlib::sg::sf_enum< inlib::sg::winding_type > *arg2 = (inlib::sg::sf_enum< inlib::sg::winding_type > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "text_style_front_face_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_front_face_set" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_front_face_set" "', argument " "2"" of type '" "inlib::sg::sf_enum< inlib::sg::winding_type > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_enum< inlib::sg::winding_type > * >(argp2); if (arg1) (arg1)->front_face = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_front_face_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_enum< inlib::sg::winding_type > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_front_face_get" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::sf_enum< inlib::sg::winding_type > *)& ((arg1)->front_face);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_text_style_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_copy" "', argument " "1"" of type '" "inlib::sg::text_style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::node *)((inlib::sg::text_style const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_text_style_s_cls(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_s_cls" "', argument " "1"" of type '" "inlib::sg::text_style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (std::string *) &((inlib::sg::text_style const *)arg1)->s_cls();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_text_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::text_style *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::text_style *)new inlib::sg::text_style();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__text_style, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_text_style(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_text_style" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_text_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::text_style *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::text_style *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__text_style,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_text_style" "', argument " "1"" of type '" "inlib::sg::text_style const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_text_style" "', argument " "1"" of type '" "inlib::sg::text_style const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  result = (inlib::sg::text_style *)new inlib::sg::text_style((inlib::sg::text_style const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__text_style, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_text_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_text_style", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_text_style__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__text_style, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_text_style__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_text_style'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::text_style::text_style()\n"
  "    inlib::sg::text_style::text_style(inlib::sg::text_style const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_text_style_from_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::text_style *arg1 = (inlib::sg::text_style *) 0 ; std::ostream *arg2 = 0 ; inlib::sg::cmaps_t *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "text_style_from_string", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__text_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "text_style_from_string" "', argument " "1"" of type '" "inlib::sg::text_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::text_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "text_style_from_string" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "text_style_from_string" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "text_style_from_string" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "text_style_from_string" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'"); }
   arg3 = reinterpret_cast< inlib::sg::cmaps_t * >(argp3); { std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "text_style_from_string" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "text_style_from_string" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  result = (bool)(arg1)->from_string(*arg2,(inlib::sg::cmaps_t const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail:
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *text_style_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__text_style, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *text_style_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_line_style_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "line_style_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::line_style::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "line_style_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::line_style::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "line_style_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_cast" "', argument " "1"" of type '" "inlib::sg::line_style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "line_style_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "line_style_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::line_style const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_line_style_visible_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; inlib::sg::sf< bool > *arg2 = (inlib::sg::sf< bool > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "line_style_visible_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_visible_set" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "line_style_visible_set" "', argument " "2"" of type '" "inlib::sg::sf< bool > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< bool > * >(argp2); if (arg1) (arg1)->visible = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_visible_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< bool > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_visible_get" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1); result = (inlib::sg::sf< bool > *)& ((arg1)->visible);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_bool_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_line_style_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ;
  inlib::sg::sf_vec< inlib::colorf,float > *arg2 = (inlib::sg::sf_vec< inlib::colorf,float > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "line_style_color_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_color_set" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "line_style_color_set" "', argument " "2"" of type '" "inlib::sg::sf_vec< inlib::colorf,float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf_vec< inlib::colorf,float > * >(argp2); if (arg1) (arg1)->color = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf_vec< inlib::colorf,float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_color_get" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  result = (inlib::sg::sf_vec< inlib::colorf,float > *)& ((arg1)->color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; inlib::sg::sf< float > *arg2 = (inlib::sg::sf< float > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "line_style_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_width_set" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "line_style_width_set" "', argument " "2"" of type '" "inlib::sg::sf< float > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< float > * >(argp2); if (arg1) (arg1)->width = *arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< float > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_width_get" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1); result = (inlib::sg::sf< float > *)& ((arg1)->width);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_float_t, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_line_style_pattern_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ;
  inlib::sg::sf< inlib::sg::lpat > *arg2 = (inlib::sg::sf< inlib::sg::lpat > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "line_style_pattern_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_pattern_set" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "line_style_pattern_set" "', argument " "2"" of type '" "inlib::sg::sf< inlib::sg::lpat > *""'");  }
   arg2 = reinterpret_cast< inlib::sg::sf< inlib::sg::lpat > * >(argp2); if (arg1) (arg1)->pattern = *arg2;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_pattern_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::sf< inlib::sg::lpat > *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_pattern_get" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1); result = (inlib::sg::sf< inlib::sg::lpat > *)& ((arg1)->pattern);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__sfT_unsigned_short_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_line_style_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_copy" "', argument " "1"" of type '" "inlib::sg::line_style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  result = (inlib::sg::node *)((inlib::sg::line_style const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_line_style_s_cls(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_s_cls" "', argument " "1"" of type '" "inlib::sg::line_style const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  result = (std::string *) &((inlib::sg::line_style const *)arg1)->s_cls();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_line_style__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::line_style *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::line_style *)new inlib::sg::line_style();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__line_style, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_line_style(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_line_style" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_line_style__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::line_style *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::line_style *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__line_style,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_line_style" "', argument " "1"" of type '" "inlib::sg::line_style const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_line_style" "', argument " "1"" of type '" "inlib::sg::line_style const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  result = (inlib::sg::line_style *)new inlib::sg::line_style((inlib::sg::line_style const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__line_style, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_line_style(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_line_style", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_line_style__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__line_style, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_line_style__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_line_style'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::line_style::line_style()\n"
  "    inlib::sg::line_style::line_style(inlib::sg::line_style const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_line_style_from_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::line_style *arg1 = (inlib::sg::line_style *) 0 ; std::ostream *arg2 = 0 ; inlib::sg::cmaps_t *arg3 = 0 ;
  std::string *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "line_style_from_string", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__line_style, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "line_style_from_string" "', argument " "1"" of type '" "inlib::sg::line_style *""'");  }
   arg1 = reinterpret_cast< inlib::sg::line_style * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "line_style_from_string" "', argument " "2"" of type '" "std::ostream &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "line_style_from_string" "', argument " "2"" of type '" "std::ostream &""'"); }
   arg2 = reinterpret_cast< std::ostream * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "line_style_from_string" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "line_style_from_string" "', argument " "3"" of type '" "inlib::sg::cmaps_t const &""'"); }
   arg3 = reinterpret_cast< inlib::sg::cmaps_t * >(argp3); { std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(swig_obj[3], &ptr); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "line_style_from_string" "', argument " "4"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "line_style_from_string" "', argument " "4"" of type '" "std::string const &""'"); }
     arg4 = ptr; }  result = (bool)(arg1)->from_string(*arg2,(inlib::sg::cmaps_t const &)*arg3,(std::string const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res4)) delete arg4; return resultobj; fail:
  if (SWIG_IsNewObj(res4)) delete arg4; return NULL; }
SWIGINTERN PyObject *line_style_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__line_style, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *line_style_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_pick_element__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::node *arg1 = 0 ; std::vector< float,std::allocator< float > > *arg2 = 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; inlib::sg::state *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  inlib::sg::pick_element *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pick_element" "', argument " "1"" of type '" "inlib::sg::node &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_element" "', argument " "1"" of type '" "inlib::sg::node &""'"); }
   arg1 = reinterpret_cast< inlib::sg::node * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pick_element" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_element" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg2 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pick_element" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_element" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_inlib__sg__state,  0  | 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pick_element" "', argument " "4"" of type '" "inlib::sg::state const &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_element" "', argument " "4"" of type '" "inlib::sg::state const &""'"); }
   arg4 = reinterpret_cast< inlib::sg::state * >(argp4);
  result = (inlib::sg::pick_element *)new inlib::sg::pick_element(*arg1,(std::vector< float,std::allocator< float > > const &)*arg2,(std::vector< float,std::allocator< float > > const &)*arg3,(inlib::sg::state const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__pick_element, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_pick_element(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pick_element" "', argument " "1"" of type '" "inlib::sg::pick_element *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_pick_element__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::pick_element *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__pick_element,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pick_element" "', argument " "1"" of type '" "inlib::sg::pick_element const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_element" "', argument " "1"" of type '" "inlib::sg::pick_element const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (inlib::sg::pick_element *)new inlib::sg::pick_element((inlib::sg::pick_element const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__pick_element, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_pick_element(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_pick_element", 0, 4, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__pick_element, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_pick_element__SWIG_1(self, argc, argv);}  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res); if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_inlib__sg__state, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res); if (_v) { return _wrap_new_pick_element__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_pick_element'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_element::pick_element(inlib::sg::node &,std::vector< float,std::allocator< float > > const &,std::vector< float,std::allocator< float > > const &,inlib::sg::state const &)\n"
  "    inlib::sg::pick_element::pick_element(inlib::sg::pick_element const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_pick_element_node__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::node *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_node" "', argument " "1"" of type '" "inlib::sg::pick_element const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (inlib::sg::node *) &((inlib::sg::pick_element const *)arg1)->node();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_node__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::node *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_node" "', argument " "1"" of type '" "inlib::sg::pick_element *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1); result = (inlib::sg::node *) &(arg1)->node();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_node(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_element_node", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_pick_element_node__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_pick_element_node__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_element_node'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::pick_element::node() const\n" "    inlib::sg::pick_element::node()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_element_zs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_zs" "', argument " "1"" of type '" "inlib::sg::pick_element const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &((inlib::sg::pick_element const *)arg1)->zs();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_zs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_zs" "', argument " "1"" of type '" "inlib::sg::pick_element *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &(arg1)->zs();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_zs(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_element_zs", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_pick_element_zs__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_pick_element_zs__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_element_zs'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::pick_element::zs() const\n" "    inlib::sg::pick_element::zs()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_element_ws__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_ws" "', argument " "1"" of type '" "inlib::sg::pick_element const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &((inlib::sg::pick_element const *)arg1)->ws();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_ws__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_ws" "', argument " "1"" of type '" "inlib::sg::pick_element *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &(arg1)->ws();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_ws(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_element_ws", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_pick_element_ws__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_pick_element_ws__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_element_ws'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::pick_element::ws() const\n" "    inlib::sg::pick_element::ws()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_element_state__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::state *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_state" "', argument " "1"" of type '" "inlib::sg::pick_element const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1);
  result = (inlib::sg::state *) &((inlib::sg::pick_element const *)arg1)->state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_state__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_element *arg1 = (inlib::sg::pick_element *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::state *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_element_state" "', argument " "1"" of type '" "inlib::sg::pick_element *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_element * >(argp1); result = (inlib::sg::state *) &(arg1)->state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__state, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_element_state(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_element_state", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_pick_element_state__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_element, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_pick_element_state__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_element_state'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::pick_element::state() const\n" "    inlib::sg::pick_element::state()\n");
  return 0; }
SWIGINTERN PyObject *pick_element_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__pick_element, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *pick_element_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_pick_action__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; unsigned int arg2 ; unsigned int arg3 ; float arg4 ; float arg5 ;
  float arg6 ; float arg7 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; float val5 ; int ecode5 = 0 ; float val6 ; int ecode6 = 0 ; float val7 ;
  int ecode7 = 0 ; inlib::sg::pick_action *result = 0 ; if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pick_action" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_action" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pick_action" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pick_action" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pick_action" "', argument " "4"" of type '" "float""'"); }  
  arg4 = static_cast< float >(val4); ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pick_action" "', argument " "5"" of type '" "float""'"); }  
  arg5 = static_cast< float >(val5); ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pick_action" "', argument " "6"" of type '" "float""'"); }  
  arg6 = static_cast< float >(val6); ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pick_action" "', argument " "7"" of type '" "float""'"); }  
  arg7 = static_cast< float >(val7);
  result = (inlib::sg::pick_action *)new inlib::sg::pick_action(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__pick_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_pick_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pick_action" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_pick_action__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::pick_action *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__pick_action,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pick_action" "', argument " "1"" of type '" "inlib::sg::pick_action const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pick_action" "', argument " "1"" of type '" "inlib::sg::pick_action const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (inlib::sg::pick_action *)new inlib::sg::pick_action((inlib::sg::pick_action const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__pick_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_pick_action(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[8] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_pick_action", 0, 7, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__pick_action, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_pick_action__SWIG_1(self, argc, argv);}  }  if (argc == 7) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_float(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_float(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_float(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_float(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_new_pick_action__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_pick_action'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::pick_action(std::ostream &,unsigned int,unsigned int,float,float,float,float)\n"
  "    inlib::sg::pick_action::pick_action(inlib::sg::pick_action const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_pick_action_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_reset" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); (arg1)->reset(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_set_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; float arg2 ; float arg3 ; float arg4 ; float arg5 ;
  void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  float val5 ; int ecode5 = 0 ; PyObject *swig_obj[5] ;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_set_area", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_set_area" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pick_action_set_area" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_set_area" "', argument " "3"" of type '" "float""'"); }
    arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_set_area" "', argument " "4"" of type '" "float""'"); }
    arg4 = static_cast< float >(val4); ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_set_area" "', argument " "5"" of type '" "float""'"); }
    arg5 = static_cast< float >(val5); (arg1)->set_area(arg2,arg3,arg4,arg5); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_set_stop_at_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_set_stop_at_first", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_set_stop_at_first" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pick_action_set_stop_at_first" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->set_stop_at_first(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_stop_at_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_stop_at_first" "', argument " "1"" of type '" "inlib::sg::pick_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (bool)((inlib::sg::pick_action const *)arg1)->stop_at_first();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_set_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_set_done", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_set_done" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pick_action_set_done" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->set_done(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_done" "', argument " "1"" of type '" "inlib::sg::pick_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); result = (bool)((inlib::sg::pick_action const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_set_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_set_node", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_set_node" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_set_node" "', argument " "2"" of type '" "inlib::sg::node *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); (arg1)->set_node(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_node" "', argument " "1"" of type '" "inlib::sg::pick_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (inlib::sg::node *)((inlib::sg::pick_action const *)arg1)->node();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add_pick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; std::vector< float,std::allocator< float > > *arg4 = 0 ;
  inlib::sg::state *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; PyObject *swig_obj[5] ;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_add_pick", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add_pick" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add_pick" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add_pick" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pick_action_add_pick" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add_pick" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add_pick" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add_pick" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg4 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_inlib__sg__state,  0  | 0); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pick_action_add_pick" "', argument " "5"" of type '" "inlib::sg::state const &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add_pick" "', argument " "5"" of type '" "inlib::sg::state const &""'"); }
   arg5 = reinterpret_cast< inlib::sg::state * >(argp5);
  (arg1)->add_pick(*arg2,(std::vector< float,std::allocator< float > > const &)*arg3,(std::vector< float,std::allocator< float > > const &)*arg4,(inlib::sg::state const &)*arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_picks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::vector< inlib::sg::pick_action::pick_t,std::allocator< inlib::sg::pick_action::pick_t > > *result = 0 ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_picks" "', argument " "1"" of type '" "inlib::sg::pick_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (std::vector< inlib::sg::pick_action::pick_t,std::allocator< inlib::sg::pick_action::pick_t > > *) &((inlib::sg::pick_action const *)arg1)->picks();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_dump_picks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_dump_picks" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); (arg1)->dump_picks(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_closest_pick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::pick_action::pick_t *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_closest_pick" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (inlib::sg::pick_action::pick_t *)(arg1)->closest_pick();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__pick_element, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_zs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_zs" "', argument " "1"" of type '" "inlib::sg::pick_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &((inlib::sg::pick_action const *)arg1)->zs();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_zs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_zs" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &(arg1)->zs();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_zs(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_zs", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_pick_action_zs__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_pick_action_zs__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_zs'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::pick_action::zs() const\n" "    inlib::sg::pick_action::zs()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_action_ws__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_ws" "', argument " "1"" of type '" "inlib::sg::pick_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &((inlib::sg::pick_action const *)arg1)->ws();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_ws__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< float,std::allocator< float > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_ws" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  result = (std::vector< float,std::allocator< float > > *) &(arg1)->ws();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_ws(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_ws", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_pick_action_ws__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_pick_action_ws__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_ws'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::pick_action::ws() const\n" "    inlib::sg::pick_action::ws()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; bool arg6 ; bool arg7 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  void *argp5 = 0 ; int res5 = 0 ; bool val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ; bool result;
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive_xy" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__primitive_xy" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pick_action_add__primitive_xy" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5); ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pick_action_add__primitive_xy" "', argument " "6"" of type '" "bool""'"); }
    arg6 = static_cast< bool >(val6); ecode7 = SWIG_AsVal_bool(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pick_action_add__primitive_xy" "', argument " "7"" of type '" "bool""'"); }
    arg7 = static_cast< bool >(val7); result = (bool)(arg1)->add__primitive_xy(*arg2,arg3,arg4,(float const *)arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; bool val6 ; int ecode6 = 0 ; bool result; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive_xy" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__primitive_xy" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pick_action_add__primitive_xy" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5); ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pick_action_add__primitive_xy" "', argument " "6"" of type '" "bool""'"); }
    arg6 = static_cast< bool >(val6); result = (bool)(arg1)->add__primitive_xy(*arg2,arg3,arg4,(float const *)arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive_xy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ;
  bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive_xy" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__primitive_xy" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pick_action_add__primitive_xy" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5); result = (bool)(arg1)->add__primitive_xy(*arg2,arg3,arg4,(float const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[8] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__primitive_xy", 0, 7, argv))) SWIG_fail; --argc; if (argc == 5) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
              return _wrap_pick_action_add__primitive_xy__SWIG_2(self, argc, argv);}  }  }  }  }  }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_pick_action_add__primitive_xy__SWIG_1(self, argc, argv);}  }  }  }  }  }  }  if (argc == 7) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_pick_action_add__primitive_xy__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__primitive_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__primitive_xy(inlib::sg::node &,inlib::gl::mode_t,unsigned int,float const *,bool,bool)\n"
  "    inlib::sg::pick_action::add__primitive_xy(inlib::sg::node &,inlib::gl::mode_t,unsigned int,float const *,bool)\n"
  "    inlib::sg::pick_action::add__primitive_xy(inlib::sg::node &,inlib::gl::mode_t,unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__line_strip_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__line_strip_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__line_strip_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__line_strip_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__line_strip_xy" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__line_strip_xy" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_add__line_strip_xy" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add__line_strip_xy(*arg2,arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__line_strip_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__line_strip_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__line_strip_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__line_strip_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__line_strip_xy" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__line_strip_xy" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); result = (bool)(arg1)->add__line_strip_xy(*arg2,arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__line_strip_xy(PyObject *self, PyObject *args) { Py_ssize_t argc;
  PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__line_strip_xy", 0, 5, argv))) SWIG_fail; --argc; if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_pick_action_add__line_strip_xy__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_pick_action_add__line_strip_xy__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__line_strip_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__line_strip_xy(inlib::sg::node &,unsigned int,float const *,bool)\n"
  "    inlib::sg::pick_action::add__line_strip_xy(inlib::sg::node &,unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__lines_xy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__lines_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__lines_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pick_action_add__lines_xy" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines_xy" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__lines_xy" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->add__lines_xy(*arg2,(std::vector< float,std::allocator< float > > const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__lines_xy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__lines_xy" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__lines_xy" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines_xy" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pick_action_add__lines_xy" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines_xy" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  result = (bool)(arg1)->add__lines_xy(*arg2,(std::vector< float,std::allocator< float > > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__lines_xy(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__lines_xy", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_pick_action_add__lines_xy__SWIG_1(self, argc, argv);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_pick_action_add__lines_xy__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__lines_xy'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__lines_xy(inlib::sg::node &,std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::pick_action::add__lines_xy(inlib::sg::node &,std::vector< float,std::allocator< float > > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; bool val6 ; int ecode6 = 0 ; bool result; if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__primitive" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pick_action_add__primitive" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5); ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pick_action_add__primitive" "', argument " "6"" of type '" "bool""'"); }
    arg6 = static_cast< bool >(val6); result = (bool)(arg1)->add__primitive(*arg2,arg3,arg4,(float const *)arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; unsigned int arg4 ; float *arg5 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ;
  bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__primitive" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pick_action_add__primitive" "', argument " "5"" of type '" "float const *""'");  }
   arg5 = reinterpret_cast< float * >(argp5); result = (bool)(arg1)->add__primitive(*arg2,arg3,arg4,(float const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; std::vector< float,std::allocator< float > > *arg4 = 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ;
  int ecode5 = 0 ; bool result; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__primitive" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg4 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_add__primitive" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5);
  result = (bool)(arg1)->add__primitive(*arg2,arg3,(std::vector< float,std::allocator< float > > const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  inlib::gl::mode_t arg3 ; std::vector< float,std::allocator< float > > *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned char val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__primitive" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__primitive" "', argument " "3"" of type '" "inlib::gl::mode_t""'"); }
    arg3 = static_cast< inlib::gl::mode_t >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__primitive" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__primitive" "', argument " "4"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg4 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp4);
  result = (bool)(arg1)->add__primitive(*arg2,arg3,(std::vector< float,std::allocator< float > > const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__primitive(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[7] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__primitive", 0, 6, argv))) SWIG_fail; --argc; if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res); if (_v) { return _wrap_pick_action_add__primitive__SWIG_3(self, argc, argv);}  }  }  }  } 
  if (argc == 5) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); } 
            if (_v) { return _wrap_pick_action_add__primitive__SWIG_2(self, argc, argv);}  }  }  }  }  }  if (argc == 5) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
              return _wrap_pick_action_add__primitive__SWIG_1(self, argc, argv);}  }  }  }  }  }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_pick_action_add__primitive__SWIG_0(self, argc, argv);}  }  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__primitive'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__primitive(inlib::sg::node &,inlib::gl::mode_t,unsigned int,float const *,bool)\n"
  "    inlib::sg::pick_action::add__primitive(inlib::sg::node &,inlib::gl::mode_t,unsigned int,float const *)\n"
  "    inlib::sg::pick_action::add__primitive(inlib::sg::node &,inlib::gl::mode_t,std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::pick_action::add__primitive(inlib::sg::node &,inlib::gl::mode_t,std::vector< float,std::allocator< float > > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__line_strip__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__line_strip" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__line_strip" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__line_strip" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__line_strip" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__line_strip" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_add__line_strip" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add__line_strip(*arg2,arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__line_strip__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__line_strip" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__line_strip" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__line_strip" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__line_strip" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__line_strip" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); result = (bool)(arg1)->add__line_strip(*arg2,arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__line_strip(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = {
    0} ; if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__line_strip", 0, 5, argv))) SWIG_fail; --argc;
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_pick_action_add__line_strip__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_pick_action_add__line_strip__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__line_strip'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__line_strip(inlib::sg::node &,unsigned int,float const *,bool)\n"
  "    inlib::sg::pick_action::add__line_strip(inlib::sg::node &,unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__triangles__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool val5 ; int ecode5 = 0 ; bool result;
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__triangles" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__triangles" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__triangles" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__triangles" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__triangles" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_add__triangles" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (bool)(arg1)->add__triangles(*arg2,arg3,(float const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__triangles__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  unsigned int arg3 ; float *arg4 = (float *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; bool result; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__triangles" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__triangles" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__triangles" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_add__triangles" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pick_action_add__triangles" "', argument " "4"" of type '" "float const *""'");  }
   arg4 = reinterpret_cast< float * >(argp4); result = (bool)(arg1)->add__triangles(*arg2,arg3,(float const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__triangles(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0}
  ; if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__triangles", 0, 5, argv))) SWIG_fail; --argc; if (argc == 4) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_pick_action_add__triangles__SWIG_1(self, argc, argv);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
          if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_pick_action_add__triangles__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__triangles'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__triangles(inlib::sg::node &,unsigned int,float const *,bool)\n"
  "    inlib::sg::pick_action::add__triangles(inlib::sg::node &,unsigned int,float const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_pick_action_add__lines__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; bool result;
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__lines" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__lines" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pick_action_add__lines" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_add__lines" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4);
  result = (bool)(arg1)->add__lines(*arg2,(std::vector< float,std::allocator< float > > const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__lines__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; inlib::sg::node *arg2 = 0 ;
  std::vector< float,std::allocator< float > > *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool result; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_add__lines" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__node,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pick_action_add__lines" "', argument " "2"" of type '" "inlib::sg::node &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines" "', argument " "2"" of type '" "inlib::sg::node &""'"); }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pick_action_add__lines" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pick_action_add__lines" "', argument " "3"" of type '" "std::vector< float,std::allocator< float > > const &""'"); }
   arg3 = reinterpret_cast< std::vector< float,std::allocator< float > > * >(argp3);
  result = (bool)(arg1)->add__lines(*arg2,(std::vector< float,std::allocator< float > > const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_add__lines(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "pick_action_add__lines", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res); if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_pick_action_add__lines__SWIG_1(self, argc, argv);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__pick_action, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, SWIG_POINTER_NO_NULL); _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_pick_action_add__lines__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'pick_action_add__lines'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::pick_action::add__lines(inlib::sg::node &,std::vector< float,std::allocator< float > > const &,bool)\n"
  "    inlib::sg::pick_action::add__lines(inlib::sg::node &,std::vector< float,std::allocator< float > > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_pick_action_is_inside(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; float arg2 ; float arg3 ; float arg4 ; float arg5 ;
  void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  float val5 ; int ecode5 = 0 ; PyObject *swig_obj[5] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_is_inside", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_is_inside" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pick_action_is_inside" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_is_inside" "', argument " "3"" of type '" "float""'"); }
    arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_is_inside" "', argument " "4"" of type '" "float""'"); }
    arg4 = static_cast< float >(val4); ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_is_inside" "', argument " "5"" of type '" "float""'"); }
    arg5 = static_cast< float >(val5); result = (bool)(arg1)->is_inside(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_pick_action_intersect_line(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::pick_action *arg1 = (inlib::sg::pick_action *) 0 ; float arg2 ; float arg3 ; float arg4 ; float arg5 ; float arg6 ;
  float arg7 ; float arg8 ; float arg9 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; float val5 ; int ecode5 = 0 ; float val6 ; int ecode6 = 0 ; float val7 ;
  int ecode7 = 0 ; float val8 ; int ecode8 = 0 ; float val9 ; int ecode9 = 0 ; PyObject *swig_obj[9] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "pick_action_intersect_line", 9, 9, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__pick_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pick_action_intersect_line" "', argument " "1"" of type '" "inlib::sg::pick_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::pick_action * >(argp1); ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pick_action_intersect_line" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); ecode3 = SWIG_AsVal_float(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pick_action_intersect_line" "', argument " "3"" of type '" "float""'"); }
    arg3 = static_cast< float >(val3); ecode4 = SWIG_AsVal_float(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pick_action_intersect_line" "', argument " "4"" of type '" "float""'"); }
    arg4 = static_cast< float >(val4); ecode5 = SWIG_AsVal_float(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pick_action_intersect_line" "', argument " "5"" of type '" "float""'"); }
    arg5 = static_cast< float >(val5); ecode6 = SWIG_AsVal_float(swig_obj[5], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pick_action_intersect_line" "', argument " "6"" of type '" "float""'"); }
    arg6 = static_cast< float >(val6); ecode7 = SWIG_AsVal_float(swig_obj[6], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pick_action_intersect_line" "', argument " "7"" of type '" "float""'"); }
    arg7 = static_cast< float >(val7); ecode8 = SWIG_AsVal_float(swig_obj[7], &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pick_action_intersect_line" "', argument " "8"" of type '" "float""'"); }
    arg8 = static_cast< float >(val8); ecode9 = SWIG_AsVal_float(swig_obj[8], &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pick_action_intersect_line" "', argument " "9"" of type '" "float""'"); }
    arg9 = static_cast< float >(val9); result = (bool)(arg1)->intersect_line(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *pick_action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__pick_action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *pick_action_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event *arg1 = (inlib::sg::event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_cast" "', argument " "1"" of type '" "inlib::sg::event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event *arg1 = (inlib::sg::event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_copy" "', argument " "1"" of type '" "inlib::sg::event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event * >(argp1); result = (inlib::sg::event *)((inlib::sg::event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event *arg1 = (inlib::sg::event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_event" "', argument " "1"" of type '" "inlib::sg::event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_devrot_event_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "devrot_event_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::devrot_event::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_devrot_event_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "devrot_event_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::devrot_event::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_devrot_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::devrot_event *arg1 = (inlib::sg::devrot_event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "devrot_event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__devrot_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "devrot_event_cast" "', argument " "1"" of type '" "inlib::sg::devrot_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::devrot_event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "devrot_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "devrot_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::devrot_event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_devrot_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::devrot_event *arg1 = (inlib::sg::devrot_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__devrot_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "devrot_event_copy" "', argument " "1"" of type '" "inlib::sg::devrot_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::devrot_event * >(argp1);
  result = (inlib::sg::event *)((inlib::sg::devrot_event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_devrot_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::devrot_event *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::devrot_event *)new inlib::sg::devrot_event();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__devrot_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_devrot_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::devrot_event *arg1 = (inlib::sg::devrot_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__devrot_event, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_devrot_event" "', argument " "1"" of type '" "inlib::sg::devrot_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::devrot_event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_devrot_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::devrot_event *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::devrot_event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__devrot_event,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_devrot_event" "', argument " "1"" of type '" "inlib::sg::devrot_event const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_devrot_event" "', argument " "1"" of type '" "inlib::sg::devrot_event const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::devrot_event * >(argp1);
  result = (inlib::sg::devrot_event *)new inlib::sg::devrot_event((inlib::sg::devrot_event const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__devrot_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_devrot_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_devrot_event", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_devrot_event__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__devrot_event, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_devrot_event__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_devrot_event'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::devrot_event::devrot_event()\n"
  "    inlib::sg::devrot_event::devrot_event(inlib::sg::devrot_event const &)\n"); return 0; }
SWIGINTERN PyObject *devrot_event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__devrot_event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *devrot_event_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_size_event_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "size_event_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::size_event::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_event_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "size_event_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::size_event::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "size_event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size_event_cast" "', argument " "1"" of type '" "inlib::sg::size_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "size_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "size_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::size_event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_size_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size_event_copy" "', argument " "1"" of type '" "inlib::sg::size_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1);
  result = (inlib::sg::event *)((inlib::sg::size_event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_size_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; unsigned int arg1 ; unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; unsigned int val1 ;
  int ecode1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ;
  int ecode4 = 0 ; inlib::sg::size_event *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_size_event" "', argument " "1"" of type '" "unsigned int""'"); }
    arg1 = static_cast< unsigned int >(val1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_size_event" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_size_event" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_size_event" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (inlib::sg::size_event *)new inlib::sg::size_event(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__size_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_size_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_size_event" "', argument " "1"" of type '" "inlib::sg::size_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_size_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::size_event *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::size_event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__size_event,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_size_event" "', argument " "1"" of type '" "inlib::sg::size_event const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_size_event" "', argument " "1"" of type '" "inlib::sg::size_event const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1);
  result = (inlib::sg::size_event *)new inlib::sg::size_event((inlib::sg::size_event const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__size_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_size_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_size_event", 0, 4, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__size_event, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_size_event__SWIG_1(self, argc, argv);}  }  if (argc == 4) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_new_size_event__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_size_event'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::size_event::size_event(unsigned int,unsigned int,unsigned int,unsigned int)\n"
  "    inlib::sg::size_event::size_event(inlib::sg::size_event const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_size_event_old_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size_event_old_width" "', argument " "1"" of type '" "inlib::sg::size_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1);
  result = (unsigned int)((inlib::sg::size_event const *)arg1)->old_width();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_event_old_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size_event_old_height" "', argument " "1"" of type '" "inlib::sg::size_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1);
  result = (unsigned int)((inlib::sg::size_event const *)arg1)->old_height();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_event_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size_event_width" "', argument " "1"" of type '" "inlib::sg::size_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1);
  result = (unsigned int)((inlib::sg::size_event const *)arg1)->width();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_size_event_height(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::size_event *arg1 = (inlib::sg::size_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__size_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "size_event_height" "', argument " "1"" of type '" "inlib::sg::size_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::size_event * >(argp1);
  result = (unsigned int)((inlib::sg::size_event const *)arg1)->height();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *size_event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__size_event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *size_event_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_down_event_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "down_event_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::down_event::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_down_event_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "down_event_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::down_event::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_down_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::down_event *arg1 = (inlib::sg::down_event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "down_event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__down_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "down_event_cast" "', argument " "1"" of type '" "inlib::sg::down_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::down_event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "down_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "down_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::down_event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_down_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::down_event *arg1 = (inlib::sg::down_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__down_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "down_event_copy" "', argument " "1"" of type '" "inlib::sg::down_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::down_event * >(argp1);
  result = (inlib::sg::event *)((inlib::sg::down_event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_down_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; int arg1 ; int arg2 ; int val1 ; int ecode1 = 0 ; int val2 ; int ecode2 = 0 ;
  inlib::sg::down_event *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_down_event" "', argument " "1"" of type '" "int""'"); }  
  arg1 = static_cast< int >(val1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_down_event" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (inlib::sg::down_event *)new inlib::sg::down_event(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__down_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_down_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::down_event *arg1 = (inlib::sg::down_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__down_event, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_down_event" "', argument " "1"" of type '" "inlib::sg::down_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::down_event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_down_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::down_event *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::down_event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__down_event,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_down_event" "', argument " "1"" of type '" "inlib::sg::down_event const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_down_event" "', argument " "1"" of type '" "inlib::sg::down_event const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::down_event * >(argp1);
  result = (inlib::sg::down_event *)new inlib::sg::down_event((inlib::sg::down_event const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__down_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_down_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_down_event", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__down_event, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_down_event__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_down_event__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_down_event'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::down_event::down_event(int,int)\n"
  "    inlib::sg::down_event::down_event(inlib::sg::down_event const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_down_event_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::down_event *arg1 = (inlib::sg::down_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__down_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "down_event_x" "', argument " "1"" of type '" "inlib::sg::down_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::down_event * >(argp1); result = (int)((inlib::sg::down_event const *)arg1)->x();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_down_event_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::down_event *arg1 = (inlib::sg::down_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__down_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "down_event_y" "', argument " "1"" of type '" "inlib::sg::down_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::down_event * >(argp1); result = (int)((inlib::sg::down_event const *)arg1)->y();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *down_event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__down_event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *down_event_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_up_event_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "up_event_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::up_event::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_up_event_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  if (!SWIG_Python_UnpackTuple(args, "up_event_check_class_name", 0, 0, 0)) SWIG_fail; inlib::sg::up_event::check_class_name();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_up_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::up_event *arg1 = (inlib::sg::up_event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "up_event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__up_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "up_event_cast" "', argument " "1"" of type '" "inlib::sg::up_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::up_event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "up_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "up_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::up_event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_up_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::up_event *arg1 = (inlib::sg::up_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__up_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "up_event_copy" "', argument " "1"" of type '" "inlib::sg::up_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::up_event * >(argp1);
  result = (inlib::sg::event *)((inlib::sg::up_event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_up_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; int arg1 ; int arg2 ; int val1 ; int ecode1 = 0 ; int val2 ; int ecode2 = 0 ;
  inlib::sg::up_event *result = 0 ; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_up_event" "', argument " "1"" of type '" "int""'"); }  
  arg1 = static_cast< int >(val1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_up_event" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (inlib::sg::up_event *)new inlib::sg::up_event(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__up_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_up_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::up_event *arg1 = (inlib::sg::up_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__up_event, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_up_event" "', argument " "1"" of type '" "inlib::sg::up_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::up_event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_up_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::up_event *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::up_event *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__up_event,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_up_event" "', argument " "1"" of type '" "inlib::sg::up_event const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_up_event" "', argument " "1"" of type '" "inlib::sg::up_event const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::up_event * >(argp1);
  result = (inlib::sg::up_event *)new inlib::sg::up_event((inlib::sg::up_event const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__up_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_up_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_up_event", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__up_event, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_up_event__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_up_event__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_up_event'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::up_event::up_event(int,int)\n"
  "    inlib::sg::up_event::up_event(inlib::sg::up_event const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_up_event_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::up_event *arg1 = (inlib::sg::up_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; int result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__up_event, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "up_event_x" "', argument " "1"" of type '" "inlib::sg::up_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::up_event * >(argp1); result = (int)((inlib::sg::up_event const *)arg1)->x();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_up_event_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::up_event *arg1 = (inlib::sg::up_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; int result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__up_event, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "up_event_y" "', argument " "1"" of type '" "inlib::sg::up_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::up_event * >(argp1); result = (int)((inlib::sg::up_event const *)arg1)->y();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *up_event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__up_event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *up_event_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_move_event_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "move_event_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::move_event::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_move_event_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "move_event_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::move_event::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_move_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "move_event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_cast" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "move_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "move_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::move_event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_move_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_copy" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1);
  result = (inlib::sg::event *)((inlib::sg::move_event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_move_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; int arg1 ; int arg2 ; int arg3 ; int arg4 ; bool arg5 ; int val1 ; int ecode1 = 0 ; int val2 ;
  int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ;
  inlib::sg::move_event *result = 0 ; if ((nobjs < 5) || (nobjs > 5)) SWIG_fail; ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_move_event" "', argument " "1"" of type '" "int""'"); }  
  arg1 = static_cast< int >(val1); ecode2 = SWIG_AsVal_int(swig_obj[1], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_move_event" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_move_event" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_move_event" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_move_event" "', argument " "5"" of type '" "bool""'"); }  
  arg5 = static_cast< bool >(val5); result = (inlib::sg::move_event *)new inlib::sg::move_event(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__move_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_move_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_move_event" "', argument " "1"" of type '" "inlib::sg::move_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_move_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::move_event *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::move_event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__move_event,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_move_event" "', argument " "1"" of type '" "inlib::sg::move_event const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_move_event" "', argument " "1"" of type '" "inlib::sg::move_event const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1);
  result = (inlib::sg::move_event *)new inlib::sg::move_event((inlib::sg::move_event const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__move_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_move_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[6] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_move_event", 0, 5, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__move_event, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_move_event__SWIG_1(self, argc, argv);}  }  if (argc == 5) { int _v; {
      int res = SWIG_AsVal_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_new_move_event__SWIG_0(self, argc, argv);}  }  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_move_event'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::move_event::move_event(int,int,int,int,bool)\n"
  "    inlib::sg::move_event::move_event(inlib::sg::move_event const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_move_event_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_x" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); result = (int)((inlib::sg::move_event const *)arg1)->x();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_move_event_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_y" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); result = (int)((inlib::sg::move_event const *)arg1)->y();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_move_event_ox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_ox" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); result = (int)((inlib::sg::move_event const *)arg1)->ox();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_move_event_oy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_oy" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); result = (int)((inlib::sg::move_event const *)arg1)->oy();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_move_event_is_touch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::move_event *arg1 = (inlib::sg::move_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__move_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "move_event_is_touch" "', argument " "1"" of type '" "inlib::sg::move_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::move_event * >(argp1); result = (bool)((inlib::sg::move_event const *)arg1)->is_touch();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *move_event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__move_event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *move_event_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_anim_event_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "anim_event_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::anim_event::s_class();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_anim_event_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; if (!SWIG_Python_UnpackTuple(args, "anim_event_check_class_name", 0, 0, 0)) SWIG_fail;
  inlib::sg::anim_event::check_class_name(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_anim_event_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "anim_event_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "anim_event_cast" "', argument " "1"" of type '" "inlib::sg::anim_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "anim_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "anim_event_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::anim_event const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_anim_event_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::event *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "anim_event_copy" "', argument " "1"" of type '" "inlib::sg::anim_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1);
  result = (inlib::sg::event *)((inlib::sg::anim_event const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_anim_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::anim_event::num_t arg1 ; inlib::sg::anim_event::num_t arg2 ; unsigned long long val1 ;
  int ecode1 = 0 ; unsigned long long val2 ; int ecode2 = 0 ; inlib::sg::anim_event *result = 0 ;
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail; ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_anim_event" "', argument " "1"" of type '" "inlib::sg::anim_event::num_t""'"); }
    arg1 = static_cast< inlib::sg::anim_event::num_t >(val1); ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_anim_event" "', argument " "2"" of type '" "inlib::sg::anim_event::num_t""'"); }
    arg2 = static_cast< inlib::sg::anim_event::num_t >(val2);
  result = (inlib::sg::anim_event *)new inlib::sg::anim_event(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__anim_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_anim_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_anim_event" "', argument " "1"" of type '" "inlib::sg::anim_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_anim_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::anim_event *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::anim_event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__anim_event,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_anim_event" "', argument " "1"" of type '" "inlib::sg::anim_event const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_anim_event" "', argument " "1"" of type '" "inlib::sg::anim_event const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1);
  result = (inlib::sg::anim_event *)new inlib::sg::anim_event((inlib::sg::anim_event const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__anim_event, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_anim_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[3] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_anim_event", 0, 2, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__anim_event, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_anim_event__SWIG_1(self, argc, argv);}  }  if (argc == 2) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_new_anim_event__SWIG_0(self, argc, argv);}  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_anim_event'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::anim_event::anim_event(inlib::sg::anim_event::num_t,inlib::sg::anim_event::num_t)\n"
  "    inlib::sg::anim_event::anim_event(inlib::sg::anim_event const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_anim_event_seconds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::anim_event::num_t result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "anim_event_seconds" "', argument " "1"" of type '" "inlib::sg::anim_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1);
  result = (inlib::sg::anim_event::num_t)((inlib::sg::anim_event const *)arg1)->seconds();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_anim_event_micro_seconds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::anim_event::num_t result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "anim_event_micro_seconds" "', argument " "1"" of type '" "inlib::sg::anim_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1);
  result = (inlib::sg::anim_event::num_t)((inlib::sg::anim_event const *)arg1)->micro_seconds();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_anim_event_set_some_found(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "anim_event_set_some_found", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "anim_event_set_some_found" "', argument " "1"" of type '" "inlib::sg::anim_event *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "anim_event_set_some_found" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->set_some_found(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_anim_event_some_found(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::anim_event *arg1 = (inlib::sg::anim_event *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__anim_event, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "anim_event_some_found" "', argument " "1"" of type '" "inlib::sg::anim_event const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::anim_event * >(argp1);
  result = (bool)((inlib::sg::anim_event const *)arg1)->some_found(); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *anim_event_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__anim_event, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *anim_event_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_event_action__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; std::ostream *arg1 = 0 ; unsigned int arg2 ; unsigned int arg3 ; inlib::sg::event *arg4 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; inlib::sg::event_action *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_event_action" "', argument " "1"" of type '" "std::ostream &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_event_action" "', argument " "1"" of type '" "std::ostream &""'"); }
   arg1 = reinterpret_cast< std::ostream * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_event_action" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_event_action" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_inlib__sg__event,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_event_action" "', argument " "4"" of type '" "inlib::sg::event &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_event_action" "', argument " "4"" of type '" "inlib::sg::event &""'"); }
   arg4 = reinterpret_cast< inlib::sg::event * >(argp4);
  result = (inlib::sg::event_action *)new inlib::sg::event_action(*arg1,arg2,arg3,*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_event_action(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_event_action" "', argument " "1"" of type '" "inlib::sg::event_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_event_action__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::event_action *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::event_action *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__event_action,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_event_action" "', argument " "1"" of type '" "inlib::sg::event_action const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_event_action" "', argument " "1"" of type '" "inlib::sg::event_action const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1);
  result = (inlib::sg::event_action *)new inlib::sg::event_action((inlib::sg::event_action const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event_action, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_event_action(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_event_action", 0, 4, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__event_action, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_new_event_action__SWIG_1(self, argc, argv);}  }  if (argc == 4) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_inlib__sg__event, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res); if (_v) { return _wrap_new_event_action__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_event_action'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::event_action::event_action(std::ostream &,unsigned int,unsigned int,inlib::sg::event &)\n"
  "    inlib::sg::event_action::event_action(inlib::sg::event_action const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_event_action_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_reset" "', argument " "1"" of type '" "inlib::sg::event_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1); (arg1)->reset(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_event_action_get_event__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_get_event" "', argument " "1"" of type '" "inlib::sg::event_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1);
  result = (inlib::sg::event *) &((inlib::sg::event_action const *)arg1)->get_event();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_event_action_get_event__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  inlib::sg::event *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_get_event" "', argument " "1"" of type '" "inlib::sg::event_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1); result = (inlib::sg::event *) &(arg1)->get_event();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__event, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_event_action_get_event(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "event_action_get_event", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__event_action, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_event_action_get_event__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__event_action, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_event_action_get_event__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'event_action_get_event'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::event_action::get_event() const\n"
  "    inlib::sg::event_action::get_event()\n"); return 0; }
SWIGINTERN PyObject *_wrap_event_action_set_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ;
  int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "event_action_set_done", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_set_done" "', argument " "1"" of type '" "inlib::sg::event_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "event_action_set_done" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->set_done(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_event_action_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_done" "', argument " "1"" of type '" "inlib::sg::event_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1); result = (bool)((inlib::sg::event_action const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_event_action_set_do_switch_children(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "event_action_set_do_switch_children", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_set_do_switch_children" "', argument " "1"" of type '" "inlib::sg::event_action *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1); ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "event_action_set_do_switch_children" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->set_do_switch_children(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_event_action_do_switch_children(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; inlib::sg::event_action *arg1 = (inlib::sg::event_action *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject *swig_obj[1] ; bool result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__event_action, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "event_action_do_switch_children" "', argument " "1"" of type '" "inlib::sg::event_action const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::event_action * >(argp1);
  result = (bool)((inlib::sg::event_action const *)arg1)->do_switch_children();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *event_action_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__event_action, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *event_action_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_group_s_class(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::string *result = 0 ; if (!SWIG_Python_UnpackTuple(args, "group_s_class", 0, 0, 0)) SWIG_fail;
  result = (std::string *) &inlib::sg::group::s_class(); resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_check_class_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  if (!SWIG_Python_UnpackTuple(args, "group_check_class_name", 0, 0, 0)) SWIG_fail; inlib::sg::group::check_class_name();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject *swig_obj[2] ; void *result = 0 ;
  if (!SWIG_Python_UnpackTuple(args, "group_cast", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_cast" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_cast" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (void *)((inlib::sg::group const *)arg1)->cast((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_group_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  inlib::sg::node *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_copy" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); result = (inlib::sg::node *)((inlib::sg::group const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__node, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_group_s_cls(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  std::string *result = 0 ; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_s_cls" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); result = (std::string *) &((inlib::sg::group const *)arg1)->s_cls();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_render(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::render_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_render", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_render" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__render_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_render" "', argument " "2"" of type '" "inlib::sg::render_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_render" "', argument " "2"" of type '" "inlib::sg::render_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::render_action * >(argp2); (arg1)->render(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_pick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::pick_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_pick", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_pick" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__pick_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_pick" "', argument " "2"" of type '" "inlib::sg::pick_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_pick" "', argument " "2"" of type '" "inlib::sg::pick_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::pick_action * >(argp2); (arg1)->pick(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_bbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::bbox_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_bbox", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_bbox" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__bbox_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_bbox" "', argument " "2"" of type '" "inlib::sg::bbox_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_bbox" "', argument " "2"" of type '" "inlib::sg::bbox_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::bbox_action * >(argp2); (arg1)->bbox(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::event_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_event", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_event" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__event_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_event" "', argument " "2"" of type '" "inlib::sg::event_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_event" "', argument " "2"" of type '" "inlib::sg::event_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::event_action * >(argp2); (arg1)->event(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_search(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::search_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_search", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_search" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__search_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_search" "', argument " "2"" of type '" "inlib::sg::search_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_search" "', argument " "2"" of type '" "inlib::sg::search_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::search_action * >(argp2); (arg1)->search(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::write_action *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "group_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_write" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__write_action,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_write" "', argument " "2"" of type '" "inlib::sg::write_action &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_write" "', argument " "2"" of type '" "inlib::sg::write_action &""'"); }
   arg2 = reinterpret_cast< inlib::sg::write_action * >(argp2); result = (bool)(arg1)->write(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_group__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0; inlib::sg::group *result = 0 ; if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (inlib::sg::group *)new inlib::sg::group();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__group, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_group(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_group" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_group__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; inlib::sg::group *result = 0 ;
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_inlib__sg__group,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_group" "', argument " "1"" of type '" "inlib::sg::group const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_group" "', argument " "1"" of type '" "inlib::sg::group const &""'"); }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  result = (inlib::sg::group *)new inlib::sg::group((inlib::sg::group const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_inlib__sg__group, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_group(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_group", 0, 1, argv))) SWIG_fail; --argc; if (argc == 0) {
    return _wrap_new_group__SWIG_0(self, argc, argv);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_inlib__sg__group, SWIG_POINTER_NO_NULL | 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_group__SWIG_1(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_group'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::group::group()\n"
  "    inlib::sg::group::group(inlib::sg::group const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_group_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_add", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_add" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_add" "', argument " "2"" of type '" "inlib::sg::node *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); (arg1)->add(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_group_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; unsigned int arg2 ; inlib::sg::node *arg3 = (inlib::sg::node *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "group_set", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_set" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "group_set" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_inlib__sg__node, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "group_set" "', argument " "3"" of type '" "inlib::sg::node *""'");  }
   arg3 = reinterpret_cast< inlib::sg::node * >(argp3); (arg1)->set(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_replace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  inlib::sg::node *arg3 = (inlib::sg::node *) 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; bool val4 ; int ecode4 = 0 ; PyObject *swig_obj[4] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "group_replace", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_replace" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_replace" "', argument " "2"" of type '" "inlib::sg::node const *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "group_replace" "', argument " "3"" of type '" "inlib::sg::node *""'");  }
   arg3 = reinterpret_cast< inlib::sg::node * >(argp3); ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "group_replace" "', argument " "4"" of type '" "bool""'"); }  
  arg4 = static_cast< bool >(val4); result = (bool)(arg1)->replace((inlib::sg::node const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject *swig_obj[3] ;
  if (!SWIG_Python_UnpackTuple(args, "group_swap", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_swap" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "group_swap" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "group_swap" "', argument " "3"" of type '" "unsigned int""'"); }  
  arg3 = static_cast< unsigned int >(val3); (arg1)->swap(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_group_rsearch_from__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  std::string *arg3 = 0 ; bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  bool val4 ; int ecode4 = 0 ; void *result = 0 ; if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_rsearch_from" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_rsearch_from" "', argument " "2"" of type '" "inlib::sg::node const *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "group_rsearch_from" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_rsearch_from" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "group_rsearch_from" "', argument " "4"" of type '" "bool""'"); }  
  arg4 = static_cast< bool >(val4);
  result = (void *)((inlib::sg::group const *)arg1)->rsearch_from((inlib::sg::node const *)arg2,(std::string const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_group_rsearch_from__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int res3 = SWIG_OLDOBJ ;
  void *result = 0 ; if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_rsearch_from" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_rsearch_from" "', argument " "2"" of type '" "inlib::sg::node const *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); { std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(swig_obj[2], &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "group_rsearch_from" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_rsearch_from" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; } 
  result = (void *)((inlib::sg::group const *)arg1)->rsearch_from((inlib::sg::node const *)arg2,(std::string const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_group_rsearch_from(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[5] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "group_rsearch_from", 0, 4, argv))) SWIG_fail; --argc; if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__group, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, 0);
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_group_rsearch_from__SWIG_1(self, argc, argv);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__group, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, 0); _v = SWIG_CheckState(res); if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_bool(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_group_rsearch_from__SWIG_0(self, argc, argv);}  }  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'group_rsearch_from'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    inlib::sg::group::rsearch_from(inlib::sg::node const *,std::string const &,bool) const\n"
  "    inlib::sg::group::rsearch_from(inlib::sg::node const *,std::string const &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_group_remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ; bool result;
  if (!SWIG_Python_UnpackTuple(args, "group_remove", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_remove" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_remove" "', argument " "2"" of type '" "inlib::sg::node const *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); result = (bool)(arg1)->remove((inlib::sg::node const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_delete_from__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  bool arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool val3 ; int ecode3 = 0 ; bool result;
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_delete_from" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_delete_from" "', argument " "2"" of type '" "inlib::sg::node const *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "group_delete_from" "', argument " "3"" of type '" "bool""'"); }  
  arg3 = static_cast< bool >(val3); result = (bool)(arg1)->delete_from((inlib::sg::node const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_delete_from__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::node *arg2 = (inlib::sg::node *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; bool result; if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_delete_from" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_inlib__sg__node, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_delete_from" "', argument " "2"" of type '" "inlib::sg::node const *""'");  }
   arg2 = reinterpret_cast< inlib::sg::node * >(argp2); result = (bool)(arg1)->delete_from((inlib::sg::node const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_delete_from(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[4] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "group_delete_from", 0, 3, argv))) SWIG_fail; --argc; if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__group, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_group_delete_from__SWIG_1(self, argc, argv);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__group, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_inlib__sg__node, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_group_delete_from__SWIG_0(self, argc, argv);}  }  }  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'group_delete_from'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::group::delete_from(inlib::sg::node const *,bool)\n"
  "    inlib::sg::group::delete_from(inlib::sg::node const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_group_transfer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; inlib::sg::group *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject *swig_obj[2] ;
  if (!SWIG_Python_UnpackTuple(args, "group_transfer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_transfer" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_inlib__sg__group,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "group_transfer" "', argument " "2"" of type '" "inlib::sg::group &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "group_transfer" "', argument " "2"" of type '" "inlib::sg::group &""'"); }
   arg2 = reinterpret_cast< inlib::sg::group * >(argp2); (arg1)->transfer(*arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_clear" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); (arg1)->clear(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_group_raw_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_raw_clear" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); (arg1)->raw_clear(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ;
  unsigned int result; if (!args) SWIG_fail; swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_size" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); result = (unsigned int)((inlib::sg::group const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject *swig_obj[1] ; bool result;
  if (!args) SWIG_fail; swig_obj[0] = args; res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_empty" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1); result = (bool)((inlib::sg::group const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_children__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_children" "', argument " "1"" of type '" "inlib::sg::group const *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  result = (std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > > *) &((inlib::sg::group const *)arg1)->children();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_children__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0; inlib::sg::group *arg1 = (inlib::sg::group *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > > *result = 0 ; if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_inlib__sg__group, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "group_children" "', argument " "1"" of type '" "inlib::sg::group *""'");  }
   arg1 = reinterpret_cast< inlib::sg::group * >(argp1);
  result = (std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > > *) &(arg1)->children();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_group_children(PyObject *self, PyObject *args) { Py_ssize_t argc; PyObject *argv[2] = { 0} ;
  if (!(argc = SWIG_Python_UnpackTuple(args, "group_children", 0, 1, argv))) SWIG_fail; --argc; if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__group, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_group_children__SWIG_1(self, argc, argv);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_inlib__sg__group, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_group_children__SWIG_0(self, argc, argv);}  }  fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'group_children'.\n"
  "  Possible C/C++ prototypes are:\n" "    inlib::sg::group::children() const\n" "    inlib::sg::group::children()\n");
  return 0; }
SWIGINTERN PyObject *group_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_inlib__sg__group, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *group_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { "SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { "SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { "SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { "SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { "SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { "SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { "SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { "SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "std_vector_double_iterator", _wrap_std_vector_double_iterator, METH_O, NULL},
	 { "std_vector_double___nonzero__", _wrap_std_vector_double___nonzero__, METH_O, NULL},
	 { "std_vector_double___bool__", _wrap_std_vector_double___bool__, METH_O, NULL},
	 { "std_vector_double___len__", _wrap_std_vector_double___len__, METH_O, NULL},
	 { "std_vector_double___getslice__", _wrap_std_vector_double___getslice__, METH_VARARGS, NULL},
	 { "std_vector_double___setslice__", _wrap_std_vector_double___setslice__, METH_VARARGS, NULL},
	 { "std_vector_double___delslice__", _wrap_std_vector_double___delslice__, METH_VARARGS, NULL},
	 { "std_vector_double___delitem__", _wrap_std_vector_double___delitem__, METH_VARARGS, NULL},
	 { "std_vector_double___getitem__", _wrap_std_vector_double___getitem__, METH_VARARGS, NULL},
	 { "std_vector_double___setitem__", _wrap_std_vector_double___setitem__, METH_VARARGS, NULL},
	 { "std_vector_double_pop", _wrap_std_vector_double_pop, METH_O, NULL},
	 { "std_vector_double_append", _wrap_std_vector_double_append, METH_VARARGS, NULL},
	 { "std_vector_double_empty", _wrap_std_vector_double_empty, METH_O, NULL},
	 { "std_vector_double_size", _wrap_std_vector_double_size, METH_O, NULL},
	 { "std_vector_double_swap", _wrap_std_vector_double_swap, METH_VARARGS, NULL},
	 { "std_vector_double_begin", _wrap_std_vector_double_begin, METH_O, NULL},
	 { "std_vector_double_end", _wrap_std_vector_double_end, METH_O, NULL},
	 { "std_vector_double_rbegin", _wrap_std_vector_double_rbegin, METH_O, NULL},
	 { "std_vector_double_rend", _wrap_std_vector_double_rend, METH_O, NULL},
	 { "std_vector_double_clear", _wrap_std_vector_double_clear, METH_O, NULL},
	 { "std_vector_double_get_allocator", _wrap_std_vector_double_get_allocator, METH_O, NULL},
	 { "std_vector_double_pop_back", _wrap_std_vector_double_pop_back, METH_O, NULL},
	 { "std_vector_double_erase", _wrap_std_vector_double_erase, METH_VARARGS, NULL},
	 { "new_std_vector_double", _wrap_new_std_vector_double, METH_VARARGS, NULL},
	 { "std_vector_double_push_back", _wrap_std_vector_double_push_back, METH_VARARGS, NULL},
	 { "std_vector_double_front", _wrap_std_vector_double_front, METH_O, NULL},
	 { "std_vector_double_back", _wrap_std_vector_double_back, METH_O, NULL},
	 { "std_vector_double_assign", _wrap_std_vector_double_assign, METH_VARARGS, NULL},
	 { "std_vector_double_resize", _wrap_std_vector_double_resize, METH_VARARGS, NULL},
	 { "std_vector_double_insert", _wrap_std_vector_double_insert, METH_VARARGS, NULL},
	 { "std_vector_double_reserve", _wrap_std_vector_double_reserve, METH_VARARGS, NULL},
	 { "std_vector_double_capacity", _wrap_std_vector_double_capacity, METH_O, NULL},
	 { "delete_std_vector_double", _wrap_delete_std_vector_double, METH_O, NULL},
	 { "std_vector_double_swigregister", std_vector_double_swigregister, METH_O, NULL},
	 { "std_vector_double_swiginit", std_vector_double_swiginit, METH_VARARGS, NULL},
	 { "ios_base_register_callback", _wrap_ios_base_register_callback, METH_VARARGS, NULL},
	 { "ios_base_flags", _wrap_ios_base_flags, METH_VARARGS, NULL},
	 { "ios_base_setf", _wrap_ios_base_setf, METH_VARARGS, NULL},
	 { "ios_base_unsetf", _wrap_ios_base_unsetf, METH_VARARGS, NULL},
	 { "ios_base_precision", _wrap_ios_base_precision, METH_VARARGS, NULL},
	 { "ios_base_width", _wrap_ios_base_width, METH_VARARGS, NULL},
	 { "ios_base_sync_with_stdio", _wrap_ios_base_sync_with_stdio, METH_VARARGS, NULL},
	 { "ios_base_imbue", _wrap_ios_base_imbue, METH_VARARGS, NULL},
	 { "ios_base_getloc", _wrap_ios_base_getloc, METH_O, NULL},
	 { "ios_base_xalloc", _wrap_ios_base_xalloc, METH_NOARGS, NULL},
	 { "ios_base_iword", _wrap_ios_base_iword, METH_VARARGS, NULL},
	 { "ios_base_pword", _wrap_ios_base_pword, METH_VARARGS, NULL},
	 { "delete_ios_base", _wrap_delete_ios_base, METH_O, NULL},
	 { "ios_base_swigregister", ios_base_swigregister, METH_O, NULL},
	 { "ios_rdstate", _wrap_ios_rdstate, METH_O, NULL},
	 { "ios_clear", _wrap_ios_clear, METH_VARARGS, NULL},
	 { "ios_setstate", _wrap_ios_setstate, METH_VARARGS, NULL},
	 { "ios_good", _wrap_ios_good, METH_O, NULL},
	 { "ios_eof", _wrap_ios_eof, METH_O, NULL},
	 { "ios_fail", _wrap_ios_fail, METH_O, NULL},
	 { "ios_bad", _wrap_ios_bad, METH_O, NULL},
	 { "ios_exceptions", _wrap_ios_exceptions, METH_VARARGS, NULL},
	 { "new_ios", _wrap_new_ios, METH_O, NULL},
	 { "delete_ios", _wrap_delete_ios, METH_O, NULL},
	 { "ios_tie", _wrap_ios_tie, METH_VARARGS, NULL},
	 { "ios_rdbuf", _wrap_ios_rdbuf, METH_VARARGS, NULL},
	 { "ios_copyfmt", _wrap_ios_copyfmt, METH_VARARGS, NULL},
	 { "ios_fill", _wrap_ios_fill, METH_VARARGS, NULL},
	 { "ios_imbue", _wrap_ios_imbue, METH_VARARGS, NULL},
	 { "ios_narrow", _wrap_ios_narrow, METH_VARARGS, NULL},
	 { "ios_widen", _wrap_ios_widen, METH_VARARGS, NULL},
	 { "ios_swigregister", ios_swigregister, METH_O, NULL},
	 { "ios_swiginit", ios_swiginit, METH_VARARGS, NULL},
	 { "new_ostream", _wrap_new_ostream, METH_O, NULL},
	 { "delete_ostream", _wrap_delete_ostream, METH_O, NULL},
	 { "ostream___lshift__", _wrap_ostream___lshift__, METH_VARARGS, NULL},
	 { "ostream_put", _wrap_ostream_put, METH_VARARGS, NULL},
	 { "ostream_write", _wrap_ostream_write, METH_VARARGS, NULL},
	 { "ostream_flush", _wrap_ostream_flush, METH_O, NULL},
	 { "ostream_tellp", _wrap_ostream_tellp, METH_O, NULL},
	 { "ostream_seekp", _wrap_ostream_seekp, METH_VARARGS, NULL},
	 { "ostream_swigregister", ostream_swigregister, METH_O, NULL},
	 { "ostream_swiginit", ostream_swiginit, METH_VARARGS, NULL},
	 { "new_istream", _wrap_new_istream, METH_O, NULL},
	 { "delete_istream", _wrap_delete_istream, METH_O, NULL},
	 { "istream___rshift__", _wrap_istream___rshift__, METH_VARARGS, NULL},
	 { "istream_gcount", _wrap_istream_gcount, METH_O, NULL},
	 { "istream_get", _wrap_istream_get, METH_VARARGS, NULL},
	 { "istream_getline", _wrap_istream_getline, METH_VARARGS, NULL},
	 { "istream_ignore", _wrap_istream_ignore, METH_VARARGS, NULL},
	 { "istream_peek", _wrap_istream_peek, METH_O, NULL},
	 { "istream_read", _wrap_istream_read, METH_VARARGS, NULL},
	 { "istream_readsome", _wrap_istream_readsome, METH_VARARGS, NULL},
	 { "istream_putback", _wrap_istream_putback, METH_VARARGS, NULL},
	 { "istream_unget", _wrap_istream_unget, METH_O, NULL},
	 { "istream_sync", _wrap_istream_sync, METH_O, NULL},
	 { "istream_tellg", _wrap_istream_tellg, METH_O, NULL},
	 { "istream_seekg", _wrap_istream_seekg, METH_VARARGS, NULL},
	 { "istream_swigregister", istream_swigregister, METH_O, NULL},
	 { "istream_swiginit", istream_swiginit, METH_VARARGS, NULL},
	 { "new_iostream", _wrap_new_iostream, METH_O, NULL},
	 { "delete_iostream", _wrap_delete_iostream, METH_O, NULL},
	 { "iostream_swigregister", iostream_swigregister, METH_O, NULL},
	 { "iostream_swiginit", iostream_swiginit, METH_VARARGS, NULL},
	 { "endl", _wrap_endl, METH_O, "swig_ptr: endl_cb_ptr"},
	 { "ends", _wrap_ends, METH_O, "swig_ptr: ends_cb_ptr"},
	 { "flush", _wrap_flush, METH_O, "swig_ptr: flush_cb_ptr"},
	 { "snpf", _wrap_snpf, METH_VARARGS, NULL},
	 { "sprintf", _wrap_sprintf, METH_VARARGS, NULL},
	 { "pi", _wrap_pi, METH_NOARGS, NULL},
	 { "two_pi", _wrap_two_pi, METH_NOARGS, NULL},
	 { "half_pi", _wrap_half_pi, METH_NOARGS, NULL},
	 { "deg2rad", _wrap_deg2rad, METH_NOARGS, NULL},
	 { "in_domain_all", _wrap_in_domain_all, METH_O, NULL},
	 { "in_domain_log", _wrap_in_domain_log, METH_O, NULL},
	 { "in_domain_tan", _wrap_in_domain_tan, METH_O, NULL},
	 { "in_domain_acos", _wrap_in_domain_acos, METH_O, NULL},
	 { "random_flat_shoot", _wrap_random_flat_shoot, METH_O, NULL},
	 { "new_random_flat", _wrap_new_random_flat, METH_NOARGS, NULL},
	 { "delete_random_flat", _wrap_delete_random_flat, METH_O, NULL},
	 { "random_flat_swigregister", random_flat_swigregister, METH_O, NULL},
	 { "random_flat_swiginit", random_flat_swiginit, METH_VARARGS, NULL},
	 { "new_random_gauss", _wrap_new_random_gauss, METH_VARARGS, NULL},
	 { "random_gauss_shoot", _wrap_random_gauss_shoot, METH_O, NULL},
	 { "delete_random_gauss", _wrap_delete_random_gauss, METH_O, NULL},
	 { "random_gauss_swigregister", random_gauss_swigregister, METH_O, NULL},
	 { "random_gauss_swiginit", random_gauss_swiginit, METH_VARARGS, NULL},
	 { "new_random_bw", _wrap_new_random_bw, METH_VARARGS, NULL},
	 { "random_bw_shoot", _wrap_random_bw_shoot, METH_O, NULL},
	 { "delete_random_bw", _wrap_delete_random_bw, METH_O, NULL},
	 { "random_bw_swigregister", random_bw_swigregister, METH_O, NULL},
	 { "random_bw_swiginit", random_bw_swiginit, METH_VARARGS, NULL},
	 { "new_random_exp", _wrap_new_random_exp, METH_VARARGS, NULL},
	 { "random_exp_shoot", _wrap_random_exp_shoot, METH_O, NULL},
	 { "delete_random_exp", _wrap_delete_random_exp, METH_O, NULL},
	 { "random_exp_swigregister", random_exp_swigregister, METH_O, NULL},
	 { "random_exp_swiginit", random_exp_swiginit, METH_VARARGS, NULL},
	 { "str_dup", _wrap_str_dup, METH_VARARGS, NULL},
	 { "str_del", _wrap_str_del, METH_O, NULL},
	 { "str_new", _wrap_str_new, METH_VARARGS, NULL},
	 { "str_cat", _wrap_str_cat, METH_VARARGS, NULL},
	 { "str_rev", _wrap_str_rev, METH_O, NULL},
	 { "str_sub", _wrap_str_sub, METH_VARARGS, NULL},
	 { "str_rep", _wrap_str_rep, METH_VARARGS, NULL},
	 { "sout", _wrap_sout, METH_O, NULL},
	 { "is_upper", _wrap_is_upper, METH_O, NULL},
	 { "is_lower", _wrap_is_lower, METH_O, NULL},
	 { "is_digit", _wrap_is_digit, METH_O, NULL},
	 { "is_letter", _wrap_is_letter, METH_O, NULL},
	 { "is_printable", _wrap_is_printable, METH_O, NULL},
	 { "int32_format", _wrap_int32_format, METH_NOARGS, NULL},
	 { "int64_format", _wrap_int64_format, METH_NOARGS, NULL},
	 { "uint32_format", _wrap_uint32_format, METH_NOARGS, NULL},
	 { "uint64_format", _wrap_uint64_format, METH_NOARGS, NULL},
	 { "uint32_mx", _wrap_uint32_mx, METH_NOARGS, NULL},
	 { "uint64_mx", _wrap_uint64_mx, METH_NOARGS, NULL},
	 { "fits_bit_m_c_set", _wrap_fits_bit_m_c_set, METH_VARARGS, NULL},
	 { "fits_bit_m_c_get", _wrap_fits_bit_m_c_get, METH_O, NULL},
	 { "new_fits_bit", _wrap_new_fits_bit, METH_NOARGS, NULL},
	 { "delete_fits_bit", _wrap_delete_fits_bit, METH_O, NULL},
	 { "fits_bit_swigregister", fits_bit_swigregister, METH_O, NULL},
	 { "fits_bit_swiginit", fits_bit_swiginit, METH_VARARGS, NULL},
	 { "csv_time_m_l_set", _wrap_csv_time_m_l_set, METH_VARARGS, NULL},
	 { "csv_time_m_l_get", _wrap_csv_time_m_l_get, METH_O, NULL},
	 { "new_csv_time", _wrap_new_csv_time, METH_NOARGS, NULL},
	 { "delete_csv_time", _wrap_delete_csv_time, METH_O, NULL},
	 { "csv_time_swigregister", csv_time_swigregister, METH_O, NULL},
	 { "csv_time_swiginit", csv_time_swiginit, METH_VARARGS, NULL},
	 { "size_char", _wrap_size_char, METH_NOARGS, NULL},
	 { "size_short", _wrap_size_short, METH_NOARGS, NULL},
	 { "size_int", _wrap_size_int, METH_NOARGS, NULL},
	 { "size_int64", _wrap_size_int64, METH_NOARGS, NULL},
	 { "size_float", _wrap_size_float, METH_NOARGS, NULL},
	 { "size_double", _wrap_size_double, METH_NOARGS, NULL},
	 { "tosx", _wrap_tosx, METH_O, NULL},
	 { "tos", _wrap_tos, METH_VARARGS, NULL},
	 { "to", _wrap_to, METH_VARARGS, NULL},
	 { "d2s", _wrap_d2s, METH_O, NULL},
	 { "soutd", _wrap_soutd, METH_O, NULL},
	 { "words", _wrap_words, METH_VARARGS, NULL},
	 { "sep", _wrap_sep, METH_NOARGS, NULL},
	 { "psep", _wrap_psep, METH_NOARGS, NULL},
	 { "res_sep", _wrap_res_sep, METH_NOARGS, NULL},
	 { "isenv", _wrap_isenv, METH_O, NULL},
	 { "getenv", _wrap_getenv, METH_VARARGS, NULL},
	 { "get_env_bool", _wrap_get_env_bool, METH_VARARGS, NULL},
	 { "putenv", _wrap_putenv, METH_VARARGS, NULL},
	 { "rmenv", _wrap_rmenv, METH_O, NULL},
	 { "check_getenv", _wrap_check_getenv, METH_VARARGS, NULL},
	 { "execute", _wrap_execute, METH_O, NULL},
	 { "env_append", _wrap_env_append, METH_VARARGS, NULL},
	 { "env_path_append", _wrap_env_path_append, METH_VARARGS, NULL},
	 { "env_append_path", _wrap_env_append_path, METH_VARARGS, NULL},
	 { "expand_vars", _wrap_expand_vars, METH_O, NULL},
	 { "file_name", _wrap_file_name, METH_VARARGS, NULL},
	 { "plugin_prefix", _wrap_plugin_prefix, METH_NOARGS, NULL},
	 { "plugin_suffix", _wrap_plugin_suffix, METH_NOARGS, NULL},
	 { "plugin_name", _wrap_plugin_name, METH_O, NULL},
	 { "so_name", _wrap_so_name, METH_O, NULL},
	 { "signature", _wrap_signature, METH_VARARGS, NULL},
	 { "is_gzip", _wrap_is_gzip, METH_VARARGS, NULL},
	 { "gzip_usize", _wrap_gzip_usize, METH_VARARGS, NULL},
	 { "suffix", _wrap_suffix, METH_VARARGS, NULL},
	 { "nosuffix", _wrap_nosuffix, METH_VARARGS, NULL},
	 { "base_name", _wrap_base_name, METH_O, NULL},
	 { "is_absolute_path", _wrap_is_absolute_path, METH_O, NULL},
	 { "path_name_suffix", _wrap_path_name_suffix, METH_VARARGS, NULL},
	 { "dir_name", _wrap_dir_name, METH_VARARGS, NULL},
	 { "is_f77", _wrap_is_f77, METH_O, NULL},
	 { "is_cpp", _wrap_is_cpp, METH_O, NULL},
	 { "exists", _wrap_exists, METH_O, NULL},
	 { "size", _wrap_size, METH_VARARGS, NULL},
	 { "is_empty", _wrap_is_empty, METH_O, NULL},
	 { "file_write", _wrap_file_write, METH_VARARGS, NULL},
	 { "read_buff", _wrap_read_buff, METH_VARARGS, NULL},
	 { "read_cstring", _wrap_read_cstring, METH_VARARGS, NULL},
	 { "read", _wrap_read, METH_VARARGS, NULL},
	 { "read_num", _wrap_read_num, METH_VARARGS, NULL},
	 { "read_bytes", _wrap_read_bytes, METH_VARARGS, NULL},
	 { "write_bytes", _wrap_write_bytes, METH_VARARGS, NULL},
	 { "is_zip", _wrap_is_zip, METH_VARARGS, NULL},
	 { "is_jpeg", _wrap_is_jpeg, METH_VARARGS, NULL},
	 { "is_png", _wrap_is_png, METH_VARARGS, NULL},
	 { "is_root", _wrap_is_root, METH_VARARGS, NULL},
	 { "is_iv", _wrap_is_iv, METH_VARARGS, NULL},
	 { "is_fog", _wrap_is_fog, METH_VARARGS, NULL},
	 { "is_dot", _wrap_is_dot, METH_VARARGS, NULL},
	 { "is_dcm", _wrap_is_dcm, METH_VARARGS, NULL},
	 { "is_aida", _wrap_is_aida, METH_VARARGS, NULL},
	 { "is_gdml", _wrap_is_gdml, METH_VARARGS, NULL},
	 { "is_exsg", _wrap_is_exsg, METH_VARARGS, NULL},
	 { "is_bsg", _wrap_is_bsg, METH_VARARGS, NULL},
	 { "is_scenarios", _wrap_is_scenarios, METH_VARARGS, NULL},
	 { "is_slides", _wrap_is_slides, METH_VARARGS, NULL},
	 { "is_fits", _wrap_is_fits, METH_VARARGS, NULL},
	 { "is_hdf", _wrap_is_hdf, METH_VARARGS, NULL},
	 { "is_ps", _wrap_is_ps, METH_VARARGS, NULL},
	 { "is_csv", _wrap_is_csv, METH_VARARGS, NULL},
	 { "is_hippo", _wrap_is_hippo, METH_VARARGS, NULL},
	 { "mime_type", _wrap_mime_type, METH_VARARGS, NULL},
	 { "s_format_guessed", _wrap_s_format_guessed, METH_NOARGS, NULL},
	 { "s_format_hdf5", _wrap_s_format_hdf5, METH_NOARGS, NULL},
	 { "s_format_fits", _wrap_s_format_fits, METH_NOARGS, NULL},
	 { "s_format_fog", _wrap_s_format_fog, METH_NOARGS, NULL},
	 { "s_format_dot", _wrap_s_format_dot, METH_NOARGS, NULL},
	 { "s_format_dcm", _wrap_s_format_dcm, METH_NOARGS, NULL},
	 { "s_format_iv", _wrap_s_format_iv, METH_NOARGS, NULL},
	 { "s_format_jpeg", _wrap_s_format_jpeg, METH_NOARGS, NULL},
	 { "s_format_png", _wrap_s_format_png, METH_NOARGS, NULL},
	 { "s_format_root", _wrap_s_format_root, METH_NOARGS, NULL},
	 { "s_format_csv", _wrap_s_format_csv, METH_NOARGS, NULL},
	 { "s_format_hippo", _wrap_s_format_hippo, METH_NOARGS, NULL},
	 { "s_format_scenarios", _wrap_s_format_scenarios, METH_NOARGS, NULL},
	 { "s_format_slides", _wrap_s_format_slides, METH_NOARGS, NULL},
	 { "s_format_zvid", _wrap_s_format_zvid, METH_NOARGS, NULL},
	 { "s_format_exsg", _wrap_s_format_exsg, METH_NOARGS, NULL},
	 { "s_format_gdml", _wrap_s_format_gdml, METH_NOARGS, NULL},
	 { "s_format_mac", _wrap_s_format_mac, METH_NOARGS, NULL},
	 { "s_format_cmnd", _wrap_s_format_cmnd, METH_NOARGS, NULL},
	 { "s_format_aida", _wrap_s_format_aida, METH_NOARGS, NULL},
	 { "s_format_bsg", _wrap_s_format_bsg, METH_NOARGS, NULL},
	 { "s_ext_hdf5", _wrap_s_ext_hdf5, METH_NOARGS, NULL},
	 { "s_ext_fits", _wrap_s_ext_fits, METH_NOARGS, NULL},
	 { "s_ext_fog", _wrap_s_ext_fog, METH_NOARGS, NULL},
	 { "s_ext_dot", _wrap_s_ext_dot, METH_NOARGS, NULL},
	 { "s_ext_dcm", _wrap_s_ext_dcm, METH_NOARGS, NULL},
	 { "s_ext_iv", _wrap_s_ext_iv, METH_NOARGS, NULL},
	 { "s_ext_hiv", _wrap_s_ext_hiv, METH_NOARGS, NULL},
	 { "s_ext_jpg", _wrap_s_ext_jpg, METH_NOARGS, NULL},
	 { "s_ext_png", _wrap_s_ext_png, METH_NOARGS, NULL},
	 { "s_ext_root", _wrap_s_ext_root, METH_NOARGS, NULL},
	 { "s_ext_csv", _wrap_s_ext_csv, METH_NOARGS, NULL},
	 { "s_ext_hiptxt", _wrap_s_ext_hiptxt, METH_NOARGS, NULL},
	 { "s_ext_tnt", _wrap_s_ext_tnt, METH_NOARGS, NULL},
	 { "s_ext_scenarios", _wrap_s_ext_scenarios, METH_NOARGS, NULL},
	 { "s_ext_slides", _wrap_s_ext_slides, METH_NOARGS, NULL},
	 { "s_ext_zvid", _wrap_s_ext_zvid, METH_NOARGS, NULL},
	 { "s_ext_exsg", _wrap_s_ext_exsg, METH_NOARGS, NULL},
	 { "s_ext_gdml", _wrap_s_ext_gdml, METH_NOARGS, NULL},
	 { "s_ext_mac", _wrap_s_ext_mac, METH_NOARGS, NULL},
	 { "s_ext_cmnd", _wrap_s_ext_cmnd, METH_NOARGS, NULL},
	 { "s_ext_aida", _wrap_s_ext_aida, METH_NOARGS, NULL},
	 { "s_ext_bsg", _wrap_s_ext_bsg, METH_NOARGS, NULL},
	 { "formats", _wrap_formats, METH_O, NULL},
	 { "ext_fmt", _wrap_ext_fmt, METH_O, NULL},
	 { "found", _wrap_found, METH_VARARGS, NULL},
	 { "std_remove", _wrap_std_remove, METH_VARARGS, NULL},
	 { "std_rename", _wrap_std_rename, METH_VARARGS, NULL},
	 { "chmod", _wrap_chmod, METH_VARARGS, NULL},
	 { "quote", _wrap_quote, METH_O, NULL},
	 { "mv", _wrap_mv, METH_VARARGS, NULL},
	 { "cp", _wrap_cp, METH_VARARGS, NULL},
	 { "rm", _wrap_rm, METH_O, NULL},
	 { "delete_reader", _wrap_delete_reader, METH_O, NULL},
	 { "reader_open", _wrap_reader_open, METH_VARARGS, NULL},
	 { "reader_close", _wrap_reader_close, METH_O, NULL},
	 { "reader_is_open", _wrap_reader_is_open, METH_O, NULL},
	 { "reader_read", _wrap_reader_read, METH_VARARGS, NULL},
	 { "reader_swigregister", reader_swigregister, METH_O, NULL},
	 { "FILE_reader_open", _wrap_FILE_reader_open, METH_VARARGS, NULL},
	 { "FILE_reader_close", _wrap_FILE_reader_close, METH_O, NULL},
	 { "FILE_reader_is_open", _wrap_FILE_reader_is_open, METH_O, NULL},
	 { "FILE_reader_read", _wrap_FILE_reader_read, METH_VARARGS, NULL},
	 { "new_FILE_reader", _wrap_new_FILE_reader, METH_NOARGS, NULL},
	 { "delete_FILE_reader", _wrap_delete_FILE_reader, METH_O, NULL},
	 { "FILE_reader_swigregister", FILE_reader_swigregister, METH_O, NULL},
	 { "FILE_reader_swiginit", FILE_reader_swiginit, METH_VARARGS, NULL},
	 { "key_axis_x_title", _wrap_key_axis_x_title, METH_NOARGS, NULL},
	 { "key_axis_y_title", _wrap_key_axis_y_title, METH_NOARGS, NULL},
	 { "key_axis_z_title", _wrap_key_axis_z_title, METH_NOARGS, NULL},
	 { "base_histo_duidd_title", _wrap_base_histo_duidd_title, METH_VARARGS, NULL},
	 { "base_histo_duidd_set_title", _wrap_base_histo_duidd_set_title, METH_VARARGS, NULL},
	 { "base_histo_duidd_dimension", _wrap_base_histo_duidd_dimension, METH_O, NULL},
	 { "base_histo_duidd_entries", _wrap_base_histo_duidd_entries, METH_O, NULL},
	 { "base_histo_duidd_all_entries", _wrap_base_histo_duidd_all_entries, METH_O, NULL},
	 { "base_histo_duidd_extra_entries", _wrap_base_histo_duidd_extra_entries, METH_O, NULL},
	 { "base_histo_duidd_equivalent_bin_entries", _wrap_base_histo_duidd_equivalent_bin_entries, METH_O, NULL},
	 { "base_histo_duidd_sum_bin_heights", _wrap_base_histo_duidd_sum_bin_heights, METH_O, NULL},
	 { "base_histo_duidd_sum_all_bin_heights", _wrap_base_histo_duidd_sum_all_bin_heights, METH_O, NULL},
	 { "base_histo_duidd_sum_extra_bin_heights", _wrap_base_histo_duidd_sum_extra_bin_heights, METH_O, NULL},
	 { "base_histo_duidd_min_bin_height", _wrap_base_histo_duidd_min_bin_height, METH_O, NULL},
	 { "base_histo_duidd_max_bin_height", _wrap_base_histo_duidd_max_bin_height, METH_O, NULL},
	 { "base_histo_duidd_get_entries", _wrap_base_histo_duidd_get_entries, METH_O, NULL},
	 { "base_histo_duidd_get_Sw", _wrap_base_histo_duidd_get_Sw, METH_O, NULL},
	 { "base_histo_duidd_get_Sw2", _wrap_base_histo_duidd_get_Sw2, METH_O, NULL},
	 { "base_histo_duidd_get_ith_axis_Sxw", _wrap_base_histo_duidd_get_ith_axis_Sxw, METH_VARARGS, NULL},
	 { "base_histo_duidd_get_ith_axis_Sx2w", _wrap_base_histo_duidd_get_ith_axis_Sx2w, METH_VARARGS, NULL},
	 { "base_histo_duidd_get_all_entries", _wrap_base_histo_duidd_get_all_entries, METH_O, NULL},
	 { "base_histo_duidd_get_indices", _wrap_base_histo_duidd_get_indices, METH_VARARGS, NULL},
	 { "base_histo_duidd_is_out", _wrap_base_histo_duidd_is_out, METH_VARARGS, NULL},
	 { "base_histo_duidd_get_offset", _wrap_base_histo_duidd_get_offset, METH_VARARGS, NULL},
	 { "base_histo_duidd_bins_entries", _wrap_base_histo_duidd_bins_entries, METH_O, NULL},
	 { "base_histo_duidd_bins_sum_w", _wrap_base_histo_duidd_bins_sum_w, METH_O, NULL},
	 { "base_histo_duidd_bins_sum_w2", _wrap_base_histo_duidd_bins_sum_w2, METH_O, NULL},
	 { "base_histo_duidd_bins_sum_xw", _wrap_base_histo_duidd_bins_sum_xw, METH_O, NULL},
	 { "base_histo_duidd_bins_sum_x2w", _wrap_base_histo_duidd_bins_sum_x2w, METH_O, NULL},
	 { "base_histo_duidd_get_axis", _wrap_base_histo_duidd_get_axis, METH_VARARGS, NULL},
	 { "base_histo_duidd_get_bins", _wrap_base_histo_duidd_get_bins, METH_O, NULL},
	 { "base_histo_duidd_get_title", _wrap_base_histo_duidd_get_title, METH_O, NULL},
	 { "base_histo_duidd_get_dimension", _wrap_base_histo_duidd_get_dimension, METH_O, NULL},
	 { "base_histo_duidd_is_valid", _wrap_base_histo_duidd_is_valid, METH_O, NULL},
	 { "base_histo_duidd_annotations", _wrap_base_histo_duidd_annotations, METH_VARARGS, NULL},
	 { "base_histo_duidd_add_annotation", _wrap_base_histo_duidd_add_annotation, METH_VARARGS, NULL},
	 { "base_histo_duidd_annotation", _wrap_base_histo_duidd_annotation, METH_VARARGS, NULL},
	 { "base_histo_duidd_swigregister", base_histo_duidd_swigregister, METH_O, NULL},
	 { "b1_duidd_bin_error", _wrap_b1_duidd_bin_error, METH_VARARGS, NULL},
	 { "b1_duidd_update_fast_getters", _wrap_b1_duidd_update_fast_getters, METH_O, NULL},
	 { "b1_duidd_coord_to_index", _wrap_b1_duidd_coord_to_index, METH_VARARGS, NULL},
	 { "b1_duidd_mean", _wrap_b1_duidd_mean, METH_O, NULL},
	 { "b1_duidd_rms", _wrap_b1_duidd_rms, METH_O, NULL},
	 { "b1_duidd_bin_entries", _wrap_b1_duidd_bin_entries, METH_VARARGS, NULL},
	 { "b1_duidd_bin_Sw", _wrap_b1_duidd_bin_Sw, METH_VARARGS, NULL},
	 { "b1_duidd_bin_Sw2", _wrap_b1_duidd_bin_Sw2, METH_VARARGS, NULL},
	 { "b1_duidd_bin_Sxw", _wrap_b1_duidd_bin_Sxw, METH_VARARGS, NULL},
	 { "b1_duidd_bin_Sx2w", _wrap_b1_duidd_bin_Sx2w, METH_VARARGS, NULL},
	 { "b1_duidd_bin_height", _wrap_b1_duidd_bin_height, METH_VARARGS, NULL},
	 { "b1_duidd_bin_center", _wrap_b1_duidd_bin_center, METH_VARARGS, NULL},
	 { "b1_duidd_bin_mean", _wrap_b1_duidd_bin_mean, METH_VARARGS, NULL},
	 { "b1_duidd_bin_rms", _wrap_b1_duidd_bin_rms, METH_VARARGS, NULL},
	 { "b1_duidd_axis", _wrap_b1_duidd_axis, METH_VARARGS, NULL},
	 { "b1_duidd_hprint", _wrap_b1_duidd_hprint, METH_VARARGS, NULL},
	 { "b1_duidd_configure", _wrap_b1_duidd_configure, METH_VARARGS, NULL},
	 { "b1_duidd_swigregister", b1_duidd_swigregister, METH_O, NULL},
	 { "b2_duidd_bin_error", _wrap_b2_duidd_bin_error, METH_VARARGS, NULL},
	 { "b2_duidd_update_fast_getters", _wrap_b2_duidd_update_fast_getters, METH_O, NULL},
	 { "b2_duidd_mean_x", _wrap_b2_duidd_mean_x, METH_O, NULL},
	 { "b2_duidd_mean_y", _wrap_b2_duidd_mean_y, METH_O, NULL},
	 { "b2_duidd_rms_x", _wrap_b2_duidd_rms_x, METH_O, NULL},
	 { "b2_duidd_rms_y", _wrap_b2_duidd_rms_y, METH_O, NULL},
	 { "b2_duidd_coord_to_index_x", _wrap_b2_duidd_coord_to_index_x, METH_VARARGS, NULL},
	 { "b2_duidd_coord_to_index_y", _wrap_b2_duidd_coord_to_index_y, METH_VARARGS, NULL},
	 { "b2_duidd_bin_entries", _wrap_b2_duidd_bin_entries, METH_VARARGS, NULL},
	 { "b2_duidd_bin_Sw", _wrap_b2_duidd_bin_Sw, METH_VARARGS, NULL},
	 { "b2_duidd_bin_Sw2", _wrap_b2_duidd_bin_Sw2, METH_VARARGS, NULL},
	 { "b2_duidd_bin_Sxw", _wrap_b2_duidd_bin_Sxw, METH_VARARGS, NULL},
	 { "b2_duidd_bin_Sx2w", _wrap_b2_duidd_bin_Sx2w, METH_VARARGS, NULL},
	 { "b2_duidd_bin_Syw", _wrap_b2_duidd_bin_Syw, METH_VARARGS, NULL},
	 { "b2_duidd_bin_Sy2w", _wrap_b2_duidd_bin_Sy2w, METH_VARARGS, NULL},
	 { "b2_duidd_bin_height", _wrap_b2_duidd_bin_height, METH_VARARGS, NULL},
	 { "b2_duidd_bin_center_x", _wrap_b2_duidd_bin_center_x, METH_VARARGS, NULL},
	 { "b2_duidd_bin_center_y", _wrap_b2_duidd_bin_center_y, METH_VARARGS, NULL},
	 { "b2_duidd_bin_mean_x", _wrap_b2_duidd_bin_mean_x, METH_VARARGS, NULL},
	 { "b2_duidd_bin_mean_y", _wrap_b2_duidd_bin_mean_y, METH_VARARGS, NULL},
	 { "b2_duidd_bin_rms_x", _wrap_b2_duidd_bin_rms_x, METH_VARARGS, NULL},
	 { "b2_duidd_bin_rms_y", _wrap_b2_duidd_bin_rms_y, METH_VARARGS, NULL},
	 { "b2_duidd_axis_x", _wrap_b2_duidd_axis_x, METH_VARARGS, NULL},
	 { "b2_duidd_axis_y", _wrap_b2_duidd_axis_y, METH_VARARGS, NULL},
	 { "b2_duidd_bin_entries_x", _wrap_b2_duidd_bin_entries_x, METH_VARARGS, NULL},
	 { "b2_duidd_bin_height_x", _wrap_b2_duidd_bin_height_x, METH_VARARGS, NULL},
	 { "b2_duidd_bin_entries_y", _wrap_b2_duidd_bin_entries_y, METH_VARARGS, NULL},
	 { "b2_duidd_bin_height_y", _wrap_b2_duidd_bin_height_y, METH_VARARGS, NULL},
	 { "b2_duidd_hprint", _wrap_b2_duidd_hprint, METH_VARARGS, NULL},
	 { "b2_duidd_configure", _wrap_b2_duidd_configure, METH_VARARGS, NULL},
	 { "b2_duidd_swigregister", b2_duidd_swigregister, METH_O, NULL},
	 { "b3_duidd_bin_error", _wrap_b3_duidd_bin_error, METH_VARARGS, NULL},
	 { "b3_duidd_update_fast_getters", _wrap_b3_duidd_update_fast_getters, METH_O, NULL},
	 { "b3_duidd_coord_to_index_x", _wrap_b3_duidd_coord_to_index_x, METH_VARARGS, NULL},
	 { "b3_duidd_coord_to_index_y", _wrap_b3_duidd_coord_to_index_y, METH_VARARGS, NULL},
	 { "b3_duidd_coord_to_index_z", _wrap_b3_duidd_coord_to_index_z, METH_VARARGS, NULL},
	 { "b3_duidd_mean_x", _wrap_b3_duidd_mean_x, METH_O, NULL},
	 { "b3_duidd_mean_y", _wrap_b3_duidd_mean_y, METH_O, NULL},
	 { "b3_duidd_mean_z", _wrap_b3_duidd_mean_z, METH_O, NULL},
	 { "b3_duidd_rms_x", _wrap_b3_duidd_rms_x, METH_O, NULL},
	 { "b3_duidd_rms_y", _wrap_b3_duidd_rms_y, METH_O, NULL},
	 { "b3_duidd_rms_z", _wrap_b3_duidd_rms_z, METH_O, NULL},
	 { "b3_duidd_bin_entries", _wrap_b3_duidd_bin_entries, METH_VARARGS, NULL},
	 { "b3_duidd_bin_height", _wrap_b3_duidd_bin_height, METH_VARARGS, NULL},
	 { "b3_duidd_bin_center_x", _wrap_b3_duidd_bin_center_x, METH_VARARGS, NULL},
	 { "b3_duidd_bin_center_y", _wrap_b3_duidd_bin_center_y, METH_VARARGS, NULL},
	 { "b3_duidd_bin_center_z", _wrap_b3_duidd_bin_center_z, METH_VARARGS, NULL},
	 { "b3_duidd_bin_mean_x", _wrap_b3_duidd_bin_mean_x, METH_VARARGS, NULL},
	 { "b3_duidd_bin_mean_y", _wrap_b3_duidd_bin_mean_y, METH_VARARGS, NULL},
	 { "b3_duidd_bin_mean_z", _wrap_b3_duidd_bin_mean_z, METH_VARARGS, NULL},
	 { "b3_duidd_bin_rms_x", _wrap_b3_duidd_bin_rms_x, METH_VARARGS, NULL},
	 { "b3_duidd_bin_rms_y", _wrap_b3_duidd_bin_rms_y, METH_VARARGS, NULL},
	 { "b3_duidd_bin_rms_z", _wrap_b3_duidd_bin_rms_z, METH_VARARGS, NULL},
	 { "b3_duidd_axis_x", _wrap_b3_duidd_axis_x, METH_VARARGS, NULL},
	 { "b3_duidd_axis_y", _wrap_b3_duidd_axis_y, METH_VARARGS, NULL},
	 { "b3_duidd_axis_z", _wrap_b3_duidd_axis_z, METH_VARARGS, NULL},
	 { "b3_duidd_bin_entries_x", _wrap_b3_duidd_bin_entries_x, METH_VARARGS, NULL},
	 { "b3_duidd_bin_entries_y", _wrap_b3_duidd_bin_entries_y, METH_VARARGS, NULL},
	 { "b3_duidd_bin_entries_z", _wrap_b3_duidd_bin_entries_z, METH_VARARGS, NULL},
	 { "b3_duidd_bin_height_x", _wrap_b3_duidd_bin_height_x, METH_VARARGS, NULL},
	 { "b3_duidd_bin_height_y", _wrap_b3_duidd_bin_height_y, METH_VARARGS, NULL},
	 { "b3_duidd_bin_height_z", _wrap_b3_duidd_bin_height_z, METH_VARARGS, NULL},
	 { "b3_duidd_hprint", _wrap_b3_duidd_hprint, METH_VARARGS, NULL},
	 { "delete_b3_duidd", _wrap_delete_b3_duidd, METH_O, NULL},
	 { "b3_duidd_configure", _wrap_b3_duidd_configure, METH_VARARGS, NULL},
	 { "b3_duidd_swigregister", b3_duidd_swigregister, METH_O, NULL},
	 { "h1_duidd_bin_error", _wrap_h1_duidd_bin_error, METH_VARARGS, NULL},
	 { "h1_duidd_scale", _wrap_h1_duidd_scale, METH_VARARGS, NULL},
	 { "h1_duidd_copy_from_data", _wrap_h1_duidd_copy_from_data, METH_VARARGS, NULL},
	 { "h1_duidd_get_histo_data", _wrap_h1_duidd_get_histo_data, METH_O, NULL},
	 { "h1_duidd_reset", _wrap_h1_duidd_reset, METH_O, NULL},
	 { "h1_duidd_fill", _wrap_h1_duidd_fill, METH_VARARGS, NULL},
	 { "h1_duidd_add", _wrap_h1_duidd_add, METH_VARARGS, NULL},
	 { "h1_duidd_subtract", _wrap_h1_duidd_subtract, METH_VARARGS, NULL},
	 { "h1_duidd_multiply", _wrap_h1_duidd_multiply, METH_VARARGS, NULL},
	 { "h1_duidd_divide", _wrap_h1_duidd_divide, METH_VARARGS, NULL},
	 { "h1_duidd_gather_bins", _wrap_h1_duidd_gather_bins, METH_VARARGS, NULL},
	 { "delete_h1_duidd", _wrap_delete_h1_duidd, METH_O, NULL},
	 { "new_h1_duidd", _wrap_new_h1_duidd, METH_VARARGS, NULL},
	 { "h1_duidd_swigregister", h1_duidd_swigregister, METH_O, NULL},
	 { "h1_duidd_swiginit", h1_duidd_swiginit, METH_VARARGS, NULL},
	 { "h2_duidd_bin_error", _wrap_h2_duidd_bin_error, METH_VARARGS, NULL},
	 { "h2_duidd_scale", _wrap_h2_duidd_scale, METH_VARARGS, NULL},
	 { "h2_duidd_copy_from_data", _wrap_h2_duidd_copy_from_data, METH_VARARGS, NULL},
	 { "h2_duidd_get_histo_data", _wrap_h2_duidd_get_histo_data, METH_O, NULL},
	 { "h2_duidd_reset", _wrap_h2_duidd_reset, METH_O, NULL},
	 { "h2_duidd_fill", _wrap_h2_duidd_fill, METH_VARARGS, NULL},
	 { "h2_duidd_add", _wrap_h2_duidd_add, METH_VARARGS, NULL},
	 { "h2_duidd_subtract", _wrap_h2_duidd_subtract, METH_VARARGS, NULL},
	 { "h2_duidd_multiply", _wrap_h2_duidd_multiply, METH_VARARGS, NULL},
	 { "h2_duidd_divide", _wrap_h2_duidd_divide, METH_VARARGS, NULL},
	 { "delete_h2_duidd", _wrap_delete_h2_duidd, METH_O, NULL},
	 { "new_h2_duidd", _wrap_new_h2_duidd, METH_VARARGS, NULL},
	 { "h2_duidd_swigregister", h2_duidd_swigregister, METH_O, NULL},
	 { "h2_duidd_swiginit", h2_duidd_swiginit, METH_VARARGS, NULL},
	 { "h3_duidd_bin_error", _wrap_h3_duidd_bin_error, METH_VARARGS, NULL},
	 { "h3_duidd_scale", _wrap_h3_duidd_scale, METH_VARARGS, NULL},
	 { "h3_duidd_copy_from_data", _wrap_h3_duidd_copy_from_data, METH_VARARGS, NULL},
	 { "h3_duidd_get_histo_data", _wrap_h3_duidd_get_histo_data, METH_O, NULL},
	 { "h3_duidd_reset", _wrap_h3_duidd_reset, METH_O, NULL},
	 { "h3_duidd_fill", _wrap_h3_duidd_fill, METH_VARARGS, NULL},
	 { "h3_duidd_add", _wrap_h3_duidd_add, METH_VARARGS, NULL},
	 { "h3_duidd_subtract", _wrap_h3_duidd_subtract, METH_VARARGS, NULL},
	 { "h3_duidd_multiply", _wrap_h3_duidd_multiply, METH_VARARGS, NULL},
	 { "h3_duidd_divide", _wrap_h3_duidd_divide, METH_VARARGS, NULL},
	 { "delete_h3_duidd", _wrap_delete_h3_duidd, METH_O, NULL},
	 { "new_h3_duidd", _wrap_new_h3_duidd, METH_VARARGS, NULL},
	 { "h3_duidd_swigregister", h3_duidd_swigregister, METH_O, NULL},
	 { "h3_duidd_swiginit", h3_duidd_swiginit, METH_VARARGS, NULL},
	 { "p1_duiddd_bin_error", _wrap_p1_duiddd_bin_error, METH_VARARGS, NULL},
	 { "p1_duiddd_multiply", _wrap_p1_duiddd_multiply, METH_VARARGS, NULL},
	 { "p1_duiddd_scale", _wrap_p1_duiddd_scale, METH_VARARGS, NULL},
	 { "p1_duiddd_bin_Svw", _wrap_p1_duiddd_bin_Svw, METH_VARARGS, NULL},
	 { "p1_duiddd_bin_Sv2w", _wrap_p1_duiddd_bin_Sv2w, METH_VARARGS, NULL},
	 { "p1_duiddd_reset", _wrap_p1_duiddd_reset, METH_O, NULL},
	 { "p1_duiddd_copy_from_data", _wrap_p1_duiddd_copy_from_data, METH_VARARGS, NULL},
	 { "p1_duiddd_get_histo_data", _wrap_p1_duiddd_get_histo_data, METH_O, NULL},
	 { "p1_duiddd_fill", _wrap_p1_duiddd_fill, METH_VARARGS, NULL},
	 { "p1_duiddd_bin_rms_value", _wrap_p1_duiddd_bin_rms_value, METH_VARARGS, NULL},
	 { "p1_duiddd_add", _wrap_p1_duiddd_add, METH_VARARGS, NULL},
	 { "p1_duiddd_subtract", _wrap_p1_duiddd_subtract, METH_VARARGS, NULL},
	 { "p1_duiddd_gather_bins", _wrap_p1_duiddd_gather_bins, METH_VARARGS, NULL},
	 { "p1_duiddd_cut_v", _wrap_p1_duiddd_cut_v, METH_O, NULL},
	 { "p1_duiddd_min_v", _wrap_p1_duiddd_min_v, METH_O, NULL},
	 { "p1_duiddd_max_v", _wrap_p1_duiddd_max_v, METH_O, NULL},
	 { "delete_p1_duiddd", _wrap_delete_p1_duiddd, METH_O, NULL},
	 { "new_p1_duiddd", _wrap_new_p1_duiddd, METH_VARARGS, NULL},
	 { "p1_duiddd_bins_sum_vw", _wrap_p1_duiddd_bins_sum_vw, METH_O, NULL},
	 { "p1_duiddd_bins_sum_v2w", _wrap_p1_duiddd_bins_sum_v2w, METH_O, NULL},
	 { "p1_duiddd_swigregister", p1_duiddd_swigregister, METH_O, NULL},
	 { "p1_duiddd_swiginit", p1_duiddd_swiginit, METH_VARARGS, NULL},
	 { "p2_duiddd_bin_error", _wrap_p2_duiddd_bin_error, METH_VARARGS, NULL},
	 { "p2_duiddd_multiply", _wrap_p2_duiddd_multiply, METH_VARARGS, NULL},
	 { "p2_duiddd_scale", _wrap_p2_duiddd_scale, METH_VARARGS, NULL},
	 { "p2_duiddd_bin_Svw", _wrap_p2_duiddd_bin_Svw, METH_VARARGS, NULL},
	 { "p2_duiddd_bin_Sv2w", _wrap_p2_duiddd_bin_Sv2w, METH_VARARGS, NULL},
	 { "p2_duiddd_reset", _wrap_p2_duiddd_reset, METH_O, NULL},
	 { "p2_duiddd_copy_from_data", _wrap_p2_duiddd_copy_from_data, METH_VARARGS, NULL},
	 { "p2_duiddd_get_histo_data", _wrap_p2_duiddd_get_histo_data, METH_O, NULL},
	 { "p2_duiddd_fill", _wrap_p2_duiddd_fill, METH_VARARGS, NULL},
	 { "p2_duiddd_bin_rms_value", _wrap_p2_duiddd_bin_rms_value, METH_VARARGS, NULL},
	 { "p2_duiddd_add", _wrap_p2_duiddd_add, METH_VARARGS, NULL},
	 { "p2_duiddd_subtract", _wrap_p2_duiddd_subtract, METH_VARARGS, NULL},
	 { "p2_duiddd_cut_v", _wrap_p2_duiddd_cut_v, METH_O, NULL},
	 { "p2_duiddd_min_v", _wrap_p2_duiddd_min_v, METH_O, NULL},
	 { "p2_duiddd_max_v", _wrap_p2_duiddd_max_v, METH_O, NULL},
	 { "delete_p2_duiddd", _wrap_delete_p2_duiddd, METH_O, NULL},
	 { "new_p2_duiddd", _wrap_new_p2_duiddd, METH_VARARGS, NULL},
	 { "p2_duiddd_bins_sum_vw", _wrap_p2_duiddd_bins_sum_vw, METH_O, NULL},
	 { "p2_duiddd_bins_sum_v2w", _wrap_p2_duiddd_bins_sum_v2w, METH_O, NULL},
	 { "p2_duiddd_swigregister", p2_duiddd_swigregister, METH_O, NULL},
	 { "p2_duiddd_swiginit", p2_duiddd_swiginit, METH_VARARGS, NULL},
	 { "histo_h1d_s_class", _wrap_histo_h1d_s_class, METH_NOARGS, NULL},
	 { "delete_histo_h1d", _wrap_delete_histo_h1d, METH_O, NULL},
	 { "new_histo_h1d", _wrap_new_histo_h1d, METH_VARARGS, NULL},
	 { "histo_h1d_swigregister", histo_h1d_swigregister, METH_O, NULL},
	 { "histo_h1d_swiginit", histo_h1d_swiginit, METH_VARARGS, NULL},
	 { "histo_h2d_s_class", _wrap_histo_h2d_s_class, METH_NOARGS, NULL},
	 { "delete_histo_h2d", _wrap_delete_histo_h2d, METH_O, NULL},
	 { "new_histo_h2d", _wrap_new_histo_h2d, METH_VARARGS, NULL},
	 { "histo_h2d_swigregister", histo_h2d_swigregister, METH_O, NULL},
	 { "histo_h2d_swiginit", histo_h2d_swiginit, METH_VARARGS, NULL},
	 { "histo_h3d_s_class", _wrap_histo_h3d_s_class, METH_NOARGS, NULL},
	 { "delete_histo_h3d", _wrap_delete_histo_h3d, METH_O, NULL},
	 { "new_histo_h3d", _wrap_new_histo_h3d, METH_VARARGS, NULL},
	 { "histo_h3d_swigregister", histo_h3d_swigregister, METH_O, NULL},
	 { "histo_h3d_swiginit", histo_h3d_swiginit, METH_VARARGS, NULL},
	 { "histo_p1d_s_class", _wrap_histo_p1d_s_class, METH_NOARGS, NULL},
	 { "delete_histo_p1d", _wrap_delete_histo_p1d, METH_O, NULL},
	 { "new_histo_p1d", _wrap_new_histo_p1d, METH_VARARGS, NULL},
	 { "histo_p1d_swigregister", histo_p1d_swigregister, METH_O, NULL},
	 { "histo_p1d_swiginit", histo_p1d_swiginit, METH_VARARGS, NULL},
	 { "histo_p2d_s_class", _wrap_histo_p2d_s_class, METH_NOARGS, NULL},
	 { "delete_histo_p2d", _wrap_delete_histo_p2d, METH_O, NULL},
	 { "new_histo_p2d", _wrap_new_histo_p2d, METH_VARARGS, NULL},
	 { "histo_p2d_swigregister", histo_p2d_swigregister, METH_O, NULL},
	 { "histo_p2d_swiginit", histo_p2d_swiginit, METH_VARARGS, NULL},
	 { "version", _wrap_version, METH_NOARGS, NULL},
	 { "begin", _wrap_begin, METH_O, NULL},
	 { "end", _wrap_end, METH_O, NULL},
	 { "bin_to_string", _wrap_bin_to_string, METH_O, NULL},
	 { "write_annotations", _wrap_write_annotations, METH_VARARGS, NULL},
	 { "write_axis", _wrap_write_axis, METH_VARARGS, NULL},
	 { "write_bin", _wrap_write_bin, METH_VARARGS, NULL},
	 { "write", _wrap_write, METH_VARARGS, NULL},
	 { "new_waxml_file", _wrap_new_waxml_file, METH_NOARGS, NULL},
	 { "delete_waxml_file", _wrap_delete_waxml_file, METH_O, NULL},
	 { "waxml_file_open", _wrap_waxml_file_open, METH_VARARGS, NULL},
	 { "waxml_file_close", _wrap_waxml_file_close, METH_O, NULL},
	 { "waxml_file_writer", _wrap_waxml_file_writer, METH_O, NULL},
	 { "waxml_file_write", _wrap_waxml_file_write, METH_VARARGS, NULL},
	 { "waxml_file_swigregister", waxml_file_swigregister, METH_O, NULL},
	 { "waxml_file_swiginit", waxml_file_swiginit, METH_VARARGS, NULL},
	 { "delete_vec2_float", _wrap_delete_vec2_float, METH_O, NULL},
	 { "new_vec2_float", _wrap_new_vec2_float, METH_VARARGS, NULL},
	 { "vec2_float_v0", _wrap_vec2_float_v0, METH_VARARGS, NULL},
	 { "vec2_float_v1", _wrap_vec2_float_v1, METH_VARARGS, NULL},
	 { "vec2_float_x", _wrap_vec2_float_x, METH_O, NULL},
	 { "vec2_float_y", _wrap_vec2_float_y, METH_O, NULL},
	 { "vec2_float_set_value", _wrap_vec2_float_set_value, METH_VARARGS, NULL},
	 { "vec2_float_value", _wrap_vec2_float_value, METH_VARARGS, NULL},
	 { "vec2_float_length", _wrap_vec2_float_length, METH_O, NULL},
	 { "vec2_float_normalize", _wrap_vec2_float_normalize, METH_O, NULL},
	 { "vec2_float_dot", _wrap_vec2_float_dot, METH_VARARGS, NULL},
	 { "vec2_float_cross", _wrap_vec2_float_cross, METH_VARARGS, NULL},
	 { "vec2_float_equal", _wrap_vec2_float_equal, METH_VARARGS, NULL},
	 { "vec2_float_divide", _wrap_vec2_float_divide, METH_VARARGS, NULL},
	 { "vec2_float_add", _wrap_vec2_float_add, METH_VARARGS, NULL},
	 { "vec2_float_subtract", _wrap_vec2_float_subtract, METH_VARARGS, NULL},
	 { "vec2_float___add__", _wrap_vec2_float___add__, METH_VARARGS, NULL},
	 { "vec2_float___sub__", _wrap_vec2_float___sub__, METH_VARARGS, NULL},
	 { "vec2_float___mul__", _wrap_vec2_float___mul__, METH_VARARGS, NULL},
	 { "vec2_float___eq__", _wrap_vec2_float___eq__, METH_VARARGS, NULL},
	 { "vec2_float___ne__", _wrap_vec2_float___ne__, METH_VARARGS, NULL},
	 { "vec2_float_size", _wrap_vec2_float_size, METH_O, NULL},
	 { "vec2_float_data", _wrap_vec2_float_data, METH_O, NULL},
	 { "vec2_float_swigregister", vec2_float_swigregister, METH_O, NULL},
	 { "vec2_float_swiginit", vec2_float_swiginit, METH_VARARGS, NULL},
	 { "delete_vec3_float", _wrap_delete_vec3_float, METH_O, NULL},
	 { "new_vec3_float", _wrap_new_vec3_float, METH_VARARGS, NULL},
	 { "vec3_float_v0", _wrap_vec3_float_v0, METH_VARARGS, NULL},
	 { "vec3_float_v1", _wrap_vec3_float_v1, METH_VARARGS, NULL},
	 { "vec3_float_v2", _wrap_vec3_float_v2, METH_VARARGS, NULL},
	 { "vec3_float_x", _wrap_vec3_float_x, METH_O, NULL},
	 { "vec3_float_y", _wrap_vec3_float_y, METH_O, NULL},
	 { "vec3_float_z", _wrap_vec3_float_z, METH_O, NULL},
	 { "vec3_float_set_value", _wrap_vec3_float_set_value, METH_VARARGS, NULL},
	 { "vec3_float_value", _wrap_vec3_float_value, METH_VARARGS, NULL},
	 { "vec3_float_length", _wrap_vec3_float_length, METH_O, NULL},
	 { "vec3_float_normalize", _wrap_vec3_float_normalize, METH_O, NULL},
	 { "vec3_float_dot", _wrap_vec3_float_dot, METH_VARARGS, NULL},
	 { "vec3_float_cross", _wrap_vec3_float_cross, METH_VARARGS, NULL},
	 { "vec3_float_equal", _wrap_vec3_float_equal, METH_VARARGS, NULL},
	 { "vec3_float_divide", _wrap_vec3_float_divide, METH_VARARGS, NULL},
	 { "vec3_float_multiply", _wrap_vec3_float_multiply, METH_VARARGS, NULL},
	 { "vec3_float_add", _wrap_vec3_float_add, METH_VARARGS, NULL},
	 { "vec3_float_subtract", _wrap_vec3_float_subtract, METH_VARARGS, NULL},
	 { "vec3_float_cos_angle", _wrap_vec3_float_cos_angle, METH_VARARGS, NULL},
	 { "vec3_float___imul__", _wrap_vec3_float___imul__, METH_VARARGS, NULL},
	 { "vec3_float___add__", _wrap_vec3_float___add__, METH_VARARGS, NULL},
	 { "vec3_float___sub__", _wrap_vec3_float___sub__, METH_VARARGS, NULL},
	 { "vec3_float___mul__", _wrap_vec3_float___mul__, METH_VARARGS, NULL},
	 { "vec3_float___eq__", _wrap_vec3_float___eq__, METH_VARARGS, NULL},
	 { "vec3_float___ne__", _wrap_vec3_float___ne__, METH_VARARGS, NULL},
	 { "vec3_float_size", _wrap_vec3_float_size, METH_O, NULL},
	 { "vec3_float_data", _wrap_vec3_float_data, METH_O, NULL},
	 { "vec3_float_swigregister", vec3_float_swigregister, METH_O, NULL},
	 { "vec3_float_swiginit", vec3_float_swiginit, METH_VARARGS, NULL},
	 { "delete_vec3_double", _wrap_delete_vec3_double, METH_O, NULL},
	 { "new_vec3_double", _wrap_new_vec3_double, METH_VARARGS, NULL},
	 { "vec3_double_v0", _wrap_vec3_double_v0, METH_VARARGS, NULL},
	 { "vec3_double_v1", _wrap_vec3_double_v1, METH_VARARGS, NULL},
	 { "vec3_double_v2", _wrap_vec3_double_v2, METH_VARARGS, NULL},
	 { "vec3_double_x", _wrap_vec3_double_x, METH_O, NULL},
	 { "vec3_double_y", _wrap_vec3_double_y, METH_O, NULL},
	 { "vec3_double_z", _wrap_vec3_double_z, METH_O, NULL},
	 { "vec3_double_set_value", _wrap_vec3_double_set_value, METH_VARARGS, NULL},
	 { "vec3_double_value", _wrap_vec3_double_value, METH_VARARGS, NULL},
	 { "vec3_double_length", _wrap_vec3_double_length, METH_O, NULL},
	 { "vec3_double_normalize", _wrap_vec3_double_normalize, METH_O, NULL},
	 { "vec3_double_dot", _wrap_vec3_double_dot, METH_VARARGS, NULL},
	 { "vec3_double_cross", _wrap_vec3_double_cross, METH_VARARGS, NULL},
	 { "vec3_double_equal", _wrap_vec3_double_equal, METH_VARARGS, NULL},
	 { "vec3_double_divide", _wrap_vec3_double_divide, METH_VARARGS, NULL},
	 { "vec3_double_multiply", _wrap_vec3_double_multiply, METH_VARARGS, NULL},
	 { "vec3_double_add", _wrap_vec3_double_add, METH_VARARGS, NULL},
	 { "vec3_double_subtract", _wrap_vec3_double_subtract, METH_VARARGS, NULL},
	 { "vec3_double_cos_angle", _wrap_vec3_double_cos_angle, METH_VARARGS, NULL},
	 { "vec3_double___imul__", _wrap_vec3_double___imul__, METH_VARARGS, NULL},
	 { "vec3_double___add__", _wrap_vec3_double___add__, METH_VARARGS, NULL},
	 { "vec3_double___sub__", _wrap_vec3_double___sub__, METH_VARARGS, NULL},
	 { "vec3_double___mul__", _wrap_vec3_double___mul__, METH_VARARGS, NULL},
	 { "vec3_double___eq__", _wrap_vec3_double___eq__, METH_VARARGS, NULL},
	 { "vec3_double___ne__", _wrap_vec3_double___ne__, METH_VARARGS, NULL},
	 { "vec3_double_size", _wrap_vec3_double_size, METH_O, NULL},
	 { "vec3_double_data", _wrap_vec3_double_data, METH_O, NULL},
	 { "vec3_double_swigregister", vec3_double_swigregister, METH_O, NULL},
	 { "vec3_double_swiginit", vec3_double_swiginit, METH_VARARGS, NULL},
	 { "delete_vec4_float", _wrap_delete_vec4_float, METH_O, NULL},
	 { "new_vec4_float", _wrap_new_vec4_float, METH_VARARGS, NULL},
	 { "vec4_float_v0", _wrap_vec4_float_v0, METH_VARARGS, NULL},
	 { "vec4_float_v1", _wrap_vec4_float_v1, METH_VARARGS, NULL},
	 { "vec4_float_v2", _wrap_vec4_float_v2, METH_VARARGS, NULL},
	 { "vec4_float_v3", _wrap_vec4_float_v3, METH_VARARGS, NULL},
	 { "vec4_float_value", _wrap_vec4_float_value, METH_VARARGS, NULL},
	 { "vec4_float_set_value", _wrap_vec4_float_set_value, METH_VARARGS, NULL},
	 { "vec4_float_length", _wrap_vec4_float_length, METH_O, NULL},
	 { "vec4_float_normalize", _wrap_vec4_float_normalize, METH_O, NULL},
	 { "vec4_float_equal", _wrap_vec4_float_equal, METH_VARARGS, NULL},
	 { "vec4_float_multiply", _wrap_vec4_float_multiply, METH_VARARGS, NULL},
	 { "vec4_float_divide", _wrap_vec4_float_divide, METH_VARARGS, NULL},
	 { "vec4_float_add", _wrap_vec4_float_add, METH_VARARGS, NULL},
	 { "vec4_float_subtract", _wrap_vec4_float_subtract, METH_VARARGS, NULL},
	 { "vec4_float___add__", _wrap_vec4_float___add__, METH_VARARGS, NULL},
	 { "vec4_float___sub__", _wrap_vec4_float___sub__, METH_VARARGS, NULL},
	 { "vec4_float___mul__", _wrap_vec4_float___mul__, METH_VARARGS, NULL},
	 { "vec4_float___eq__", _wrap_vec4_float___eq__, METH_VARARGS, NULL},
	 { "vec4_float___ne__", _wrap_vec4_float___ne__, METH_VARARGS, NULL},
	 { "vec4_float_size", _wrap_vec4_float_size, METH_O, NULL},
	 { "vec4_float_data", _wrap_vec4_float_data, METH_O, NULL},
	 { "vec4_float_swigregister", vec4_float_swigregister, METH_O, NULL},
	 { "vec4_float_swiginit", vec4_float_swiginit, METH_VARARGS, NULL},
	 { "delete_mat_float_4", _wrap_delete_mat_float_4, METH_O, NULL},
	 { "new_mat_float_4", _wrap_new_mat_float_4, METH_VARARGS, NULL},
	 { "mat_float_4_set_value", _wrap_mat_float_4_set_value, METH_VARARGS, NULL},
	 { "mat_float_4_value", _wrap_mat_float_4_value, METH_VARARGS, NULL},
	 { "mat_float_4_set_matrix", _wrap_mat_float_4_set_matrix, METH_VARARGS, NULL},
	 { "mat_float_4_set_constant", _wrap_mat_float_4_set_constant, METH_VARARGS, NULL},
	 { "mat_float_4_set_zero", _wrap_mat_float_4_set_zero, METH_O, NULL},
	 { "mat_float_4_set_identity", _wrap_mat_float_4_set_identity, METH_O, NULL},
	 { "mat_float_4_set_diagonal", _wrap_mat_float_4_set_diagonal, METH_VARARGS, NULL},
	 { "mat_float_4_mul_mtx", _wrap_mat_float_4_mul_mtx, METH_VARARGS, NULL},
	 { "mat_float_4_left_mul_mtx", _wrap_mat_float_4_left_mul_mtx, METH_VARARGS, NULL},
	 { "mat_float_4_data", _wrap_mat_float_4_data, METH_O, NULL},
	 { "mat_float_4_size", _wrap_mat_float_4_size, METH_O, NULL},
	 { "mat_float_4_equal", _wrap_mat_float_4_equal, METH_VARARGS, NULL},
	 { "mat_float_4_trace", _wrap_mat_float_4_trace, METH_O, NULL},
	 { "mat_float_4_transpose", _wrap_mat_float_4_transpose, METH_O, NULL},
	 { "mat_float_4_multiply", _wrap_mat_float_4_multiply, METH_VARARGS, NULL},
	 { "mat_float_4_is_symmetric", _wrap_mat_float_4_is_symmetric, METH_O, NULL},
	 { "mat_float_4_is_antisymmetric", _wrap_mat_float_4_is_antisymmetric, METH_O, NULL},
	 { "mat_float_4_symmetric_part", _wrap_mat_float_4_symmetric_part, METH_VARARGS, NULL},
	 { "mat_float_4_antisymmetric_part", _wrap_mat_float_4_antisymmetric_part, METH_VARARGS, NULL},
	 { "mat_float_4_determinant", _wrap_mat_float_4_determinant, METH_O, NULL},
	 { "mat_float_4_invert", _wrap_mat_float_4_invert, METH_VARARGS, NULL},
	 { "mat_float_4___call__", _wrap_mat_float_4___call__, METH_VARARGS, NULL},
	 { "mat_float_4___eq__", _wrap_mat_float_4___eq__, METH_VARARGS, NULL},
	 { "mat_float_4___ne__", _wrap_mat_float_4___ne__, METH_VARARGS, NULL},
	 { "mat_float_4___iadd__", _wrap_mat_float_4___iadd__, METH_VARARGS, NULL},
	 { "mat_float_4___isub__", _wrap_mat_float_4___isub__, METH_VARARGS, NULL},
	 { "mat_float_4___imul__", _wrap_mat_float_4___imul__, METH_VARARGS, NULL},
	 { "mat_float_4_swigregister", mat_float_4_swigregister, METH_O, NULL},
	 { "mat_float_4_swiginit", mat_float_4_swiginit, METH_VARARGS, NULL},
	 { "delete_mat4_float", _wrap_delete_mat4_float, METH_O, NULL},
	 { "new_mat4_float", _wrap_new_mat4_float, METH_VARARGS, NULL},
	 { "mat4_float_set_matrix", _wrap_mat4_float_set_matrix, METH_VARARGS, NULL},
	 { "mat4_float_set_scale", _wrap_mat4_float_set_scale, METH_VARARGS, NULL},
	 { "mat4_float_set_translate", _wrap_mat4_float_set_translate, METH_VARARGS, NULL},
	 { "mat4_float_set_rotate", _wrap_mat4_float_set_rotate, METH_VARARGS, NULL},
	 { "mat4_float_set_ortho", _wrap_mat4_float_set_ortho, METH_VARARGS, NULL},
	 { "mat4_float_set_frustum", _wrap_mat4_float_set_frustum, METH_VARARGS, NULL},
	 { "mat4_float_get_translate", _wrap_mat4_float_get_translate, METH_VARARGS, NULL},
	 { "mat4_float_mul_4", _wrap_mat4_float_mul_4, METH_VARARGS, NULL},
	 { "mat4_float_mul_3", _wrap_mat4_float_mul_3, METH_VARARGS, NULL},
	 { "mat4_float_mul_2", _wrap_mat4_float_mul_2, METH_VARARGS, NULL},
	 { "mat4_float_mul_scale", _wrap_mat4_float_mul_scale, METH_VARARGS, NULL},
	 { "mat4_float_mul_translate", _wrap_mat4_float_mul_translate, METH_VARARGS, NULL},
	 { "mat4_float_mul_rotate", _wrap_mat4_float_mul_rotate, METH_VARARGS, NULL},
	 { "mat4_float_left_mul_rotate", _wrap_mat4_float_left_mul_rotate, METH_VARARGS, NULL},
	 { "mat4_float_left_mul_scale", _wrap_mat4_float_left_mul_scale, METH_VARARGS, NULL},
	 { "mat4_float_left_mul_translate", _wrap_mat4_float_left_mul_translate, METH_VARARGS, NULL},
	 { "mat4_float_v00", _wrap_mat4_float_v00, METH_VARARGS, NULL},
	 { "mat4_float_v10", _wrap_mat4_float_v10, METH_VARARGS, NULL},
	 { "mat4_float_v20", _wrap_mat4_float_v20, METH_VARARGS, NULL},
	 { "mat4_float_v30", _wrap_mat4_float_v30, METH_VARARGS, NULL},
	 { "mat4_float_v01", _wrap_mat4_float_v01, METH_VARARGS, NULL},
	 { "mat4_float_v11", _wrap_mat4_float_v11, METH_VARARGS, NULL},
	 { "mat4_float_v21", _wrap_mat4_float_v21, METH_VARARGS, NULL},
	 { "mat4_float_v31", _wrap_mat4_float_v31, METH_VARARGS, NULL},
	 { "mat4_float_v02", _wrap_mat4_float_v02, METH_VARARGS, NULL},
	 { "mat4_float_v12", _wrap_mat4_float_v12, METH_VARARGS, NULL},
	 { "mat4_float_v22", _wrap_mat4_float_v22, METH_VARARGS, NULL},
	 { "mat4_float_v32", _wrap_mat4_float_v32, METH_VARARGS, NULL},
	 { "mat4_float_v03", _wrap_mat4_float_v03, METH_VARARGS, NULL},
	 { "mat4_float_v13", _wrap_mat4_float_v13, METH_VARARGS, NULL},
	 { "mat4_float_v23", _wrap_mat4_float_v23, METH_VARARGS, NULL},
	 { "mat4_float_v33", _wrap_mat4_float_v33, METH_VARARGS, NULL},
	 { "mat4_float_mul_mtx_rot_root", _wrap_mat4_float_mul_mtx_rot_root, METH_VARARGS, NULL},
	 { "mat4_float_swigregister", mat4_float_swigregister, METH_O, NULL},
	 { "mat4_float_swiginit", mat4_float_swiginit, METH_VARARGS, NULL},
	 { "delete_qrot_float", _wrap_delete_qrot_float, METH_O, NULL},
	 { "new_qrot_float", _wrap_new_qrot_float, METH_VARARGS, NULL},
	 { "qrot_float___imul__", _wrap_qrot_float___imul__, METH_VARARGS, NULL},
	 { "qrot_float___eq__", _wrap_qrot_float___eq__, METH_VARARGS, NULL},
	 { "qrot_float___ne__", _wrap_qrot_float___ne__, METH_VARARGS, NULL},
	 { "qrot_float___mul__", _wrap_qrot_float___mul__, METH_VARARGS, NULL},
	 { "qrot_float_invert", _wrap_qrot_float_invert, METH_O, NULL},
	 { "qrot_float_inverse", _wrap_qrot_float_inverse, METH_VARARGS, NULL},
	 { "qrot_float_set_value", _wrap_qrot_float_set_value, METH_VARARGS, NULL},
	 { "qrot_float_value", _wrap_qrot_float_value, METH_VARARGS, NULL},
	 { "qrot_float_mult_vec", _wrap_qrot_float_mult_vec, METH_VARARGS, NULL},
	 { "qrot_float_mul_3f", _wrap_qrot_float_mul_3f, METH_VARARGS, NULL},
	 { "qrot_float_quat", _wrap_qrot_float_quat, METH_VARARGS, NULL},
	 { "qrot_float_swigregister", qrot_float_swigregister, METH_O, NULL},
	 { "qrot_float_swiginit", qrot_float_swiginit, METH_VARARGS, NULL},
	 { "delete_vec3f", _wrap_delete_vec3f, METH_O, NULL},
	 { "new_vec3f", _wrap_new_vec3f, METH_VARARGS, NULL},
	 { "vec3f___mul__", _wrap_vec3f___mul__, METH_VARARGS, NULL},
	 { "vec3f___add__", _wrap_vec3f___add__, METH_VARARGS, NULL},
	 { "vec3f___sub__", _wrap_vec3f___sub__, METH_VARARGS, NULL},
	 { "vec3f___iadd__", _wrap_vec3f___iadd__, METH_VARARGS, NULL},
	 { "vec3f___imul__", _wrap_vec3f___imul__, METH_VARARGS, NULL},
	 { "vec3f___neg__", _wrap_vec3f___neg__, METH_O, NULL},
	 { "vec3f_swigregister", vec3f_swigregister, METH_O, NULL},
	 { "vec3f_swiginit", vec3f_swiginit, METH_VARARGS, NULL},
	 { "__mul__", _wrap___mul__, METH_VARARGS, NULL},
	 { "delete_rotf", _wrap_delete_rotf, METH_O, NULL},
	 { "new_rotf", _wrap_new_rotf, METH_VARARGS, NULL},
	 { "rotf___imul__", _wrap_rotf___imul__, METH_VARARGS, NULL},
	 { "rotf___mul__", _wrap_rotf___mul__, METH_VARARGS, NULL},
	 { "rotf_set_value", _wrap_rotf_set_value, METH_VARARGS, NULL},
	 { "rotf_swigregister", rotf_swigregister, METH_O, NULL},
	 { "rotf_swiginit", rotf_swiginit, METH_VARARGS, NULL},
	 { "delete_vec4f", _wrap_delete_vec4f, METH_O, NULL},
	 { "new_vec4f", _wrap_new_vec4f, METH_VARARGS, NULL},
	 { "vec4f___mul__", _wrap_vec4f___mul__, METH_VARARGS, NULL},
	 { "vec4f___add__", _wrap_vec4f___add__, METH_VARARGS, NULL},
	 { "vec4f___sub__", _wrap_vec4f___sub__, METH_VARARGS, NULL},
	 { "vec4f___iadd__", _wrap_vec4f___iadd__, METH_VARARGS, NULL},
	 { "vec4f___imul__", _wrap_vec4f___imul__, METH_VARARGS, NULL},
	 { "vec4f___neg__", _wrap_vec4f___neg__, METH_O, NULL},
	 { "vec4f_swigregister", vec4f_swigregister, METH_O, NULL},
	 { "vec4f_swiginit", vec4f_swiginit, METH_VARARGS, NULL},
	 { "delete_colorf", _wrap_delete_colorf, METH_O, NULL},
	 { "new_colorf", _wrap_new_colorf, METH_VARARGS, NULL},
	 { "colorf_r", _wrap_colorf_r, METH_O, NULL},
	 { "colorf_g", _wrap_colorf_g, METH_O, NULL},
	 { "colorf_b", _wrap_colorf_b, METH_O, NULL},
	 { "colorf_a", _wrap_colorf_a, METH_O, NULL},
	 { "colorf_set_r", _wrap_colorf_set_r, METH_VARARGS, NULL},
	 { "colorf_set_g", _wrap_colorf_set_g, METH_VARARGS, NULL},
	 { "colorf_set_b", _wrap_colorf_set_b, METH_VARARGS, NULL},
	 { "colorf_set_a", _wrap_colorf_set_a, METH_VARARGS, NULL},
	 { "colorf_tos", _wrap_colorf_tos, METH_O, NULL},
	 { "colorf_aquamarine", _wrap_colorf_aquamarine, METH_NOARGS, NULL},
	 { "colorf_mediumaquamarine", _wrap_colorf_mediumaquamarine, METH_NOARGS, NULL},
	 { "colorf_black", _wrap_colorf_black, METH_NOARGS, NULL},
	 { "colorf_blue", _wrap_colorf_blue, METH_NOARGS, NULL},
	 { "colorf_cadetblue", _wrap_colorf_cadetblue, METH_NOARGS, NULL},
	 { "colorf_cornflowerblue", _wrap_colorf_cornflowerblue, METH_NOARGS, NULL},
	 { "colorf_darkslateblue", _wrap_colorf_darkslateblue, METH_NOARGS, NULL},
	 { "colorf_lightblue", _wrap_colorf_lightblue, METH_NOARGS, NULL},
	 { "colorf_lightsteelblue", _wrap_colorf_lightsteelblue, METH_NOARGS, NULL},
	 { "colorf_mediumblue", _wrap_colorf_mediumblue, METH_NOARGS, NULL},
	 { "colorf_mediumslateblue", _wrap_colorf_mediumslateblue, METH_NOARGS, NULL},
	 { "colorf_midnightblue", _wrap_colorf_midnightblue, METH_NOARGS, NULL},
	 { "colorf_navyblue", _wrap_colorf_navyblue, METH_NOARGS, NULL},
	 { "colorf_navy", _wrap_colorf_navy, METH_NOARGS, NULL},
	 { "colorf_skyblue", _wrap_colorf_skyblue, METH_NOARGS, NULL},
	 { "colorf_slateblue", _wrap_colorf_slateblue, METH_NOARGS, NULL},
	 { "colorf_steelblue", _wrap_colorf_steelblue, METH_NOARGS, NULL},
	 { "colorf_coral", _wrap_colorf_coral, METH_NOARGS, NULL},
	 { "colorf_cyan", _wrap_colorf_cyan, METH_NOARGS, NULL},
	 { "colorf_firebrick", _wrap_colorf_firebrick, METH_NOARGS, NULL},
	 { "colorf_brown", _wrap_colorf_brown, METH_NOARGS, NULL},
	 { "colorf_gold", _wrap_colorf_gold, METH_NOARGS, NULL},
	 { "colorf_goldenrod", _wrap_colorf_goldenrod, METH_NOARGS, NULL},
	 { "colorf_green", _wrap_colorf_green, METH_NOARGS, NULL},
	 { "colorf_darkgreen", _wrap_colorf_darkgreen, METH_NOARGS, NULL},
	 { "colorf_darkolivegreen", _wrap_colorf_darkolivegreen, METH_NOARGS, NULL},
	 { "colorf_forestgreen", _wrap_colorf_forestgreen, METH_NOARGS, NULL},
	 { "colorf_limegreen", _wrap_colorf_limegreen, METH_NOARGS, NULL},
	 { "colorf_mediumseagreen", _wrap_colorf_mediumseagreen, METH_NOARGS, NULL},
	 { "colorf_mediumspringgreen", _wrap_colorf_mediumspringgreen, METH_NOARGS, NULL},
	 { "colorf_palegreen", _wrap_colorf_palegreen, METH_NOARGS, NULL},
	 { "colorf_seagreen", _wrap_colorf_seagreen, METH_NOARGS, NULL},
	 { "colorf_springgreen", _wrap_colorf_springgreen, METH_NOARGS, NULL},
	 { "colorf_yellowgreen", _wrap_colorf_yellowgreen, METH_NOARGS, NULL},
	 { "colorf_darkslategrey", _wrap_colorf_darkslategrey, METH_NOARGS, NULL},
	 { "colorf_dimgrey", _wrap_colorf_dimgrey, METH_NOARGS, NULL},
	 { "colorf_lightgrey", _wrap_colorf_lightgrey, METH_NOARGS, NULL},
	 { "colorf_grey", _wrap_colorf_grey, METH_NOARGS, NULL},
	 { "colorf_khaki", _wrap_colorf_khaki, METH_NOARGS, NULL},
	 { "colorf_magenta", _wrap_colorf_magenta, METH_NOARGS, NULL},
	 { "colorf_maroon", _wrap_colorf_maroon, METH_NOARGS, NULL},
	 { "colorf_orange", _wrap_colorf_orange, METH_NOARGS, NULL},
	 { "colorf_orchid", _wrap_colorf_orchid, METH_NOARGS, NULL},
	 { "colorf_darkorchid", _wrap_colorf_darkorchid, METH_NOARGS, NULL},
	 { "colorf_mediumorchid", _wrap_colorf_mediumorchid, METH_NOARGS, NULL},
	 { "colorf_pink", _wrap_colorf_pink, METH_NOARGS, NULL},
	 { "colorf_plum", _wrap_colorf_plum, METH_NOARGS, NULL},
	 { "colorf_red", _wrap_colorf_red, METH_NOARGS, NULL},
	 { "colorf_indianred", _wrap_colorf_indianred, METH_NOARGS, NULL},
	 { "colorf_mediumvioletred", _wrap_colorf_mediumvioletred, METH_NOARGS, NULL},
	 { "colorf_orangered", _wrap_colorf_orangered, METH_NOARGS, NULL},
	 { "colorf_violetred", _wrap_colorf_violetred, METH_NOARGS, NULL},
	 { "colorf_salmon", _wrap_colorf_salmon, METH_NOARGS, NULL},
	 { "colorf_sienna", _wrap_colorf_sienna, METH_NOARGS, NULL},
	 { "colorf_tan", _wrap_colorf_tan, METH_NOARGS, NULL},
	 { "colorf_thistle", _wrap_colorf_thistle, METH_NOARGS, NULL},
	 { "colorf_turquoise", _wrap_colorf_turquoise, METH_NOARGS, NULL},
	 { "colorf_darkturquoise", _wrap_colorf_darkturquoise, METH_NOARGS, NULL},
	 { "colorf_mediumturquoise", _wrap_colorf_mediumturquoise, METH_NOARGS, NULL},
	 { "colorf_violet", _wrap_colorf_violet, METH_NOARGS, NULL},
	 { "colorf_blueviolet", _wrap_colorf_blueviolet, METH_NOARGS, NULL},
	 { "colorf_wheat", _wrap_colorf_wheat, METH_NOARGS, NULL},
	 { "colorf_white", _wrap_colorf_white, METH_NOARGS, NULL},
	 { "colorf_yellow", _wrap_colorf_yellow, METH_NOARGS, NULL},
	 { "colorf_greenyellow", _wrap_colorf_greenyellow, METH_NOARGS, NULL},
	 { "colorf_to", _wrap_colorf_to, METH_O, NULL},
	 { "colorf_swigregister", colorf_swigregister, METH_O, NULL},
	 { "colorf_swiginit", colorf_swiginit, METH_VARARGS, NULL},
	 { "cmp_colorf___call__", _wrap_cmp_colorf___call__, METH_VARARGS, NULL},
	 { "new_cmp_colorf", _wrap_new_cmp_colorf, METH_NOARGS, NULL},
	 { "delete_cmp_colorf", _wrap_delete_cmp_colorf, METH_O, NULL},
	 { "cmp_colorf_swigregister", cmp_colorf_swigregister, METH_O, NULL},
	 { "cmp_colorf_swiginit", cmp_colorf_swiginit, METH_VARARGS, NULL},
	 { "rcmp", _wrap_rcmp, METH_VARARGS, NULL},
	 { "field_write", _wrap_field_write, METH_VARARGS, NULL},
	 { "field_read", _wrap_field_read, METH_VARARGS, NULL},
	 { "field_dump", _wrap_field_dump, METH_VARARGS, NULL},
	 { "field_touch", _wrap_field_touch, METH_O, NULL},
	 { "field_touched", _wrap_field_touched, METH_O, NULL},
	 { "field_reset_touched", _wrap_field_reset_touched, METH_O, NULL},
	 { "field_swigregister", field_swigregister, METH_O, NULL},
	 { "delete_bsf_bool", _wrap_delete_bsf_bool, METH_O, NULL},
	 { "bsf_bool___eq__", _wrap_bsf_bool___eq__, METH_VARARGS, NULL},
	 { "bsf_bool___ne__", _wrap_bsf_bool___ne__, METH_VARARGS, NULL},
	 { "bsf_bool___nonzero__", _wrap_bsf_bool___nonzero__, METH_O, NULL},
	 { "bsf_bool_value", _wrap_bsf_bool_value, METH_VARARGS, NULL},
	 { "bsf_bool_value_no_cmp", _wrap_bsf_bool_value_no_cmp, METH_VARARGS, NULL},
	 { "bsf_bool_swigregister", bsf_bool_swigregister, METH_O, NULL},
	 { "delete_bsf_float", _wrap_delete_bsf_float, METH_O, NULL},
	 { "bsf_float___eq__", _wrap_bsf_float___eq__, METH_VARARGS, NULL},
	 { "bsf_float___ne__", _wrap_bsf_float___ne__, METH_VARARGS, NULL},
	 { "bsf_float_value", _wrap_bsf_float_value, METH_VARARGS, NULL},
	 { "bsf_float_value_no_cmp", _wrap_bsf_float_value_no_cmp, METH_VARARGS, NULL},
	 { "bsf_float_swigregister", bsf_float_swigregister, METH_O, NULL},
	 { "delete_bsf_string", _wrap_delete_bsf_string, METH_O, NULL},
	 { "bsf_string___eq__", _wrap_bsf_string___eq__, METH_VARARGS, NULL},
	 { "bsf_string___ne__", _wrap_bsf_string___ne__, METH_VARARGS, NULL},
	 { "bsf_string_value", _wrap_bsf_string_value, METH_VARARGS, NULL},
	 { "bsf_string_value_no_cmp", _wrap_bsf_string_value_no_cmp, METH_VARARGS, NULL},
	 { "bsf_string_swigregister", bsf_string_swigregister, METH_O, NULL},
	 { "delete_bsf_rotf", _wrap_delete_bsf_rotf, METH_O, NULL},
	 { "bsf_rotf___eq__", _wrap_bsf_rotf___eq__, METH_VARARGS, NULL},
	 { "bsf_rotf___ne__", _wrap_bsf_rotf___ne__, METH_VARARGS, NULL},
	 { "bsf_rotf_value", _wrap_bsf_rotf_value, METH_VARARGS, NULL},
	 { "bsf_rotf_value_no_cmp", _wrap_bsf_rotf_value_no_cmp, METH_VARARGS, NULL},
	 { "bsf_rotf_swigregister", bsf_rotf_swigregister, METH_O, NULL},
	 { "delete_bsf_colorf", _wrap_delete_bsf_colorf, METH_O, NULL},
	 { "bsf_colorf___eq__", _wrap_bsf_colorf___eq__, METH_VARARGS, NULL},
	 { "bsf_colorf___ne__", _wrap_bsf_colorf___ne__, METH_VARARGS, NULL},
	 { "bsf_colorf_value", _wrap_bsf_colorf_value, METH_VARARGS, NULL},
	 { "bsf_colorf_value_no_cmp", _wrap_bsf_colorf_value_no_cmp, METH_VARARGS, NULL},
	 { "bsf_colorf_swigregister", bsf_colorf_swigregister, METH_O, NULL},
	 { "delete_bsf_winding_type", _wrap_delete_bsf_winding_type, METH_O, NULL},
	 { "bsf_winding_type___eq__", _wrap_bsf_winding_type___eq__, METH_VARARGS, NULL},
	 { "bsf_winding_type___ne__", _wrap_bsf_winding_type___ne__, METH_VARARGS, NULL},
	 { "bsf_winding_type_value", _wrap_bsf_winding_type_value, METH_VARARGS, NULL},
	 { "bsf_winding_type_value_no_cmp", _wrap_bsf_winding_type_value_no_cmp, METH_VARARGS, NULL},
	 { "bsf_winding_type_swigregister", bsf_winding_type_swigregister, METH_O, NULL},
	 { "delete_iwbuf", _wrap_delete_iwbuf, METH_O, NULL},
	 { "iwbuf_write", _wrap_iwbuf_write, METH_VARARGS, NULL},
	 { "iwbuf_write_vec", _wrap_iwbuf_write_vec, METH_VARARGS, NULL},
	 { "iwbuf_write_cstr", _wrap_iwbuf_write_cstr, METH_VARARGS, NULL},
	 { "iwbuf_write_img", _wrap_iwbuf_write_img, METH_VARARGS, NULL},
	 { "iwbuf_write_std_vec_vec", _wrap_iwbuf_write_std_vec_vec, METH_VARARGS, NULL},
	 { "iwbuf_buf", _wrap_iwbuf_buf, METH_O, NULL},
	 { "iwbuf_length", _wrap_iwbuf_length, METH_O, NULL},
	 { "iwbuf_swigregister", iwbuf_swigregister, METH_O, NULL},
	 { "delete_irbuf", _wrap_delete_irbuf, METH_O, NULL},
	 { "irbuf_read", _wrap_irbuf_read, METH_VARARGS, NULL},
	 { "irbuf_read_vec", _wrap_irbuf_read_vec, METH_VARARGS, NULL},
	 { "irbuf_read_cstr", _wrap_irbuf_read_cstr, METH_VARARGS, NULL},
	 { "irbuf_read_img", _wrap_irbuf_read_img, METH_VARARGS, NULL},
	 { "irbuf_read_std_vec_vec", _wrap_irbuf_read_std_vec_vec, METH_VARARGS, NULL},
	 { "irbuf_swigregister", irbuf_swigregister, METH_O, NULL},
	 { "sf_bool_write", _wrap_sf_bool_write, METH_VARARGS, NULL},
	 { "sf_bool_read", _wrap_sf_bool_read, METH_VARARGS, NULL},
	 { "sf_bool_dump", _wrap_sf_bool_dump, METH_VARARGS, NULL},
	 { "new_sf_bool", _wrap_new_sf_bool, METH_VARARGS, NULL},
	 { "delete_sf_bool", _wrap_delete_sf_bool, METH_O, NULL},
	 { "sf_bool_swigregister", sf_bool_swigregister, METH_O, NULL},
	 { "sf_bool_swiginit", sf_bool_swiginit, METH_VARARGS, NULL},
	 { "sf_float_write", _wrap_sf_float_write, METH_VARARGS, NULL},
	 { "sf_float_read", _wrap_sf_float_read, METH_VARARGS, NULL},
	 { "sf_float_dump", _wrap_sf_float_dump, METH_VARARGS, NULL},
	 { "new_sf_float", _wrap_new_sf_float, METH_VARARGS, NULL},
	 { "delete_sf_float", _wrap_delete_sf_float, METH_O, NULL},
	 { "sf_float_swigregister", sf_float_swigregister, METH_O, NULL},
	 { "sf_float_swiginit", sf_float_swiginit, METH_VARARGS, NULL},
	 { "tex_expand_size", _wrap_tex_expand_size, METH_VARARGS, NULL},
	 { "sf_string_write", _wrap_sf_string_write, METH_VARARGS, NULL},
	 { "sf_string_read", _wrap_sf_string_read, METH_VARARGS, NULL},
	 { "sf_string_dump", _wrap_sf_string_dump, METH_VARARGS, NULL},
	 { "delete_sf_string", _wrap_delete_sf_string, METH_O, NULL},
	 { "new_sf_string", _wrap_new_sf_string, METH_VARARGS, NULL},
	 { "sf_string_swigregister", sf_string_swigregister, METH_O, NULL},
	 { "sf_string_swiginit", sf_string_swiginit, METH_VARARGS, NULL},
	 { "sf_rotf_write", _wrap_sf_rotf_write, METH_VARARGS, NULL},
	 { "sf_rotf_read", _wrap_sf_rotf_read, METH_VARARGS, NULL},
	 { "sf_rotf_dump", _wrap_sf_rotf_dump, METH_VARARGS, NULL},
	 { "delete_sf_rotf", _wrap_delete_sf_rotf, METH_O, NULL},
	 { "new_sf_rotf", _wrap_new_sf_rotf, METH_VARARGS, NULL},
	 { "sf_rotf_swigregister", sf_rotf_swigregister, METH_O, NULL},
	 { "sf_rotf_swiginit", sf_rotf_swiginit, METH_VARARGS, NULL},
	 { "sf_vec_colorf_write", _wrap_sf_vec_colorf_write, METH_VARARGS, NULL},
	 { "sf_vec_colorf_read", _wrap_sf_vec_colorf_read, METH_VARARGS, NULL},
	 { "sf_vec_colorf_dump", _wrap_sf_vec_colorf_dump, METH_VARARGS, NULL},
	 { "delete_sf_vec_colorf", _wrap_delete_sf_vec_colorf, METH_O, NULL},
	 { "new_sf_vec_colorf", _wrap_new_sf_vec_colorf, METH_VARARGS, NULL},
	 { "sf_vec_colorf_swigregister", sf_vec_colorf_swigregister, METH_O, NULL},
	 { "sf_vec_colorf_swiginit", sf_vec_colorf_swiginit, METH_VARARGS, NULL},
	 { "sf_enum_winding_type_write", _wrap_sf_enum_winding_type_write, METH_VARARGS, NULL},
	 { "sf_enum_winding_type_read", _wrap_sf_enum_winding_type_read, METH_VARARGS, NULL},
	 { "sf_enum_winding_type_dump", _wrap_sf_enum_winding_type_dump, METH_VARARGS, NULL},
	 { "delete_sf_enum_winding_type", _wrap_delete_sf_enum_winding_type, METH_O, NULL},
	 { "new_sf_enum_winding_type", _wrap_new_sf_enum_winding_type, METH_VARARGS, NULL},
	 { "sf_enum_winding_type_swigregister", sf_enum_winding_type_swigregister, METH_O, NULL},
	 { "sf_enum_winding_type_swiginit", sf_enum_winding_type_swiginit, METH_VARARGS, NULL},
	 { "delete_bmf_string", _wrap_delete_bmf_string, METH_O, NULL},
	 { "bmf_string___eq__", _wrap_bmf_string___eq__, METH_VARARGS, NULL},
	 { "bmf_string___ne__", _wrap_bmf_string___ne__, METH_VARARGS, NULL},
	 { "bmf_string_size", _wrap_bmf_string_size, METH_O, NULL},
	 { "bmf_string_empty", _wrap_bmf_string_empty, METH_O, NULL},
	 { "bmf_string_values", _wrap_bmf_string_values, METH_VARARGS, NULL},
	 { "bmf_string_add", _wrap_bmf_string_add, METH_VARARGS, NULL},
	 { "bmf_string_insert", _wrap_bmf_string_insert, METH_VARARGS, NULL},
	 { "bmf_string_set_value", _wrap_bmf_string_set_value, METH_VARARGS, NULL},
	 { "bmf_string_get_value", _wrap_bmf_string_get_value, METH_VARARGS, NULL},
	 { "bmf_string_clear", _wrap_bmf_string_clear, METH_O, NULL},
	 { "bmf_string_set_values", _wrap_bmf_string_set_values, METH_VARARGS, NULL},
	 { "bmf_string_swigregister", bmf_string_swigregister, METH_O, NULL},
	 { "mf_string_write", _wrap_mf_string_write, METH_VARARGS, NULL},
	 { "mf_string_read", _wrap_mf_string_read, METH_VARARGS, NULL},
	 { "mf_string_dump", _wrap_mf_string_dump, METH_VARARGS, NULL},
	 { "delete_mf_string", _wrap_delete_mf_string, METH_O, NULL},
	 { "new_mf_string", _wrap_new_mf_string, METH_VARARGS, NULL},
	 { "mf_string_swigregister", mf_string_swigregister, METH_O, NULL},
	 { "mf_string_swiginit", mf_string_swiginit, METH_VARARGS, NULL},
	 { "__lshift__", _wrap___lshift__, METH_VARARGS, NULL},
	 { "set_from_vec", _wrap_set_from_vec, METH_VARARGS, NULL},
	 { "get_data", _wrap_get_data, METH_O, NULL},
	 { "tick_modeling_none", _wrap_tick_modeling_none, METH_NOARGS, NULL},
	 { "tick_modeling_hippo", _wrap_tick_modeling_hippo, METH_NOARGS, NULL},
	 { "tick_modeling_hplot", _wrap_tick_modeling_hplot, METH_NOARGS, NULL},
	 { "infos_modeling_ROOT", _wrap_infos_modeling_ROOT, METH_NOARGS, NULL},
	 { "encoding_none", _wrap_encoding_none, METH_NOARGS, NULL},
	 { "encoding_PAW", _wrap_encoding_PAW, METH_NOARGS, NULL},
	 { "modeling_boxes", _wrap_modeling_boxes, METH_NOARGS, NULL},
	 { "modeling_wire_boxes", _wrap_modeling_wire_boxes, METH_NOARGS, NULL},
	 { "modeling_lines", _wrap_modeling_lines, METH_NOARGS, NULL},
	 { "modeling_segments", _wrap_modeling_segments, METH_NOARGS, NULL},
	 { "modeling_points", _wrap_modeling_points, METH_NOARGS, NULL},
	 { "modeling_top_lines", _wrap_modeling_top_lines, METH_NOARGS, NULL},
	 { "modeling_texts", _wrap_modeling_texts, METH_NOARGS, NULL},
	 { "modeling_curve", _wrap_modeling_curve, METH_NOARGS, NULL},
	 { "modeling_filled_curve", _wrap_modeling_filled_curve, METH_NOARGS, NULL},
	 { "modeling_bar_chart", _wrap_modeling_bar_chart, METH_NOARGS, NULL},
	 { "modeling_solid", _wrap_modeling_solid, METH_NOARGS, NULL},
	 { "modeling_wire_frame", _wrap_modeling_wire_frame, METH_NOARGS, NULL},
	 { "modeling_reduced_wire_frame", _wrap_modeling_reduced_wire_frame, METH_NOARGS, NULL},
	 { "modeling_polygon", _wrap_modeling_polygon, METH_NOARGS, NULL},
	 { "modeling_none", _wrap_modeling_none, METH_NOARGS, NULL},
	 { "modeling_I", _wrap_modeling_I, METH_NOARGS, NULL},
	 { "modeling_plus", _wrap_modeling_plus, METH_NOARGS, NULL},
	 { "light_model_base_color", _wrap_light_model_base_color, METH_NOARGS, NULL},
	 { "light_model_phong", _wrap_light_model_phong, METH_NOARGS, NULL},
	 { "font_hershey", _wrap_font_hershey, METH_NOARGS, NULL},
	 { "font_arialbd_ttf", _wrap_font_arialbd_ttf, METH_NOARGS, NULL},
	 { "font_timesbd_ttf", _wrap_font_timesbd_ttf, METH_NOARGS, NULL},
	 { "font_symbol_ttf", _wrap_font_symbol_ttf, METH_NOARGS, NULL},
	 { "font_stixgeneral_otf", _wrap_font_stixgeneral_otf, METH_NOARGS, NULL},
	 { "font_helvetica_ttf", _wrap_font_helvetica_ttf, METH_NOARGS, NULL},
	 { "font_times_roman_ttf", _wrap_font_times_roman_ttf, METH_NOARGS, NULL},
	 { "font_ROOT_62", _wrap_font_ROOT_62, METH_NOARGS, NULL},
	 { "s_node_end", _wrap_s_node_end, METH_NOARGS, NULL},
	 { "s_clear_scene", _wrap_s_clear_scene, METH_NOARGS, NULL},
	 { "delete_style_color", _wrap_delete_style_color, METH_O, NULL},
	 { "new_style_color", _wrap_new_style_color, METH_VARARGS, NULL},
	 { "style_color_swigregister", style_color_swigregister, METH_O, NULL},
	 { "style_color_swiginit", style_color_swiginit, METH_VARARGS, NULL},
	 { "style_colormap_s_class", _wrap_style_colormap_s_class, METH_NOARGS, NULL},
	 { "style_colormap_check_class_name", _wrap_style_colormap_check_class_name, METH_NOARGS, NULL},
	 { "delete_style_colormap", _wrap_delete_style_colormap, METH_O, NULL},
	 { "new_style_colormap", _wrap_new_style_colormap, METH_VARARGS, NULL},
	 { "style_colormap_get_color", _wrap_style_colormap_get_color, METH_VARARGS, NULL},
	 { "style_colormap_get_string_color", _wrap_style_colormap_get_string_color, METH_VARARGS, NULL},
	 { "style_colormap_add", _wrap_style_colormap_add, METH_VARARGS, NULL},
	 { "style_colormap_swigregister", style_colormap_swigregister, METH_O, NULL},
	 { "style_colormap_swiginit", style_colormap_swiginit, METH_VARARGS, NULL},
	 { "style_default_colormap_s_default", _wrap_style_default_colormap_s_default, METH_NOARGS, NULL},
	 { "new_style_default_colormap", _wrap_new_style_default_colormap, METH_NOARGS, NULL},
	 { "delete_style_default_colormap", _wrap_delete_style_default_colormap, METH_O, NULL},
	 { "style_default_colormap_swigregister", style_default_colormap_swigregister, METH_O, NULL},
	 { "style_default_colormap_swiginit", style_default_colormap_swiginit, METH_VARARGS, NULL},
	 { "new_style_ROOT_colormap", _wrap_new_style_ROOT_colormap, METH_NOARGS, NULL},
	 { "delete_style_ROOT_colormap", _wrap_delete_style_ROOT_colormap, METH_O, NULL},
	 { "style_ROOT_colormap_swigregister", style_ROOT_colormap_swigregister, METH_O, NULL},
	 { "style_ROOT_colormap_swiginit", style_ROOT_colormap_swiginit, METH_VARARGS, NULL},
	 { "new_style_povama_colormap", _wrap_new_style_povama_colormap, METH_NOARGS, NULL},
	 { "delete_style_povama_colormap", _wrap_delete_style_povama_colormap, METH_O, NULL},
	 { "style_povama_colormap_swigregister", style_povama_colormap_swigregister, METH_O, NULL},
	 { "style_povama_colormap_swiginit", style_povama_colormap_swiginit, METH_VARARGS, NULL},
	 { "to_ulong", _wrap_to_ulong, METH_VARARGS, NULL},
	 { "find_color", _wrap_find_color, METH_VARARGS, NULL},
	 { "fpi", _wrap_fpi, METH_NOARGS, NULL},
	 { "ftwo_pi", _wrap_ftwo_pi, METH_NOARGS, NULL},
	 { "fhalf_pi", _wrap_fhalf_pi, METH_NOARGS, NULL},
	 { "fcos", _wrap_fcos, METH_O, NULL},
	 { "fsin", _wrap_fsin, METH_O, NULL},
	 { "facos", _wrap_facos, METH_O, NULL},
	 { "fasin", _wrap_fasin, METH_O, NULL},
	 { "ftan", _wrap_ftan, METH_O, NULL},
	 { "fatan", _wrap_fatan, METH_O, NULL},
	 { "fatan2", _wrap_fatan2, METH_VARARGS, NULL},
	 { "fsqrt", _wrap_fsqrt, METH_O, NULL},
	 { "fpow", _wrap_fpow, METH_VARARGS, NULL},
	 { "fexp", _wrap_fexp, METH_O, NULL},
	 { "flog", _wrap_flog, METH_O, NULL},
	 { "flog10", _wrap_flog10, METH_O, NULL},
	 { "ffloor", _wrap_ffloor, METH_O, NULL},
	 { "ffabs", _wrap_ffabs, METH_O, NULL},
	 { "fceil", _wrap_fceil, METH_O, NULL},
	 { "fdeg2rad", _wrap_fdeg2rad, METH_NOARGS, NULL},
	 { "frad2deg", _wrap_frad2deg, METH_NOARGS, NULL},
	 { "fround", _wrap_fround, METH_O, NULL},
	 { "delete_style_parser", _wrap_delete_style_parser, METH_O, NULL},
	 { "new_style_parser", _wrap_new_style_parser, METH_VARARGS, NULL},
	 { "style_parser_no_limit", _wrap_style_parser_no_limit, METH_NOARGS, NULL},
	 { "style_parser_copy", _wrap_style_parser_copy, METH_VARARGS, NULL},
	 { "style_parser_equal", _wrap_style_parser_equal, METH_VARARGS, NULL},
	 { "style_parser_reset", _wrap_style_parser_reset, METH_O, NULL},
	 { "style_parser_tos", _wrap_style_parser_tos, METH_O, NULL},
	 { "style_parser_color", _wrap_style_parser_color, METH_VARARGS, NULL},
	 { "style_parser_highlight_color", _wrap_style_parser_highlight_color, METH_VARARGS, NULL},
	 { "style_parser_back_color", _wrap_style_parser_back_color, METH_VARARGS, NULL},
	 { "style_parser_line_width", _wrap_style_parser_line_width, METH_VARARGS, NULL},
	 { "style_parser_back_shadow", _wrap_style_parser_back_shadow, METH_VARARGS, NULL},
	 { "style_parser_marker_style", _wrap_style_parser_marker_style, METH_VARARGS, NULL},
	 { "style_parser_marker_size", _wrap_style_parser_marker_size, METH_VARARGS, NULL},
	 { "style_parser_font_size", _wrap_style_parser_font_size, METH_VARARGS, NULL},
	 { "style_parser_area_style", _wrap_style_parser_area_style, METH_VARARGS, NULL},
	 { "style_parser_modeling", _wrap_style_parser_modeling, METH_VARARGS, NULL},
	 { "style_parser_light_model", _wrap_style_parser_light_model, METH_VARARGS, NULL},
	 { "style_parser_tick_modeling", _wrap_style_parser_tick_modeling, METH_VARARGS, NULL},
	 { "style_parser_encoding", _wrap_style_parser_encoding, METH_VARARGS, NULL},
	 { "style_parser_smoothing", _wrap_style_parser_smoothing, METH_VARARGS, NULL},
	 { "style_parser_hinting", _wrap_style_parser_hinting, METH_VARARGS, NULL},
	 { "style_parser_painting", _wrap_style_parser_painting, METH_VARARGS, NULL},
	 { "style_parser_hatching", _wrap_style_parser_hatching, METH_VARARGS, NULL},
	 { "style_parser_projection", _wrap_style_parser_projection, METH_VARARGS, NULL},
	 { "style_parser_line_pattern", _wrap_style_parser_line_pattern, METH_VARARGS, NULL},
	 { "style_parser_font", _wrap_style_parser_font, METH_VARARGS, NULL},
	 { "style_parser_divisions", _wrap_style_parser_divisions, METH_VARARGS, NULL},
	 { "style_parser_rotation_steps", _wrap_style_parser_rotation_steps, METH_VARARGS, NULL},
	 { "style_parser_offset", _wrap_style_parser_offset, METH_VARARGS, NULL},
	 { "style_parser_strip_width", _wrap_style_parser_strip_width, METH_VARARGS, NULL},
	 { "style_parser_angle", _wrap_style_parser_angle, METH_VARARGS, NULL},
	 { "style_parser_scale", _wrap_style_parser_scale, METH_VARARGS, NULL},
	 { "style_parser_bar_offset", _wrap_style_parser_bar_offset, METH_VARARGS, NULL},
	 { "style_parser_bar_width", _wrap_style_parser_bar_width, METH_VARARGS, NULL},
	 { "style_parser_multi_node_limit", _wrap_style_parser_multi_node_limit, METH_VARARGS, NULL},
	 { "style_parser_spacing", _wrap_style_parser_spacing, METH_VARARGS, NULL},
	 { "style_parser_visible", _wrap_style_parser_visible, METH_VARARGS, NULL},
	 { "style_parser_editable", _wrap_style_parser_editable, METH_VARARGS, NULL},
	 { "style_parser_automated", _wrap_style_parser_automated, METH_VARARGS, NULL},
	 { "style_parser_cut", _wrap_style_parser_cut, METH_VARARGS, NULL},
	 { "style_parser_options", _wrap_style_parser_options, METH_VARARGS, NULL},
	 { "style_parser_color_mapping", _wrap_style_parser_color_mapping, METH_VARARGS, NULL},
	 { "style_parser_enforced", _wrap_style_parser_enforced, METH_VARARGS, NULL},
	 { "style_parser_translation", _wrap_style_parser_translation, METH_VARARGS, NULL},
	 { "style_parser_front_face", _wrap_style_parser_front_face, METH_VARARGS, NULL},
	 { "style_parser_hjust", _wrap_style_parser_hjust, METH_VARARGS, NULL},
	 { "style_parser_vjust", _wrap_style_parser_vjust, METH_VARARGS, NULL},
	 { "style_parser_scolor", _wrap_style_parser_scolor, METH_VARARGS, NULL},
	 { "style_parser_shjust", _wrap_style_parser_shjust, METH_VARARGS, NULL},
	 { "style_parser_svjust", _wrap_style_parser_svjust, METH_VARARGS, NULL},
	 { "style_parser_smarker_style", _wrap_style_parser_smarker_style, METH_VARARGS, NULL},
	 { "style_parser_sarea_style", _wrap_style_parser_sarea_style, METH_VARARGS, NULL},
	 { "style_parser_spainting_policies", _wrap_style_parser_spainting_policies, METH_O, NULL},
	 { "style_parser_spainting_policy", _wrap_style_parser_spainting_policy, METH_VARARGS, NULL},
	 { "style_parser_shatching_policy", _wrap_style_parser_shatching_policy, METH_VARARGS, NULL},
	 { "style_parser_sprojection_type", _wrap_style_parser_sprojection_type, METH_VARARGS, NULL},
	 { "style_parser_sline_pattern", _wrap_style_parser_sline_pattern, METH_VARARGS, NULL},
	 { "style_parser_parse", _wrap_style_parser_parse, METH_VARARGS, NULL},
	 { "style_parser_swigregister", style_parser_swigregister, METH_O, NULL},
	 { "style_parser_swiginit", style_parser_swiginit, METH_VARARGS, NULL},
	 { "base_colormap_get_color", _wrap_base_colormap_get_color, METH_VARARGS, NULL},
	 { "base_colormap_cast", _wrap_base_colormap_cast, METH_VARARGS, NULL},
	 { "delete_base_colormap", _wrap_delete_base_colormap, METH_O, NULL},
	 { "base_colormap_colorn", _wrap_base_colormap_colorn, METH_O, NULL},
	 { "base_colormap_valn", _wrap_base_colormap_valn, METH_O, NULL},
	 { "base_colormap_color", _wrap_base_colormap_color, METH_VARARGS, NULL},
	 { "base_colormap_value", _wrap_base_colormap_value, METH_VARARGS, NULL},
	 { "base_colormap_set_PAW_coloring", _wrap_base_colormap_set_PAW_coloring, METH_O, NULL},
	 { "base_colormap_swigregister", base_colormap_swigregister, METH_O, NULL},
	 { "by_value_colormap_s_class", _wrap_by_value_colormap_s_class, METH_NOARGS, NULL},
	 { "by_value_colormap_get_color", _wrap_by_value_colormap_get_color, METH_VARARGS, NULL},
	 { "by_value_colormap_cast", _wrap_by_value_colormap_cast, METH_VARARGS, NULL},
	 { "new_by_value_colormap", _wrap_new_by_value_colormap, METH_VARARGS, NULL},
	 { "delete_by_value_colormap", _wrap_delete_by_value_colormap, METH_O, NULL},
	 { "by_value_colormap_swigregister", by_value_colormap_swigregister, METH_O, NULL},
	 { "by_value_colormap_swiginit", by_value_colormap_swiginit, METH_VARARGS, NULL},
	 { "grey_scale_colormap_s_class", _wrap_grey_scale_colormap_s_class, METH_NOARGS, NULL},
	 { "grey_scale_colormap_get_color", _wrap_grey_scale_colormap_get_color, METH_VARARGS, NULL},
	 { "grey_scale_colormap_cast", _wrap_grey_scale_colormap_cast, METH_VARARGS, NULL},
	 { "new_grey_scale_colormap", _wrap_new_grey_scale_colormap, METH_VARARGS, NULL},
	 { "delete_grey_scale_colormap", _wrap_delete_grey_scale_colormap, METH_O, NULL},
	 { "grey_scale_colormap_swigregister", grey_scale_colormap_swigregister, METH_O, NULL},
	 { "grey_scale_colormap_swiginit", grey_scale_colormap_swiginit, METH_VARARGS, NULL},
	 { "grey_scale_inverse_colormap_s_class", _wrap_grey_scale_inverse_colormap_s_class, METH_NOARGS, NULL},
	 { "grey_scale_inverse_colormap_get_color", _wrap_grey_scale_inverse_colormap_get_color, METH_VARARGS, NULL},
	 { "grey_scale_inverse_colormap_cast", _wrap_grey_scale_inverse_colormap_cast, METH_VARARGS, NULL},
	 { "new_grey_scale_inverse_colormap", _wrap_new_grey_scale_inverse_colormap, METH_VARARGS, NULL},
	 { "delete_grey_scale_inverse_colormap", _wrap_delete_grey_scale_inverse_colormap, METH_O, NULL},
	 { "grey_scale_inverse_colormap_swigregister", grey_scale_inverse_colormap_swigregister, METH_O, NULL},
	 { "grey_scale_inverse_colormap_swiginit", grey_scale_inverse_colormap_swiginit, METH_VARARGS, NULL},
	 { "violet_to_red_colormap_s_class", _wrap_violet_to_red_colormap_s_class, METH_NOARGS, NULL},
	 { "violet_to_red_colormap_get_color", _wrap_violet_to_red_colormap_get_color, METH_VARARGS, NULL},
	 { "violet_to_red_colormap_cast", _wrap_violet_to_red_colormap_cast, METH_VARARGS, NULL},
	 { "new_violet_to_red_colormap", _wrap_new_violet_to_red_colormap, METH_VARARGS, NULL},
	 { "delete_violet_to_red_colormap", _wrap_delete_violet_to_red_colormap, METH_O, NULL},
	 { "violet_to_red_colormap_swigregister", violet_to_red_colormap_swigregister, METH_O, NULL},
	 { "violet_to_red_colormap_swiginit", violet_to_red_colormap_swiginit, METH_VARARGS, NULL},
	 { "const_colormap_s_class", _wrap_const_colormap_s_class, METH_NOARGS, NULL},
	 { "const_colormap_get_color", _wrap_const_colormap_get_color, METH_VARARGS, NULL},
	 { "const_colormap_cast", _wrap_const_colormap_cast, METH_VARARGS, NULL},
	 { "new_const_colormap", _wrap_new_const_colormap, METH_VARARGS, NULL},
	 { "delete_const_colormap", _wrap_delete_const_colormap, METH_O, NULL},
	 { "const_colormap_swigregister", const_colormap_swigregister, METH_O, NULL},
	 { "const_colormap_swiginit", const_colormap_swiginit, METH_VARARGS, NULL},
	 { "new_action", _wrap_new_action, METH_O, NULL},
	 { "delete_action", _wrap_delete_action, METH_O, NULL},
	 { "action_out", _wrap_action_out, METH_O, NULL},
	 { "action_swigregister", action_swigregister, METH_O, NULL},
	 { "action_swiginit", action_swiginit, METH_VARARGS, NULL},
	 { "delete_search_action", _wrap_delete_search_action, METH_O, NULL},
	 { "new_search_action", _wrap_new_search_action, METH_VARARGS, NULL},
	 { "search_action_reset", _wrap_search_action_reset, METH_O, NULL},
	 { "search_action_what", _wrap_search_action_what, METH_O, NULL},
	 { "search_action_set_what", _wrap_search_action_set_what, METH_VARARGS, NULL},
	 { "search_action_set_done", _wrap_search_action_set_done, METH_VARARGS, NULL},
	 { "search_action_done", _wrap_search_action_done, METH_O, NULL},
	 { "search_action_add_obj", _wrap_search_action_add_obj, METH_VARARGS, NULL},
	 { "search_action_objs", _wrap_search_action_objs, METH_O, NULL},
	 { "search_action_set_class", _wrap_search_action_set_class, METH_VARARGS, NULL},
	 { "search_action_sclass", _wrap_search_action_sclass, METH_VARARGS, NULL},
	 { "search_action_set_node", _wrap_search_action_set_node, METH_VARARGS, NULL},
	 { "search_action_node", _wrap_search_action_node, METH_O, NULL},
	 { "search_action_path_push", _wrap_search_action_path_push, METH_VARARGS, NULL},
	 { "search_action_path_pop", _wrap_search_action_path_pop, METH_O, NULL},
	 { "search_action_path", _wrap_search_action_path, METH_O, NULL},
	 { "search_action_clear_path", _wrap_search_action_clear_path, METH_O, NULL},
	 { "search_action_do_path", _wrap_search_action_do_path, METH_O, NULL},
	 { "search_action_add_path", _wrap_search_action_add_path, METH_VARARGS, NULL},
	 { "search_action_paths", _wrap_search_action_paths, METH_O, NULL},
	 { "search_action_swigregister", search_action_swigregister, METH_O, NULL},
	 { "search_action_swiginit", search_action_swiginit, METH_VARARGS, NULL},
	 { "new_win_action", _wrap_new_win_action, METH_VARARGS, NULL},
	 { "delete_win_action", _wrap_delete_win_action, METH_O, NULL},
	 { "win_action_ww", _wrap_win_action_ww, METH_O, NULL},
	 { "win_action_wh", _wrap_win_action_wh, METH_O, NULL},
	 { "win_action_swigregister", win_action_swigregister, METH_O, NULL},
	 { "win_action_swiginit", win_action_swiginit, METH_VARARGS, NULL},
	 { "delete_mat4f", _wrap_delete_mat4f, METH_O, NULL},
	 { "new_mat4f", _wrap_new_mat4f, METH_VARARGS, NULL},
	 { "mat4f_mul_2f", _wrap_mat4f_mul_2f, METH_VARARGS, NULL},
	 { "mat4f_mul_3f", _wrap_mat4f_mul_3f, METH_VARARGS, NULL},
	 { "mat4f_mul_4f", _wrap_mat4f_mul_4f, METH_VARARGS, NULL},
	 { "mat4f_swigregister", mat4f_swigregister, METH_O, NULL},
	 { "mat4f_swiginit", mat4f_swiginit, METH_VARARGS, NULL},
	 { "delete_state", _wrap_delete_state, METH_O, NULL},
	 { "new_state", _wrap_new_state, METH_VARARGS, NULL},
	 { "state_screen2ndc", _wrap_state_screen2ndc, METH_VARARGS, NULL},
	 { "state_screen2wc", _wrap_state_screen2wc, METH_VARARGS, NULL},
	 { "state_screen2pwc", _wrap_state_screen2pwc, METH_VARARGS, NULL},
	 { "state_camera_proj_only", _wrap_state_camera_proj_only, METH_VARARGS, NULL},
	 { "state_m_ww_set", _wrap_state_m_ww_set, METH_VARARGS, NULL},
	 { "state_m_ww_get", _wrap_state_m_ww_get, METH_O, NULL},
	 { "state_m_wh_set", _wrap_state_m_wh_set, METH_VARARGS, NULL},
	 { "state_m_wh_get", _wrap_state_m_wh_get, METH_O, NULL},
	 { "state_m_proj_set", _wrap_state_m_proj_set, METH_VARARGS, NULL},
	 { "state_m_proj_get", _wrap_state_m_proj_get, METH_O, NULL},
	 { "state_m_model_set", _wrap_state_m_model_set, METH_VARARGS, NULL},
	 { "state_m_model_get", _wrap_state_m_model_get, METH_O, NULL},
	 { "state_m_GL_DEPTH_TEST_set", _wrap_state_m_GL_DEPTH_TEST_set, METH_VARARGS, NULL},
	 { "state_m_GL_DEPTH_TEST_get", _wrap_state_m_GL_DEPTH_TEST_get, METH_O, NULL},
	 { "state_m_GL_LIGHTING_set", _wrap_state_m_GL_LIGHTING_set, METH_VARARGS, NULL},
	 { "state_m_GL_LIGHTING_get", _wrap_state_m_GL_LIGHTING_get, METH_O, NULL},
	 { "state_m_GL_CULL_FACE_set", _wrap_state_m_GL_CULL_FACE_set, METH_VARARGS, NULL},
	 { "state_m_GL_CULL_FACE_get", _wrap_state_m_GL_CULL_FACE_get, METH_O, NULL},
	 { "state_m_GL_POLYGON_OFFSET_FILL_set", _wrap_state_m_GL_POLYGON_OFFSET_FILL_set, METH_VARARGS, NULL},
	 { "state_m_GL_POLYGON_OFFSET_FILL_get", _wrap_state_m_GL_POLYGON_OFFSET_FILL_get, METH_O, NULL},
	 { "state_m_GL_TEXTURE_2D_set", _wrap_state_m_GL_TEXTURE_2D_set, METH_VARARGS, NULL},
	 { "state_m_GL_TEXTURE_2D_get", _wrap_state_m_GL_TEXTURE_2D_get, METH_O, NULL},
	 { "state_m_use_vbo_set", _wrap_state_m_use_vbo_set, METH_VARARGS, NULL},
	 { "state_m_use_vbo_get", _wrap_state_m_use_vbo_get, METH_O, NULL},
	 { "state_m_winding_set", _wrap_state_m_winding_set, METH_VARARGS, NULL},
	 { "state_m_winding_get", _wrap_state_m_winding_get, METH_O, NULL},
	 { "state_m_color_set", _wrap_state_m_color_set, METH_VARARGS, NULL},
	 { "state_m_color_get", _wrap_state_m_color_get, METH_O, NULL},
	 { "state_m_light_set", _wrap_state_m_light_set, METH_VARARGS, NULL},
	 { "state_m_light_get", _wrap_state_m_light_get, METH_O, NULL},
	 { "state_m_line_width_set", _wrap_state_m_line_width_set, METH_VARARGS, NULL},
	 { "state_m_line_width_get", _wrap_state_m_line_width_get, METH_O, NULL},
	 { "state_m_line_pattern_set", _wrap_state_m_line_pattern_set, METH_VARARGS, NULL},
	 { "state_m_line_pattern_get", _wrap_state_m_line_pattern_get, METH_O, NULL},
	 { "state_m_point_size_set", _wrap_state_m_point_size_set, METH_VARARGS, NULL},
	 { "state_m_point_size_get", _wrap_state_m_point_size_get, METH_O, NULL},
	 { "state_m_camera_ortho_set", _wrap_state_m_camera_ortho_set, METH_VARARGS, NULL},
	 { "state_m_camera_ortho_get", _wrap_state_m_camera_ortho_get, METH_O, NULL},
	 { "state_m_camera_znear_set", _wrap_state_m_camera_znear_set, METH_VARARGS, NULL},
	 { "state_m_camera_znear_get", _wrap_state_m_camera_znear_get, METH_O, NULL},
	 { "state_m_camera_zfar_set", _wrap_state_m_camera_zfar_set, METH_VARARGS, NULL},
	 { "state_m_camera_zfar_get", _wrap_state_m_camera_zfar_get, METH_O, NULL},
	 { "state_m_camera_position_set", _wrap_state_m_camera_position_set, METH_VARARGS, NULL},
	 { "state_m_camera_position_get", _wrap_state_m_camera_position_get, METH_O, NULL},
	 { "state_m_camera_orientation_set", _wrap_state_m_camera_orientation_set, METH_VARARGS, NULL},
	 { "state_m_camera_orientation_get", _wrap_state_m_camera_orientation_get, METH_O, NULL},
	 { "state_m_camera_lrbt_set", _wrap_state_m_camera_lrbt_set, METH_VARARGS, NULL},
	 { "state_m_camera_lrbt_get", _wrap_state_m_camera_lrbt_get, METH_O, NULL},
	 { "state_swigregister", state_swigregister, METH_O, NULL},
	 { "state_swiginit", state_swiginit, METH_VARARGS, NULL},
	 { "new_states", _wrap_new_states, METH_VARARGS, NULL},
	 { "delete_states", _wrap_delete_states, METH_O, NULL},
	 { "states_state", _wrap_states_state, METH_O, NULL},
	 { "states_pop_state", _wrap_states_pop_state, METH_O, NULL},
	 { "states_push_state", _wrap_states_push_state, METH_O, NULL},
	 { "states_save_state", _wrap_states_save_state, METH_VARARGS, NULL},
	 { "states_saved_state", _wrap_states_saved_state, METH_VARARGS, NULL},
	 { "states_swigregister", states_swigregister, METH_O, NULL},
	 { "states_swiginit", states_swiginit, METH_VARARGS, NULL},
	 { "matrix_action_load_proj_matrix", _wrap_matrix_action_load_proj_matrix, METH_VARARGS, NULL},
	 { "matrix_action_load_model_matrix", _wrap_matrix_action_load_model_matrix, METH_VARARGS, NULL},
	 { "delete_matrix_action", _wrap_delete_matrix_action, METH_O, NULL},
	 { "new_matrix_action", _wrap_new_matrix_action, METH_VARARGS, NULL},
	 { "matrix_action_push_matrices", _wrap_matrix_action_push_matrices, METH_O, NULL},
	 { "matrix_action_pop_matrices", _wrap_matrix_action_pop_matrices, METH_O, NULL},
	 { "matrix_action_projection_matrix", _wrap_matrix_action_projection_matrix, METH_O, NULL},
	 { "matrix_action_model_matrix", _wrap_matrix_action_model_matrix, METH_O, NULL},
	 { "matrix_action_end", _wrap_matrix_action_end, METH_O, NULL},
	 { "matrix_action_cur", _wrap_matrix_action_cur, METH_O, NULL},
	 { "matrix_action_project_point", _wrap_matrix_action_project_point, METH_VARARGS, NULL},
	 { "matrix_action_model_point", _wrap_matrix_action_model_point, METH_VARARGS, NULL},
	 { "matrix_action_projected_origin", _wrap_matrix_action_projected_origin, METH_VARARGS, NULL},
	 { "matrix_action_matrices_to_identity", _wrap_matrix_action_matrices_to_identity, METH_O, NULL},
	 { "matrix_action_matrices_from_state", _wrap_matrix_action_matrices_from_state, METH_O, NULL},
	 { "matrix_action_swigregister", matrix_action_swigregister, METH_O, NULL},
	 { "matrix_action_swiginit", matrix_action_swiginit, METH_VARARGS, NULL},
	 { "points", _wrap_points, METH_NOARGS, NULL},
	 { "lines", _wrap_lines, METH_NOARGS, NULL},
	 { "line_loop", _wrap_line_loop, METH_NOARGS, NULL},
	 { "line_strip", _wrap_line_strip, METH_NOARGS, NULL},
	 { "triangles", _wrap_triangles, METH_NOARGS, NULL},
	 { "triangle_strip", _wrap_triangle_strip, METH_NOARGS, NULL},
	 { "triangle_fan", _wrap_triangle_fan, METH_NOARGS, NULL},
	 { "is_line", _wrap_is_line, METH_O, NULL},
	 { "delete_primitive_visitor", _wrap_delete_primitive_visitor, METH_O, NULL},
	 { "primitive_visitor_add_one_point", _wrap_primitive_visitor_add_one_point, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangles", _wrap_primitive_visitor_add_triangles, METH_VARARGS, NULL},
	 { "primitive_visitor_add_line_loop", _wrap_primitive_visitor_add_line_loop, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangle_fan_xy", _wrap_primitive_visitor_add_triangle_fan_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangle_strip_xy", _wrap_primitive_visitor_add_triangle_strip_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangles_xy", _wrap_primitive_visitor_add_triangles_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_line_loop_xy", _wrap_primitive_visitor_add_line_loop_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_line_strip_xy", _wrap_primitive_visitor_add_line_strip_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_primitive_xy", _wrap_primitive_visitor_add_primitive_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_primitive", _wrap_primitive_visitor_add_primitive, METH_VARARGS, NULL},
	 { "primitive_visitor_add_line_strip", _wrap_primitive_visitor_add_line_strip, METH_VARARGS, NULL},
	 { "primitive_visitor_add_lines_xy", _wrap_primitive_visitor_add_lines_xy, METH_VARARGS, NULL},
	 { "primitive_visitor_add_lines", _wrap_primitive_visitor_add_lines, METH_VARARGS, NULL},
	 { "primitive_visitor_add_points", _wrap_primitive_visitor_add_points, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangle_fan", _wrap_primitive_visitor_add_triangle_fan, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangle_fan_texture", _wrap_primitive_visitor_add_triangle_fan_texture, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangle_strip", _wrap_primitive_visitor_add_triangle_strip, METH_VARARGS, NULL},
	 { "primitive_visitor_add_triangle_strip_texture", _wrap_primitive_visitor_add_triangle_strip_texture, METH_VARARGS, NULL},
	 { "primitive_visitor_swigregister", primitive_visitor_swigregister, METH_O, NULL},
	 { "write_action_buffer", _wrap_write_action_buffer, METH_O, NULL},
	 { "write_action_beg_node", _wrap_write_action_beg_node, METH_VARARGS, NULL},
	 { "write_action_end_node", _wrap_write_action_end_node, METH_VARARGS, NULL},
	 { "write_action_switch_do_all_children", _wrap_write_action_switch_do_all_children, METH_O, NULL},
	 { "delete_write_action", _wrap_delete_write_action, METH_O, NULL},
	 { "write_action_swigregister", write_action_swigregister, METH_O, NULL},
	 { "node_s_class", _wrap_node_s_class, METH_NOARGS, NULL},
	 { "node_check_class_name", _wrap_node_check_class_name, METH_NOARGS, NULL},
	 { "node_cast", _wrap_node_cast, METH_VARARGS, NULL},
	 { "node_copy", _wrap_node_copy, METH_O, NULL},
	 { "node_s_cls", _wrap_node_s_cls, METH_O, NULL},
	 { "node_node_fields", _wrap_node_node_fields, METH_O, NULL},
	 { "node_render", _wrap_node_render, METH_VARARGS, NULL},
	 { "node_pick", _wrap_node_pick, METH_VARARGS, NULL},
	 { "node_bbox", _wrap_node_bbox, METH_VARARGS, NULL},
	 { "node_search", _wrap_node_search, METH_VARARGS, NULL},
	 { "node_write", _wrap_node_write, METH_VARARGS, NULL},
	 { "node_event", _wrap_node_event, METH_VARARGS, NULL},
	 { "delete_node", _wrap_delete_node, METH_O, NULL},
	 { "node_reset_touched", _wrap_node_reset_touched, METH_O, NULL},
	 { "node_fields", _wrap_node_fields, METH_VARARGS, NULL},
	 { "node_swigregister", node_swigregister, METH_O, NULL},
	 { "style_color_set", _wrap_style_color_set, METH_VARARGS, NULL},
	 { "style_color_get", _wrap_style_color_get, METH_O, NULL},
	 { "style_highlight_color_set", _wrap_style_highlight_color_set, METH_VARARGS, NULL},
	 { "style_highlight_color_get", _wrap_style_highlight_color_get, METH_O, NULL},
	 { "style_back_color_set", _wrap_style_back_color_set, METH_VARARGS, NULL},
	 { "style_back_color_get", _wrap_style_back_color_get, METH_O, NULL},
	 { "style_line_width_set", _wrap_style_line_width_set, METH_VARARGS, NULL},
	 { "style_line_width_get", _wrap_style_line_width_get, METH_O, NULL},
	 { "style_marker_size_set", _wrap_style_marker_size_set, METH_VARARGS, NULL},
	 { "style_marker_size_get", _wrap_style_marker_size_get, METH_O, NULL},
	 { "style_font_size_set", _wrap_style_font_size_set, METH_VARARGS, NULL},
	 { "style_font_size_get", _wrap_style_font_size_get, METH_O, NULL},
	 { "style_line_pattern_set", _wrap_style_line_pattern_set, METH_VARARGS, NULL},
	 { "style_line_pattern_get", _wrap_style_line_pattern_get, METH_O, NULL},
	 { "style_marker_style_set", _wrap_style_marker_style_set, METH_VARARGS, NULL},
	 { "style_marker_style_get", _wrap_style_marker_style_get, METH_O, NULL},
	 { "style_area_style_set", _wrap_style_area_style_set, METH_VARARGS, NULL},
	 { "style_area_style_get", _wrap_style_area_style_get, METH_O, NULL},
	 { "style_modeling_set", _wrap_style_modeling_set, METH_VARARGS, NULL},
	 { "style_modeling_get", _wrap_style_modeling_get, METH_O, NULL},
	 { "style_light_model_set", _wrap_style_light_model_set, METH_VARARGS, NULL},
	 { "style_light_model_get", _wrap_style_light_model_get, METH_O, NULL},
	 { "style_tick_modeling_set", _wrap_style_tick_modeling_set, METH_VARARGS, NULL},
	 { "style_tick_modeling_get", _wrap_style_tick_modeling_get, METH_O, NULL},
	 { "style_encoding_set", _wrap_style_encoding_set, METH_VARARGS, NULL},
	 { "style_encoding_get", _wrap_style_encoding_get, METH_O, NULL},
	 { "style_smoothing_set", _wrap_style_smoothing_set, METH_VARARGS, NULL},
	 { "style_smoothing_get", _wrap_style_smoothing_get, METH_O, NULL},
	 { "style_hinting_set", _wrap_style_hinting_set, METH_VARARGS, NULL},
	 { "style_hinting_get", _wrap_style_hinting_get, METH_O, NULL},
	 { "style_cut_set", _wrap_style_cut_set, METH_VARARGS, NULL},
	 { "style_cut_get", _wrap_style_cut_get, METH_O, NULL},
	 { "style_painting_set", _wrap_style_painting_set, METH_VARARGS, NULL},
	 { "style_painting_get", _wrap_style_painting_get, METH_O, NULL},
	 { "style_hatching_set", _wrap_style_hatching_set, METH_VARARGS, NULL},
	 { "style_hatching_get", _wrap_style_hatching_get, METH_O, NULL},
	 { "style_projection_set", _wrap_style_projection_set, METH_VARARGS, NULL},
	 { "style_projection_get", _wrap_style_projection_get, METH_O, NULL},
	 { "style_font_set", _wrap_style_font_set, METH_VARARGS, NULL},
	 { "style_font_get", _wrap_style_font_get, METH_O, NULL},
	 { "style_multi_node_limit_set", _wrap_style_multi_node_limit_set, METH_VARARGS, NULL},
	 { "style_multi_node_limit_get", _wrap_style_multi_node_limit_get, METH_O, NULL},
	 { "style_divisions_set", _wrap_style_divisions_set, METH_VARARGS, NULL},
	 { "style_divisions_get", _wrap_style_divisions_get, METH_O, NULL},
	 { "style_rotation_steps_set", _wrap_style_rotation_steps_set, METH_VARARGS, NULL},
	 { "style_rotation_steps_get", _wrap_style_rotation_steps_get, METH_O, NULL},
	 { "style_spacing_set", _wrap_style_spacing_set, METH_VARARGS, NULL},
	 { "style_spacing_get", _wrap_style_spacing_get, METH_O, NULL},
	 { "style_angle_set", _wrap_style_angle_set, METH_VARARGS, NULL},
	 { "style_angle_get", _wrap_style_angle_get, METH_O, NULL},
	 { "style_scale_set", _wrap_style_scale_set, METH_VARARGS, NULL},
	 { "style_scale_get", _wrap_style_scale_get, METH_O, NULL},
	 { "style_offset_set", _wrap_style_offset_set, METH_VARARGS, NULL},
	 { "style_offset_get", _wrap_style_offset_get, METH_O, NULL},
	 { "style_strip_width_set", _wrap_style_strip_width_set, METH_VARARGS, NULL},
	 { "style_strip_width_get", _wrap_style_strip_width_get, METH_O, NULL},
	 { "style_visible_set", _wrap_style_visible_set, METH_VARARGS, NULL},
	 { "style_visible_get", _wrap_style_visible_get, METH_O, NULL},
	 { "style_bar_offset_set", _wrap_style_bar_offset_set, METH_VARARGS, NULL},
	 { "style_bar_offset_get", _wrap_style_bar_offset_get, METH_O, NULL},
	 { "style_bar_width_set", _wrap_style_bar_width_set, METH_VARARGS, NULL},
	 { "style_bar_width_get", _wrap_style_bar_width_get, METH_O, NULL},
	 { "style_editable_set", _wrap_style_editable_set, METH_VARARGS, NULL},
	 { "style_editable_get", _wrap_style_editable_get, METH_O, NULL},
	 { "style_automated_set", _wrap_style_automated_set, METH_VARARGS, NULL},
	 { "style_automated_get", _wrap_style_automated_get, METH_O, NULL},
	 { "style_options_set", _wrap_style_options_set, METH_VARARGS, NULL},
	 { "style_options_get", _wrap_style_options_get, METH_O, NULL},
	 { "style_color_mapping_set", _wrap_style_color_mapping_set, METH_VARARGS, NULL},
	 { "style_color_mapping_get", _wrap_style_color_mapping_get, METH_O, NULL},
	 { "style_enforced_set", _wrap_style_enforced_set, METH_VARARGS, NULL},
	 { "style_enforced_get", _wrap_style_enforced_get, METH_O, NULL},
	 { "style_translation_set", _wrap_style_translation_set, METH_VARARGS, NULL},
	 { "style_translation_get", _wrap_style_translation_get, METH_O, NULL},
	 { "style_copy", _wrap_style_copy, METH_O, NULL},
	 { "style_s_cls", _wrap_style_s_cls, METH_O, NULL},
	 { "delete_style", _wrap_delete_style, METH_O, NULL},
	 { "new_style", _wrap_new_style, METH_VARARGS, NULL},
	 { "style_from_string", _wrap_style_from_string, METH_VARARGS, NULL},
	 { "style_swigregister", style_swigregister, METH_O, NULL},
	 { "style_swiginit", style_swiginit, METH_VARARGS, NULL},
	 { "text_style_visible_set", _wrap_text_style_visible_set, METH_VARARGS, NULL},
	 { "text_style_visible_get", _wrap_text_style_visible_get, METH_O, NULL},
	 { "text_style_color_set", _wrap_text_style_color_set, METH_VARARGS, NULL},
	 { "text_style_color_get", _wrap_text_style_color_get, METH_O, NULL},
	 { "text_style_back_color_set", _wrap_text_style_back_color_set, METH_VARARGS, NULL},
	 { "text_style_back_color_get", _wrap_text_style_back_color_get, METH_O, NULL},
	 { "text_style_back_shadow_set", _wrap_text_style_back_shadow_set, METH_VARARGS, NULL},
	 { "text_style_back_shadow_get", _wrap_text_style_back_shadow_get, METH_O, NULL},
	 { "text_style_modeling_set", _wrap_text_style_modeling_set, METH_VARARGS, NULL},
	 { "text_style_modeling_get", _wrap_text_style_modeling_get, METH_O, NULL},
	 { "text_style_font_set", _wrap_text_style_font_set, METH_VARARGS, NULL},
	 { "text_style_font_get", _wrap_text_style_font_get, METH_O, NULL},
	 { "text_style_font_size_set", _wrap_text_style_font_size_set, METH_VARARGS, NULL},
	 { "text_style_font_size_get", _wrap_text_style_font_size_get, METH_O, NULL},
	 { "text_style_encoding_set", _wrap_text_style_encoding_set, METH_VARARGS, NULL},
	 { "text_style_encoding_get", _wrap_text_style_encoding_get, METH_O, NULL},
	 { "text_style_smoothing_set", _wrap_text_style_smoothing_set, METH_VARARGS, NULL},
	 { "text_style_smoothing_get", _wrap_text_style_smoothing_get, METH_O, NULL},
	 { "text_style_hinting_set", _wrap_text_style_hinting_set, METH_VARARGS, NULL},
	 { "text_style_hinting_get", _wrap_text_style_hinting_get, METH_O, NULL},
	 { "text_style_hjust_set", _wrap_text_style_hjust_set, METH_VARARGS, NULL},
	 { "text_style_hjust_get", _wrap_text_style_hjust_get, METH_O, NULL},
	 { "text_style_vjust_set", _wrap_text_style_vjust_set, METH_VARARGS, NULL},
	 { "text_style_vjust_get", _wrap_text_style_vjust_get, METH_O, NULL},
	 { "text_style_scale_set", _wrap_text_style_scale_set, METH_VARARGS, NULL},
	 { "text_style_scale_get", _wrap_text_style_scale_get, METH_O, NULL},
	 { "text_style_x_orientation_set", _wrap_text_style_x_orientation_set, METH_VARARGS, NULL},
	 { "text_style_x_orientation_get", _wrap_text_style_x_orientation_get, METH_O, NULL},
	 { "text_style_y_orientation_set", _wrap_text_style_y_orientation_set, METH_VARARGS, NULL},
	 { "text_style_y_orientation_get", _wrap_text_style_y_orientation_get, METH_O, NULL},
	 { "text_style_rotated_set", _wrap_text_style_rotated_set, METH_VARARGS, NULL},
	 { "text_style_rotated_get", _wrap_text_style_rotated_get, METH_O, NULL},
	 { "text_style_line_width_set", _wrap_text_style_line_width_set, METH_VARARGS, NULL},
	 { "text_style_line_width_get", _wrap_text_style_line_width_get, METH_O, NULL},
	 { "text_style_line_pattern_set", _wrap_text_style_line_pattern_set, METH_VARARGS, NULL},
	 { "text_style_line_pattern_get", _wrap_text_style_line_pattern_get, METH_O, NULL},
	 { "text_style_enforced_set", _wrap_text_style_enforced_set, METH_VARARGS, NULL},
	 { "text_style_enforced_get", _wrap_text_style_enforced_get, METH_O, NULL},
	 { "text_style_translation_set", _wrap_text_style_translation_set, METH_VARARGS, NULL},
	 { "text_style_translation_get", _wrap_text_style_translation_get, METH_O, NULL},
	 { "text_style_front_face_set", _wrap_text_style_front_face_set, METH_VARARGS, NULL},
	 { "text_style_front_face_get", _wrap_text_style_front_face_get, METH_O, NULL},
	 { "text_style_copy", _wrap_text_style_copy, METH_O, NULL},
	 { "text_style_s_cls", _wrap_text_style_s_cls, METH_O, NULL},
	 { "delete_text_style", _wrap_delete_text_style, METH_O, NULL},
	 { "new_text_style", _wrap_new_text_style, METH_VARARGS, NULL},
	 { "text_style_from_string", _wrap_text_style_from_string, METH_VARARGS, NULL},
	 { "text_style_swigregister", text_style_swigregister, METH_O, NULL},
	 { "text_style_swiginit", text_style_swiginit, METH_VARARGS, NULL},
	 { "line_style_s_class", _wrap_line_style_s_class, METH_NOARGS, NULL},
	 { "line_style_check_class_name", _wrap_line_style_check_class_name, METH_NOARGS, NULL},
	 { "line_style_cast", _wrap_line_style_cast, METH_VARARGS, NULL},
	 { "line_style_visible_set", _wrap_line_style_visible_set, METH_VARARGS, NULL},
	 { "line_style_visible_get", _wrap_line_style_visible_get, METH_O, NULL},
	 { "line_style_color_set", _wrap_line_style_color_set, METH_VARARGS, NULL},
	 { "line_style_color_get", _wrap_line_style_color_get, METH_O, NULL},
	 { "line_style_width_set", _wrap_line_style_width_set, METH_VARARGS, NULL},
	 { "line_style_width_get", _wrap_line_style_width_get, METH_O, NULL},
	 { "line_style_pattern_set", _wrap_line_style_pattern_set, METH_VARARGS, NULL},
	 { "line_style_pattern_get", _wrap_line_style_pattern_get, METH_O, NULL},
	 { "line_style_copy", _wrap_line_style_copy, METH_O, NULL},
	 { "line_style_s_cls", _wrap_line_style_s_cls, METH_O, NULL},
	 { "delete_line_style", _wrap_delete_line_style, METH_O, NULL},
	 { "new_line_style", _wrap_new_line_style, METH_VARARGS, NULL},
	 { "line_style_from_string", _wrap_line_style_from_string, METH_VARARGS, NULL},
	 { "line_style_swigregister", line_style_swigregister, METH_O, NULL},
	 { "line_style_swiginit", line_style_swiginit, METH_VARARGS, NULL},
	 { "delete_pick_element", _wrap_delete_pick_element, METH_O, NULL},
	 { "new_pick_element", _wrap_new_pick_element, METH_VARARGS, NULL},
	 { "pick_element_node", _wrap_pick_element_node, METH_VARARGS, NULL},
	 { "pick_element_zs", _wrap_pick_element_zs, METH_VARARGS, NULL},
	 { "pick_element_ws", _wrap_pick_element_ws, METH_VARARGS, NULL},
	 { "pick_element_state", _wrap_pick_element_state, METH_VARARGS, NULL},
	 { "pick_element_swigregister", pick_element_swigregister, METH_O, NULL},
	 { "pick_element_swiginit", pick_element_swiginit, METH_VARARGS, NULL},
	 { "delete_pick_action", _wrap_delete_pick_action, METH_O, NULL},
	 { "new_pick_action", _wrap_new_pick_action, METH_VARARGS, NULL},
	 { "pick_action_reset", _wrap_pick_action_reset, METH_O, NULL},
	 { "pick_action_set_area", _wrap_pick_action_set_area, METH_VARARGS, NULL},
	 { "pick_action_set_stop_at_first", _wrap_pick_action_set_stop_at_first, METH_VARARGS, NULL},
	 { "pick_action_stop_at_first", _wrap_pick_action_stop_at_first, METH_O, NULL},
	 { "pick_action_set_done", _wrap_pick_action_set_done, METH_VARARGS, NULL},
	 { "pick_action_done", _wrap_pick_action_done, METH_O, NULL},
	 { "pick_action_set_node", _wrap_pick_action_set_node, METH_VARARGS, NULL},
	 { "pick_action_node", _wrap_pick_action_node, METH_O, NULL},
	 { "pick_action_add_pick", _wrap_pick_action_add_pick, METH_VARARGS, NULL},
	 { "pick_action_picks", _wrap_pick_action_picks, METH_O, NULL},
	 { "pick_action_dump_picks", _wrap_pick_action_dump_picks, METH_O, NULL},
	 { "pick_action_closest_pick", _wrap_pick_action_closest_pick, METH_O, NULL},
	 { "pick_action_zs", _wrap_pick_action_zs, METH_VARARGS, NULL},
	 { "pick_action_ws", _wrap_pick_action_ws, METH_VARARGS, NULL},
	 { "pick_action_add__primitive_xy", _wrap_pick_action_add__primitive_xy, METH_VARARGS, NULL},
	 { "pick_action_add__line_strip_xy", _wrap_pick_action_add__line_strip_xy, METH_VARARGS, NULL},
	 { "pick_action_add__lines_xy", _wrap_pick_action_add__lines_xy, METH_VARARGS, NULL},
	 { "pick_action_add__primitive", _wrap_pick_action_add__primitive, METH_VARARGS, NULL},
	 { "pick_action_add__line_strip", _wrap_pick_action_add__line_strip, METH_VARARGS, NULL},
	 { "pick_action_add__triangles", _wrap_pick_action_add__triangles, METH_VARARGS, NULL},
	 { "pick_action_add__lines", _wrap_pick_action_add__lines, METH_VARARGS, NULL},
	 { "pick_action_is_inside", _wrap_pick_action_is_inside, METH_VARARGS, NULL},
	 { "pick_action_intersect_line", _wrap_pick_action_intersect_line, METH_VARARGS, NULL},
	 { "pick_action_swigregister", pick_action_swigregister, METH_O, NULL},
	 { "pick_action_swiginit", pick_action_swiginit, METH_VARARGS, NULL},
	 { "event_cast", _wrap_event_cast, METH_VARARGS, NULL},
	 { "event_copy", _wrap_event_copy, METH_O, NULL},
	 { "delete_event", _wrap_delete_event, METH_O, NULL},
	 { "event_swigregister", event_swigregister, METH_O, NULL},
	 { "devrot_event_s_class", _wrap_devrot_event_s_class, METH_NOARGS, NULL},
	 { "devrot_event_check_class_name", _wrap_devrot_event_check_class_name, METH_NOARGS, NULL},
	 { "devrot_event_cast", _wrap_devrot_event_cast, METH_VARARGS, NULL},
	 { "devrot_event_copy", _wrap_devrot_event_copy, METH_O, NULL},
	 { "delete_devrot_event", _wrap_delete_devrot_event, METH_O, NULL},
	 { "new_devrot_event", _wrap_new_devrot_event, METH_VARARGS, NULL},
	 { "devrot_event_swigregister", devrot_event_swigregister, METH_O, NULL},
	 { "devrot_event_swiginit", devrot_event_swiginit, METH_VARARGS, NULL},
	 { "size_event_s_class", _wrap_size_event_s_class, METH_NOARGS, NULL},
	 { "size_event_check_class_name", _wrap_size_event_check_class_name, METH_NOARGS, NULL},
	 { "size_event_cast", _wrap_size_event_cast, METH_VARARGS, NULL},
	 { "size_event_copy", _wrap_size_event_copy, METH_O, NULL},
	 { "delete_size_event", _wrap_delete_size_event, METH_O, NULL},
	 { "new_size_event", _wrap_new_size_event, METH_VARARGS, NULL},
	 { "size_event_old_width", _wrap_size_event_old_width, METH_O, NULL},
	 { "size_event_old_height", _wrap_size_event_old_height, METH_O, NULL},
	 { "size_event_width", _wrap_size_event_width, METH_O, NULL},
	 { "size_event_height", _wrap_size_event_height, METH_O, NULL},
	 { "size_event_swigregister", size_event_swigregister, METH_O, NULL},
	 { "size_event_swiginit", size_event_swiginit, METH_VARARGS, NULL},
	 { "down_event_s_class", _wrap_down_event_s_class, METH_NOARGS, NULL},
	 { "down_event_check_class_name", _wrap_down_event_check_class_name, METH_NOARGS, NULL},
	 { "down_event_cast", _wrap_down_event_cast, METH_VARARGS, NULL},
	 { "down_event_copy", _wrap_down_event_copy, METH_O, NULL},
	 { "delete_down_event", _wrap_delete_down_event, METH_O, NULL},
	 { "new_down_event", _wrap_new_down_event, METH_VARARGS, NULL},
	 { "down_event_x", _wrap_down_event_x, METH_O, NULL},
	 { "down_event_y", _wrap_down_event_y, METH_O, NULL},
	 { "down_event_swigregister", down_event_swigregister, METH_O, NULL},
	 { "down_event_swiginit", down_event_swiginit, METH_VARARGS, NULL},
	 { "up_event_s_class", _wrap_up_event_s_class, METH_NOARGS, NULL},
	 { "up_event_check_class_name", _wrap_up_event_check_class_name, METH_NOARGS, NULL},
	 { "up_event_cast", _wrap_up_event_cast, METH_VARARGS, NULL},
	 { "up_event_copy", _wrap_up_event_copy, METH_O, NULL},
	 { "delete_up_event", _wrap_delete_up_event, METH_O, NULL},
	 { "new_up_event", _wrap_new_up_event, METH_VARARGS, NULL},
	 { "up_event_x", _wrap_up_event_x, METH_O, NULL},
	 { "up_event_y", _wrap_up_event_y, METH_O, NULL},
	 { "up_event_swigregister", up_event_swigregister, METH_O, NULL},
	 { "up_event_swiginit", up_event_swiginit, METH_VARARGS, NULL},
	 { "move_event_s_class", _wrap_move_event_s_class, METH_NOARGS, NULL},
	 { "move_event_check_class_name", _wrap_move_event_check_class_name, METH_NOARGS, NULL},
	 { "move_event_cast", _wrap_move_event_cast, METH_VARARGS, NULL},
	 { "move_event_copy", _wrap_move_event_copy, METH_O, NULL},
	 { "delete_move_event", _wrap_delete_move_event, METH_O, NULL},
	 { "new_move_event", _wrap_new_move_event, METH_VARARGS, NULL},
	 { "move_event_x", _wrap_move_event_x, METH_O, NULL},
	 { "move_event_y", _wrap_move_event_y, METH_O, NULL},
	 { "move_event_ox", _wrap_move_event_ox, METH_O, NULL},
	 { "move_event_oy", _wrap_move_event_oy, METH_O, NULL},
	 { "move_event_is_touch", _wrap_move_event_is_touch, METH_O, NULL},
	 { "move_event_swigregister", move_event_swigregister, METH_O, NULL},
	 { "move_event_swiginit", move_event_swiginit, METH_VARARGS, NULL},
	 { "anim_event_s_class", _wrap_anim_event_s_class, METH_NOARGS, NULL},
	 { "anim_event_check_class_name", _wrap_anim_event_check_class_name, METH_NOARGS, NULL},
	 { "anim_event_cast", _wrap_anim_event_cast, METH_VARARGS, NULL},
	 { "anim_event_copy", _wrap_anim_event_copy, METH_O, NULL},
	 { "delete_anim_event", _wrap_delete_anim_event, METH_O, NULL},
	 { "new_anim_event", _wrap_new_anim_event, METH_VARARGS, NULL},
	 { "anim_event_seconds", _wrap_anim_event_seconds, METH_O, NULL},
	 { "anim_event_micro_seconds", _wrap_anim_event_micro_seconds, METH_O, NULL},
	 { "anim_event_set_some_found", _wrap_anim_event_set_some_found, METH_VARARGS, NULL},
	 { "anim_event_some_found", _wrap_anim_event_some_found, METH_O, NULL},
	 { "anim_event_swigregister", anim_event_swigregister, METH_O, NULL},
	 { "anim_event_swiginit", anim_event_swiginit, METH_VARARGS, NULL},
	 { "delete_event_action", _wrap_delete_event_action, METH_O, NULL},
	 { "new_event_action", _wrap_new_event_action, METH_VARARGS, NULL},
	 { "event_action_reset", _wrap_event_action_reset, METH_O, NULL},
	 { "event_action_get_event", _wrap_event_action_get_event, METH_VARARGS, NULL},
	 { "event_action_set_done", _wrap_event_action_set_done, METH_VARARGS, NULL},
	 { "event_action_done", _wrap_event_action_done, METH_O, NULL},
	 { "event_action_set_do_switch_children", _wrap_event_action_set_do_switch_children, METH_VARARGS, NULL},
	 { "event_action_do_switch_children", _wrap_event_action_do_switch_children, METH_O, NULL},
	 { "event_action_swigregister", event_action_swigregister, METH_O, NULL},
	 { "event_action_swiginit", event_action_swiginit, METH_VARARGS, NULL},
	 { "group_s_class", _wrap_group_s_class, METH_NOARGS, NULL},
	 { "group_check_class_name", _wrap_group_check_class_name, METH_NOARGS, NULL},
	 { "group_cast", _wrap_group_cast, METH_VARARGS, NULL},
	 { "group_copy", _wrap_group_copy, METH_O, NULL},
	 { "group_s_cls", _wrap_group_s_cls, METH_O, NULL},
	 { "group_render", _wrap_group_render, METH_VARARGS, NULL},
	 { "group_pick", _wrap_group_pick, METH_VARARGS, NULL},
	 { "group_bbox", _wrap_group_bbox, METH_VARARGS, NULL},
	 { "group_event", _wrap_group_event, METH_VARARGS, NULL},
	 { "group_search", _wrap_group_search, METH_VARARGS, NULL},
	 { "group_write", _wrap_group_write, METH_VARARGS, NULL},
	 { "delete_group", _wrap_delete_group, METH_O, NULL},
	 { "new_group", _wrap_new_group, METH_VARARGS, NULL},
	 { "group_add", _wrap_group_add, METH_VARARGS, NULL},
	 { "group_set", _wrap_group_set, METH_VARARGS, NULL},
	 { "group_replace", _wrap_group_replace, METH_VARARGS, NULL},
	 { "group_swap", _wrap_group_swap, METH_VARARGS, NULL},
	 { "group_rsearch_from", _wrap_group_rsearch_from, METH_VARARGS, NULL},
	 { "group_remove", _wrap_group_remove, METH_VARARGS, NULL},
	 { "group_delete_from", _wrap_group_delete_from, METH_VARARGS, NULL},
	 { "group_transfer", _wrap_group_transfer, METH_VARARGS, NULL},
	 { "group_clear", _wrap_group_clear, METH_O, NULL},
	 { "group_raw_clear", _wrap_group_raw_clear, METH_O, NULL},
	 { "group_size", _wrap_group_size, METH_O, NULL},
	 { "group_empty", _wrap_group_empty, METH_O, NULL},
	 { "group_children", _wrap_group_children, METH_VARARGS, NULL},
	 { "group_swigregister", group_swigregister, METH_O, NULL},
	 { "group_swiginit", group_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_inlib__sg__sfT_bool_tTo_p_inlib__sg__bsfT_bool_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bsf< bool > *)  ((inlib::sg::sf< bool > *) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &)) (std::basic_ios< char > *) ((std::basic_ostream< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &)) (std::basic_ios< char > *) ((std::basic_istream< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &)) (std::basic_ios< char > *)(std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &))  ((std::basic_ios< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *) (std::basic_ios< char > *) ((std::basic_ostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *) (std::basic_ios< char > *) ((std::basic_istream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *) (std::basic_ios< char > *)(std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *)  ((std::basic_ios< char,std::char_traits< char > > *) x));
}
static void *_p_inlib__histo__h3dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b3< double,unsigned int,double,double > *)(inlib::histo::h3< double,unsigned int,double,double > *) ((inlib::histo::h3d *) x));
}
static void *_p_inlib__histo__p1dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b1< double,unsigned int,double,double > *)(inlib::histo::p1< double,unsigned int,double,double,double > *) ((inlib::histo::p1d *) x));
}
static void *_p_inlib__histo__b1T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *)  ((inlib::histo::b1< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__b2T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *)  ((inlib::histo::b2< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__b3T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *)  ((inlib::histo::b3< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__h1T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b1< double,unsigned int,double,double > *) ((inlib::histo::h1< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__h2T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b2< double,unsigned int,double,double > *) ((inlib::histo::h2< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__h3T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b3< double,unsigned int,double,double > *) ((inlib::histo::h3< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__p1T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b1< double,unsigned int,double,double > *) ((inlib::histo::p1< double,unsigned int,double,double,double > *) x));
}
static void *_p_inlib__histo__p2T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b2< double,unsigned int,double,double > *) ((inlib::histo::p2< double,unsigned int,double,double,double > *) x));
}
static void *_p_inlib__histo__h2dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b2< double,unsigned int,double,double > *)(inlib::histo::h2< double,unsigned int,double,double > *) ((inlib::histo::h2d *) x));
}
static void *_p_inlib__histo__p2dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b2< double,unsigned int,double,double > *)(inlib::histo::p2< double,unsigned int,double,double,double > *) ((inlib::histo::p2d *) x));
}
static void *_p_inlib__histo__h1dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::base_histo< double,unsigned int,double,double > *) (inlib::histo::b1< double,unsigned int,double,double > *)(inlib::histo::h1< double,unsigned int,double,double > *) ((inlib::histo::h1d *) x));
}
static void *_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &))  ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)) x));
}
static void *_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &))  ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)) x));
}
static void *_p_inlib__histo__p2dTo_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::p2< double,unsigned int,double,double,double > *)  ((inlib::histo::p2d *) x));
}
static void *_p_inlib__histo__p1dTo_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::p1< double,unsigned int,double,double,double > *)  ((inlib::histo::p1d *) x));
}
static void *_p_inlib__histo__h3dTo_p_inlib__histo__h3T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::h3< double,unsigned int,double,double > *)  ((inlib::histo::h3d *) x));
}
static void *_p_inlib__histo__h2dTo_p_inlib__histo__h2T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::h2< double,unsigned int,double,double > *)  ((inlib::histo::h2d *) x));
}
static void *_p_inlib__histo__h1dTo_p_inlib__histo__h1T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::h1< double,unsigned int,double,double > *)  ((inlib::histo::h1d *) x));
}
static void *_p_inlib__histo__h3dTo_p_inlib__histo__b3T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b3< double,unsigned int,double,double > *) (inlib::histo::h3< double,unsigned int,double,double > *) ((inlib::histo::h3d *) x));
}
static void *_p_inlib__histo__h3T_double_unsigned_int_double_double_tTo_p_inlib__histo__b3T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b3< double,unsigned int,double,double > *)  ((inlib::histo::h3< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__h2T_double_unsigned_int_double_double_tTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b2< double,unsigned int,double,double > *)  ((inlib::histo::h2< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__p2T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b2< double,unsigned int,double,double > *)  ((inlib::histo::p2< double,unsigned int,double,double,double > *) x));
}
static void *_p_inlib__histo__h2dTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b2< double,unsigned int,double,double > *) (inlib::histo::h2< double,unsigned int,double,double > *) ((inlib::histo::h2d *) x));
}
static void *_p_inlib__histo__p2dTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b2< double,unsigned int,double,double > *) (inlib::histo::p2< double,unsigned int,double,double,double > *) ((inlib::histo::p2d *) x));
}
static void *_p_inlib__histo__p1dTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b1< double,unsigned int,double,double > *) (inlib::histo::p1< double,unsigned int,double,double,double > *) ((inlib::histo::p1d *) x));
}
static void *_p_inlib__histo__h1T_double_unsigned_int_double_double_tTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b1< double,unsigned int,double,double > *)  ((inlib::histo::h1< double,unsigned int,double,double > *) x));
}
static void *_p_inlib__histo__p1T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b1< double,unsigned int,double,double > *)  ((inlib::histo::p1< double,unsigned int,double,double,double > *) x));
}
static void *_p_inlib__histo__h1dTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::histo::b1< double,unsigned int,double,double > *) (inlib::histo::h1< double,unsigned int,double,double > *) ((inlib::histo::h1d *) x));
}
static void *_p_inlib__colorfTo_p_inlib__vec4f(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::vec4f *)  ((inlib::colorf *) x));
}
static void *_p_inlib__sg__sf_vecT_inlib__colorf_float_tTo_p_inlib__sg__bsfT_inlib__colorf_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bsf< inlib::colorf > *)  ((inlib::sg::sf_vec< inlib::colorf,float > *) x));
}
static void *_p_inlib__mat4fTo_p_inlib__matT_float_4_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::mat< float,4 > *) (inlib::mat4< float > *) ((inlib::mat4f *) x));
}
static void *_p_inlib__mat4T_float_tTo_p_inlib__matT_float_4_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::mat< float,4 > *)  ((inlib::mat4< float > *) x));
}
static void *_p_inlib__sg__bmfT_std__string_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bmf< std::string > *) x));
}
static void *_p_inlib__sg__bsfT_std__string_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bsf< std::string > *) x));
}
static void *_p_inlib__sg__bsfT_inlib__colorf_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bsf< inlib::colorf > *) x));
}
static void *_p_inlib__sg__sf_vecT_inlib__colorf_float_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bsf< inlib::colorf > *) ((inlib::sg::sf_vec< inlib::colorf,float > *) x));
}
static void *_p_inlib__sg__sfT_float_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bsf< float > *) ((inlib::sg::sf< float > *) x));
}
static void *_p_inlib__sg__bsfT_float_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bsf< float > *) x));
}
static void *_p_inlib__sg__sf_enumT_inlib__sg__winding_type_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bsf< inlib::sg::winding_type > *) ((inlib::sg::sf_enum< enum inlib::sg::winding_type > *) x));
}
static void *_p_inlib__sg__bsfT_inlib__sg__winding_type_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bsf< inlib::sg::winding_type > *) x));
}
static void *_p_inlib__sg__sfT_bool_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bsf< bool > *) ((inlib::sg::sf< bool > *) x));
}
static void *_p_inlib__sg__bsfT_bool_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bsf< bool > *) x));
}
static void *_p_inlib__sg__bsfT_inlib__rotf_tTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *)  ((inlib::sg::bsf< inlib::rotf > *) x));
}
static void *_p_inlib__sg__mf_stringTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bmf< std::string > *) ((inlib::sg::mf_string *) x));
}
static void *_p_inlib__sg__sf_stringTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bsf< std::string > *) ((inlib::sg::sf_string *) x));
}
static void *_p_inlib__sg__sf_rotfTo_p_inlib__sg__field(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::field *) (inlib::sg::bsf< inlib::rotf > *) ((inlib::sg::sf_rotf *) x));
}
static void *_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &))  ((std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) x));
}
static void *_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &))  ((std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) x));
}
static void *_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) (std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ostream< char,std::char_traits< char > > *)  ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_istreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_istream< char,std::char_traits< char > > *)  ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_inlib__sg__mf_stringTo_p_inlib__sg__bmfT_std__string_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bmf< std::string > *)  ((inlib::sg::mf_string *) x));
}
static void *_p_inlib__sg__sf_stringTo_p_inlib__sg__bsfT_std__string_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bsf< std::string > *)  ((inlib::sg::sf_string *) x));
}
static void *_p_inlib__sg__write_actionTo_p_inlib__sg__primitive_visitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::primitive_visitor *)  ((inlib::sg::write_action *) x));
}
static void *_p_inlib__sg__pick_actionTo_p_inlib__sg__primitive_visitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::primitive_visitor *)  ((inlib::sg::pick_action *) x));
}
static void *_p_inlib__sg__matrix_actionTo_p_inlib__sg__states(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::states *)  ((inlib::sg::matrix_action *) x));
}
static void *_p_inlib__sg__write_actionTo_p_inlib__sg__states(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::states *) (inlib::sg::matrix_action *) ((inlib::sg::write_action *) x));
}
static void *_p_inlib__sg__pick_actionTo_p_inlib__sg__states(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::states *) (inlib::sg::matrix_action *) ((inlib::sg::pick_action *) x));
}
static void *_p_inlib__sg__event_actionTo_p_inlib__sg__states(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::states *) (inlib::sg::matrix_action *) ((inlib::sg::event_action *) x));
}
static void *_p_inlib__sg__sf_enumT_inlib__sg__winding_type_tTo_p_inlib__sg__bsfT_inlib__sg__winding_type_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bsf< inlib::sg::winding_type > *)  ((inlib::sg::sf_enum< enum inlib::sg::winding_type > *) x));
}
static void *_p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > *)  ((std::basic_ostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > *)  ((std::basic_istream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > *) (std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_inlib__sg__style_default_colormapTo_p_inlib__sg__style_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::style_colormap *)  ((inlib::sg::style_default_colormap *) x));
}
static void *_p_inlib__sg__style_ROOT_colormapTo_p_inlib__sg__style_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::style_colormap *)  ((inlib::sg::style_ROOT_colormap *) x));
}
static void *_p_inlib__sg__style_povama_colormapTo_p_inlib__sg__style_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::style_colormap *)  ((inlib::sg::style_povama_colormap *) x));
}
static void *_p_inlib__sg__by_value_colormapTo_p_inlib__sg__base_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::base_colormap *)  ((inlib::sg::by_value_colormap *) x));
}
static void *_p_inlib__sg__grey_scale_colormapTo_p_inlib__sg__base_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::base_colormap *)  ((inlib::sg::grey_scale_colormap *) x));
}
static void *_p_inlib__sg__grey_scale_inverse_colormapTo_p_inlib__sg__base_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::base_colormap *)  ((inlib::sg::grey_scale_inverse_colormap *) x));
}
static void *_p_inlib__sg__violet_to_red_colormapTo_p_inlib__sg__base_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::base_colormap *)  ((inlib::sg::violet_to_red_colormap *) x));
}
static void *_p_inlib__sg__const_colormapTo_p_inlib__sg__base_colormap(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::base_colormap *)  ((inlib::sg::const_colormap *) x));
}
static void *_p_inlib__FILE_readerTo_p_inlib__file__reader(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::file::reader *)  ((inlib::FILE_reader *) x));
}
static void *_p_inlib__sg__sfT_float_tTo_p_inlib__sg__bsfT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bsf< float > *)  ((inlib::sg::sf< float > *) x));
}
static void *_p_inlib__rotfTo_p_inlib__qrotT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::qrot< float > *)  ((inlib::rotf *) x));
}
static void *_p_inlib__mat4fTo_p_inlib__mat4T_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::mat4< float > *)  ((inlib::mat4f *) x));
}
static void *_p_inlib__vec4fTo_p_inlib__vec4T_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::vec4< float > *)  ((inlib::vec4f *) x));
}
static void *_p_inlib__colorfTo_p_inlib__vec4T_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::vec4< float > *) (inlib::vec4f *) ((inlib::colorf *) x));
}
static void *_p_inlib__vec3fTo_p_inlib__vec3T_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::vec3< float > *)  ((inlib::vec3f *) x));
}
static void *_p_inlib__sg__write_actionTo_p_inlib__sg__matrix_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::matrix_action *)  ((inlib::sg::write_action *) x));
}
static void *_p_inlib__sg__pick_actionTo_p_inlib__sg__matrix_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::matrix_action *)  ((inlib::sg::pick_action *) x));
}
static void *_p_inlib__sg__event_actionTo_p_inlib__sg__matrix_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::matrix_action *)  ((inlib::sg::event_action *) x));
}
static void *_p_inlib__sg__matrix_actionTo_p_inlib__sg__win_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::win_action *)  ((inlib::sg::matrix_action *) x));
}
static void *_p_inlib__sg__write_actionTo_p_inlib__sg__win_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::win_action *) (inlib::sg::matrix_action *) ((inlib::sg::write_action *) x));
}
static void *_p_inlib__sg__pick_actionTo_p_inlib__sg__win_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::win_action *) (inlib::sg::matrix_action *) ((inlib::sg::pick_action *) x));
}
static void *_p_inlib__sg__event_actionTo_p_inlib__sg__win_action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::win_action *) (inlib::sg::matrix_action *) ((inlib::sg::event_action *) x));
}
static void *_p_inlib__sg__search_actionTo_p_inlib__sg__action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::action *)  ((inlib::sg::search_action *) x));
}
static void *_p_inlib__sg__win_actionTo_p_inlib__sg__action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::action *)  ((inlib::sg::win_action *) x));
}
static void *_p_inlib__sg__matrix_actionTo_p_inlib__sg__action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::action *) (inlib::sg::win_action *) ((inlib::sg::matrix_action *) x));
}
static void *_p_inlib__sg__write_actionTo_p_inlib__sg__action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::action *) (inlib::sg::win_action *)(inlib::sg::matrix_action *) ((inlib::sg::write_action *) x));
}
static void *_p_inlib__sg__pick_actionTo_p_inlib__sg__action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::action *) (inlib::sg::win_action *)(inlib::sg::matrix_action *) ((inlib::sg::pick_action *) x));
}
static void *_p_inlib__sg__event_actionTo_p_inlib__sg__action(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::action *) (inlib::sg::win_action *)(inlib::sg::matrix_action *) ((inlib::sg::event_action *) x));
}
static void *_p_inlib__sg__size_eventTo_p_inlib__sg__event(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::event *)  ((inlib::sg::size_event *) x));
}
static void *_p_inlib__sg__move_eventTo_p_inlib__sg__event(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::event *)  ((inlib::sg::move_event *) x));
}
static void *_p_inlib__sg__anim_eventTo_p_inlib__sg__event(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::event *)  ((inlib::sg::anim_event *) x));
}
static void *_p_inlib__sg__devrot_eventTo_p_inlib__sg__event(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::event *)  ((inlib::sg::devrot_event *) x));
}
static void *_p_inlib__sg__down_eventTo_p_inlib__sg__event(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::event *)  ((inlib::sg::down_event *) x));
}
static void *_p_inlib__sg__up_eventTo_p_inlib__sg__event(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::event *)  ((inlib::sg::up_event *) x));
}
static void *_p_inlib__sg__sf_rotfTo_p_inlib__sg__bsfT_inlib__rotf_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::bsf< inlib::rotf > *)  ((inlib::sg::sf_rotf *) x));
}
static void *_p_inlib__sg__groupTo_p_inlib__sg__node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::node *)  ((inlib::sg::group *) x));
}
static void *_p_inlib__sg__styleTo_p_inlib__sg__node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::node *)  ((inlib::sg::style *) x));
}
static void *_p_inlib__sg__line_styleTo_p_inlib__sg__node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::node *)  ((inlib::sg::line_style *) x));
}
static void *_p_inlib__sg__text_styleTo_p_inlib__sg__node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((inlib::sg::node *)  ((inlib::sg::text_style *) x));
}
static swig_type_info _swigt__p_FILE = {"_p_FILE", "FILE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_annotations_t = {"_p_annotations_t", "annotations_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_axis_t = {"_p_axis_t", "axis_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bn_t = {"_p_bn_t", "bn_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "std::basic_istream< char >::char_type *|char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char_type = {"_p_char_type", "char_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dim_t = {"_p_dim_t", "dim_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_enum_std__ios_base__event_r_std__ios_base_int__void = {"_p_f_enum_std__ios_base__event_r_std__ios_base_int__void", "void (*)(enum std::ios_base::event,std::ios_base &,int)|std::ios_base::event_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t", "std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t", "std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t", "std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__ios_base = {"_p_f_r_std__ios_base__r_std__ios_base", "std::ios_base &(*)(std::ios_base &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_first_type = {"_p_first_type", "first_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fmtflags = {"_p_fmtflags", "fmtflags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__FILE_reader = {"_p_inlib__FILE_reader", "inlib::FILE_reader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__cmp_colorf = {"_p_inlib__cmp_colorf", "inlib::cmp_colorf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__colorf = {"_p_inlib__colorf", "inlib::colorf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__csv_time = {"_p_inlib__csv_time", "inlib::csv_time *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__file__reader = {"_p_inlib__file__reader", "inlib::file::reader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__fits_bit = {"_p_inlib__fits_bit", "inlib::fits_bit *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__axisT_double_t = {"_p_inlib__histo__axisT_double_t", "inlib::histo::b3< double,unsigned int,double,double >::axis_t *|inlib::histo::axis< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__axisT_double_t__bn_t = {"_p_inlib__histo__axisT_double_t__bn_t", "inlib::histo::b1< double,unsigned int,double,double >::bn_t *|inlib::histo::b2< double,unsigned int,double,double >::bn_t *|inlib::histo::b3< double,unsigned int,double,double >::bn_t *|inlib::histo::h1< double,unsigned int,double,double >::bn_t *|inlib::histo::h2< double,unsigned int,double,double >::bn_t *|inlib::histo::h3< double,unsigned int,double,double >::bn_t *|inlib::histo::p1< double,unsigned int,double,double,double >::bn_t *|inlib::histo::p2< double,unsigned int,double,double,double >::bn_t *|inlib::histo::axis< double >::bn_t *|inlib::histo::base_histo< double,unsigned int,double,double >::bn_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__b1T_double_unsigned_int_double_double_t = {"_p_inlib__histo__b1T_double_unsigned_int_double_double_t", "inlib::histo::b1< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__b2T_double_unsigned_int_double_double_t = {"_p_inlib__histo__b2T_double_unsigned_int_double_double_t", "inlib::histo::b2< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__b3T_double_unsigned_int_double_double_t = {"_p_inlib__histo__b3T_double_unsigned_int_double_double_t", "inlib::histo::b3< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__base_histoT_double_unsigned_int_double_double_t = {"_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t", "inlib::histo::base_histo< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__h1T_double_unsigned_int_double_double_t = {"_p_inlib__histo__h1T_double_unsigned_int_double_double_t", "inlib::histo::h1< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__h1d = {"_p_inlib__histo__h1d", "inlib::histo::h1d *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__h2T_double_unsigned_int_double_double_t = {"_p_inlib__histo__h2T_double_unsigned_int_double_double_t", "inlib::histo::h2< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__h2d = {"_p_inlib__histo__h2d", "inlib::histo::h2d *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__h3T_double_unsigned_int_double_double_t = {"_p_inlib__histo__h3T_double_unsigned_int_double_double_t", "inlib::histo::h3< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__h3d = {"_p_inlib__histo__h3d", "inlib::histo::h3d *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__histo_dataT_double_unsigned_int_double_t = {"_p_inlib__histo__histo_dataT_double_unsigned_int_double_t", "inlib::histo::histo_data< double,unsigned int,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t = {"_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t", "inlib::histo::p1< double,unsigned int,double,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__p1d = {"_p_inlib__histo__p1d", "inlib::histo::p1d *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t = {"_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t", "inlib::histo::p2< double,unsigned int,double,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__p2d = {"_p_inlib__histo__p2d", "inlib::histo::p2d *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t = {"_p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t", "inlib::histo::profile_data< double,unsigned int,double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__imgT_unsigned_char_t = {"_p_inlib__imgT_unsigned_char_t", "inlib::img< unsigned char > *|inlib::img_byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__io__irbuf = {"_p_inlib__io__irbuf", "inlib::io::irbuf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__io__iwbuf = {"_p_inlib__io__iwbuf", "inlib::io::iwbuf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__mat4T_float_t = {"_p_inlib__mat4T_float_t", "inlib::mat4< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__mat4f = {"_p_inlib__mat4f", "inlib::mat4f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__matT_float_4_t = {"_p_inlib__matT_float_4_t", "inlib::mat< float,4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__qrotT_float_t = {"_p_inlib__qrotT_float_t", "inlib::qrot< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__random__bw = {"_p_inlib__random__bw", "inlib::random::bw *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__random__exp = {"_p_inlib__random__exp", "inlib::random::exp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__random__flat = {"_p_inlib__random__flat", "inlib::random::flat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__random__gauss = {"_p_inlib__random__gauss", "inlib::random::gauss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__rotf = {"_p_inlib__rotf", "inlib::rotf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__action = {"_p_inlib__sg__action", "inlib::sg::action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__anim_event = {"_p_inlib__sg__anim_event", "inlib::sg::anim_event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__area_style = {"_p_inlib__sg__area_style", "enum inlib::sg::area_style *|inlib::sg::area_style *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__base_colormap = {"_p_inlib__sg__base_colormap", "inlib::sg::base_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bbox_action = {"_p_inlib__sg__bbox_action", "inlib::sg::bbox_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bmfT_std__string_t = {"_p_inlib__sg__bmfT_std__string_t", "inlib::sg::bmf< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bsfT_bool_t = {"_p_inlib__sg__bsfT_bool_t", "inlib::sg::bsf< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bsfT_float_t = {"_p_inlib__sg__bsfT_float_t", "inlib::sg::bsf< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bsfT_inlib__colorf_t = {"_p_inlib__sg__bsfT_inlib__colorf_t", "inlib::sg::bsf< inlib::colorf > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bsfT_inlib__rotf_t = {"_p_inlib__sg__bsfT_inlib__rotf_t", "inlib::sg::bsf< inlib::rotf > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bsfT_inlib__sg__winding_type_t = {"_p_inlib__sg__bsfT_inlib__sg__winding_type_t", "inlib::sg::bsf< inlib::sg::winding_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__bsfT_std__string_t = {"_p_inlib__sg__bsfT_std__string_t", "inlib::sg::bsf< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__by_value_colormap = {"_p_inlib__sg__by_value_colormap", "inlib::sg::by_value_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__const_colormap = {"_p_inlib__sg__const_colormap", "inlib::sg::const_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__devrot_event = {"_p_inlib__sg__devrot_event", "inlib::sg::devrot_event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__down_event = {"_p_inlib__sg__down_event", "inlib::sg::down_event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__event = {"_p_inlib__sg__event", "inlib::sg::event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__event_action = {"_p_inlib__sg__event_action", "inlib::sg::event_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__field = {"_p_inlib__sg__field", "inlib::sg::field *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__grey_scale_colormap = {"_p_inlib__sg__grey_scale_colormap", "inlib::sg::grey_scale_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__grey_scale_inverse_colormap = {"_p_inlib__sg__grey_scale_inverse_colormap", "inlib::sg::grey_scale_inverse_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__group = {"_p_inlib__sg__group", "inlib::sg::group *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__hatching_policy = {"_p_inlib__sg__hatching_policy", "enum inlib::sg::hatching_policy *|inlib::sg::hatching_policy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__hjust = {"_p_inlib__sg__hjust", "enum inlib::sg::hjust *|inlib::sg::hjust *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__line_style = {"_p_inlib__sg__line_style", "inlib::sg::line_style *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__marker_style = {"_p_inlib__sg__marker_style", "enum inlib::sg::marker_style *|inlib::sg::marker_style *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__matrix_action = {"_p_inlib__sg__matrix_action", "inlib::sg::matrix_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__mf_string = {"_p_inlib__sg__mf_string", "inlib::sg::mf_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__move_event = {"_p_inlib__sg__move_event", "inlib::sg::move_event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__node = {"_p_inlib__sg__node", "inlib::sg::node *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__painting_policy = {"_p_inlib__sg__painting_policy", "enum inlib::sg::painting_policy *|inlib::sg::painting_policy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__pick_action = {"_p_inlib__sg__pick_action", "inlib::sg::pick_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__pick_element = {"_p_inlib__sg__pick_element", "inlib::sg::pick_action::pick_t *|inlib::sg::pick_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__primitive_visitor = {"_p_inlib__sg__primitive_visitor", "inlib::sg::primitive_visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__projection_type = {"_p_inlib__sg__projection_type", "enum inlib::sg::projection_type *|inlib::sg::projection_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__render_action = {"_p_inlib__sg__render_action", "inlib::sg::render_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__search_action = {"_p_inlib__sg__search_action", "inlib::sg::search_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sfT_bool_t = {"_p_inlib__sg__sfT_bool_t", "inlib::sg::sf< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sfT_float_t = {"_p_inlib__sg__sfT_float_t", "inlib::sg::sf< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sfT_int_t = {"_p_inlib__sg__sfT_int_t", "inlib::sg::sf< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sfT_unsigned_int_t = {"_p_inlib__sg__sfT_unsigned_int_t", "inlib::sg::sf< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sfT_unsigned_short_t = {"_p_inlib__sg__sfT_unsigned_short_t", "inlib::sg::sf< unsigned short > *|inlib::sg::sf< inlib::sg::lpat > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__area_style_t = {"_p_inlib__sg__sf_enumT_inlib__sg__area_style_t", "inlib::sg::sf_enum< enum inlib::sg::area_style > *|inlib::sg::sf_enum< inlib::sg::area_style > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t = {"_p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t", "inlib::sg::sf_enum< enum inlib::sg::hatching_policy > *|inlib::sg::sf_enum< inlib::sg::hatching_policy > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__hjust_t = {"_p_inlib__sg__sf_enumT_inlib__sg__hjust_t", "inlib::sg::sf_enum< enum inlib::sg::hjust > *|inlib::sg::sf_enum< inlib::sg::hjust > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__marker_style_t = {"_p_inlib__sg__sf_enumT_inlib__sg__marker_style_t", "inlib::sg::sf_enum< enum inlib::sg::marker_style > *|inlib::sg::sf_enum< inlib::sg::marker_style > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t = {"_p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t", "inlib::sg::sf_enum< enum inlib::sg::painting_policy > *|inlib::sg::sf_enum< inlib::sg::painting_policy > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__projection_type_t = {"_p_inlib__sg__sf_enumT_inlib__sg__projection_type_t", "inlib::sg::sf_enum< enum inlib::sg::projection_type > *|inlib::sg::sf_enum< inlib::sg::projection_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__vjust_t = {"_p_inlib__sg__sf_enumT_inlib__sg__vjust_t", "inlib::sg::sf_enum< enum inlib::sg::vjust > *|inlib::sg::sf_enum< inlib::sg::vjust > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t = {"_p_inlib__sg__sf_enumT_inlib__sg__winding_type_t", "inlib::sg::sf_enum< enum inlib::sg::winding_type > *|inlib::sg::sf_enum< inlib::sg::winding_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_rotf = {"_p_inlib__sg__sf_rotf", "inlib::sg::sf_rotf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_string = {"_p_inlib__sg__sf_string", "inlib::sg::sf_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_vecT_inlib__colorf_float_t = {"_p_inlib__sg__sf_vecT_inlib__colorf_float_t", "inlib::sg::sf_vec< inlib::colorf,float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__sf_vecT_inlib__vec3f_float_t = {"_p_inlib__sg__sf_vecT_inlib__vec3f_float_t", "inlib::sg::sf_vec< inlib::vec3f,float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__size_event = {"_p_inlib__sg__size_event", "inlib::sg::size_event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__state = {"_p_inlib__sg__state", "inlib::sg::state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__states = {"_p_inlib__sg__states", "inlib::sg::states *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style = {"_p_inlib__sg__style", "inlib::sg::style *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style_ROOT_colormap = {"_p_inlib__sg__style_ROOT_colormap", "inlib::sg::style_ROOT_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style_color = {"_p_inlib__sg__style_color", "inlib::sg::style_color *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style_colormap = {"_p_inlib__sg__style_colormap", "inlib::sg::style_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style_default_colormap = {"_p_inlib__sg__style_default_colormap", "inlib::sg::style_default_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style_parser = {"_p_inlib__sg__style_parser", "inlib::sg::style_parser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__style_povama_colormap = {"_p_inlib__sg__style_povama_colormap", "inlib::sg::style_povama_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__text_style = {"_p_inlib__sg__text_style", "inlib::sg::text_style *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__up_event = {"_p_inlib__sg__up_event", "inlib::sg::up_event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__violet_to_red_colormap = {"_p_inlib__sg__violet_to_red_colormap", "inlib::sg::violet_to_red_colormap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__vjust = {"_p_inlib__sg__vjust", "enum inlib::sg::vjust *|inlib::sg::vjust *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__win_action = {"_p_inlib__sg__win_action", "inlib::sg::win_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__winding_type = {"_p_inlib__sg__winding_type", "enum inlib::sg::winding_type *|inlib::sg::winding_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__sg__write_action = {"_p_inlib__sg__write_action", "inlib::sg::write_action *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__vec2T_float_t = {"_p_inlib__vec2T_float_t", "inlib::vec2< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__vec3T_double_t = {"_p_inlib__vec3T_double_t", "inlib::vec3< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__vec3T_float_t = {"_p_inlib__vec3T_float_t", "inlib::vec3< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__vec3f = {"_p_inlib__vec3f", "inlib::vec3f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__vec4T_float_t = {"_p_inlib__vec4T_float_t", "inlib::vec4< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__vec4f = {"_p_inlib__vec4f", "inlib::vec4f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_inlib__waxml__file = {"_p_inlib__waxml__file", "inlib::waxml::file *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|inlib::int32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int_type = {"_p_int_type", "int_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iostate = {"_p_iostate", "iostate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_it_t = {"_p_it_t", "it_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_type = {"_p_key_type", "key_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_double = {"_p_long_double", "long double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "inlib::int64 *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapped_type = {"_p_mapped_type", "mapped_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_num_t = {"_p_num_t", "num_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_off_type = {"_p_off_type", "off_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_openmode = {"_p_openmode", "openmode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_bool = {"_p_p_bool", "bool **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_double = {"_p_p_double", "double **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_float = {"_p_p_float", "float **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_int = {"_p_p_int", "int **|inlib::int32 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_long_long = {"_p_p_long_long", "long long **|inlib::int64 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_short = {"_p_p_short", "short **|inlib::int16 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_char = {"_p_p_unsigned_char", "unsigned char **|inlib::uchar **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_int = {"_p_p_unsigned_int", "unsigned int **|inlib::uint32 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_long_long = {"_p_p_unsigned_long_long", "unsigned long long **|inlib::uint64 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_short = {"_p_p_unsigned_short", "unsigned short **|inlib::uint16 **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_path_t = {"_p_path_t", "path_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_paths_t = {"_p_paths_t", "paths_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pick_t = {"_p_pick_t", "pick_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pos_type = {"_p_pos_type", "pos_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_second_type = {"_p_second_type", "second_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_seekdir = {"_p_seekdir", "seekdir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "inlib::int16 *|short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "std::streamsize *|size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_state_type = {"_p_state_type", "state_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_double_t = {"_p_std__allocatorT_double_t", "std::vector< double >::allocator_type *|std::allocator< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t = {"_p_std__basic_iosT_char_std__char_traitsT_char_t_t", "std::basic_ios< char > *|std::basic_ios< char,std::char_traits< char > > *|std::ios *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t", "std::basic_iostream< char,std::char_traits< char > > *|std::basic_iostream< char > *|std::iostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_std__basic_istreamT_char_std__char_traitsT_char_t_t", "std::basic_istream< char > *|std::basic_istream< char,std::char_traits< char > > *|std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t", "std::basic_ostream< char > *|std::basic_ostream< char,std::char_traits< char > > *|std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t = {"_p_std__basic_streambufT_char_std__char_traitsT_char_t_t", "std::basic_streambuf< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "std::basic_string< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ios_base = {"_p_std__ios_base", "std::ios_base *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__locale = {"_p_std__locale", "std::locale *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t = {"_p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t", "std::map< std::string,inlib::sg::style_colormap,std::less< std::string >,std::allocator< std::pair< std::string const,inlib::sg::style_colormap > > > *|inlib::sg::cmaps_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t = {"_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t", "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > *|inlib::waxml::annotations_t *|inlib::histo::base_histo< double,unsigned int,double,double >::annotations_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ofstream = {"_p_std__ofstream", "std::ofstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string__size_type = {"_p_std__string__size_type", "std::string::size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_double_std__allocatorT_double_t_t = {"_p_std__vectorT_double_std__allocatorT_double_t_t", "std::vector< double,std::allocator< double > > *|std::vector< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_float_std__allocatorT_float_t_t = {"_p_std__vectorT_float_std__allocatorT_float_t_t", "std::vector< float,std::allocator< float > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t = {"_p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t", "std::vector< inlib::sg::field *,std::allocator< inlib::sg::field * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t = {"_p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t", "inlib::sg::search_action::path_t *|std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t = {"_p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t", "std::vector< inlib::sg::pick_element,std::allocator< inlib::sg::pick_element > > *|std::vector< inlib::sg::pick_action::pick_t,std::allocator< inlib::sg::pick_action::pick_t > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_int_std__allocatorT_int_t_t = {"_p_std__vectorT_int_std__allocatorT_int_t_t", "std::vector< int,std::allocator< int > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t", "std::vector< std::string,std::allocator< std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator", "inlib::sg::bmf< std::string >::it_t *|std::vector< std::string,std::allocator< std::string > >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type", "std::vector< std::string,std::allocator< std::string > >::size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t = {"_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t", "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t = {"_p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t", "std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > > *|inlib::io::iwbuf::std_vec_vec_float_t *|inlib::io::irbuf::std_vec_vec_float_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t = {"_p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t", "inlib::sg::search_action::paths_t *|std::vector< std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > >,std::allocator< std::vector< inlib::sg::node *,std::allocator< inlib::sg::node * > > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t = {"_p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t", "std::vector< std::vector< std::string,std::allocator< std::string > >,std::allocator< std::vector< std::string,std::allocator< std::string > > > > *|inlib::io::iwbuf::std_vec_vec_string_t *|inlib::io::irbuf::std_vec_vec_string_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t = {"_p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t", "inlib::io::iwbuf::std_vec_vec_uint_t *|inlib::io::irbuf::std_vec_vec_uint_t *|std::vector< std::vector< unsigned int,std::allocator< unsigned int > >,std::allocator< std::vector< unsigned int,std::allocator< unsigned int > > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t = {"_p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t", "std::vector< unsigned int,std::allocator< unsigned int > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_void_p_std__allocatorT_void_p_t_t = {"_p_std__vectorT_void_p_std__allocatorT_void_p_t_t", "std::vector< void *,std::allocator< void * > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std_vec_vec_float_t = {"_p_std_vec_vec_float_t", "std_vec_vec_float_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std_vec_vec_string_t = {"_p_std_vec_vec_string_t", "std_vec_vec_string_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std_vec_vec_uint_t = {"_p_std_vec_vec_uint_t", "std_vec_vec_uint_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_streamoff = {"_p_streamoff", "std::basic_ostream< char >::off_type *|std::basic_istream< char >::off_type *|streamoff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_streampos = {"_p_streampos", "std::basic_ostream< char >::pos_type *|std::basic_istream< char >::pos_type *|streampos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_traits_type = {"_p_traits_type", "traits_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "inlib::uchar *|unsigned char *|inlib::byte *|inlib::gl::mode_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "inlib::uint32 *|unsigned int *|inlib::ref *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|inlib::diff_pointer_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "inlib::uint64 *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "inlib::cid *|inlib::uint16 *|unsigned short *|inlib::ushort *|inlib::sg::lpat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_FILE,
  &_swigt__p_allocator_type,
  &_swigt__p_annotations_t,
  &_swigt__p_axis_t,
  &_swigt__p_bn_t,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_char_type,
  &_swigt__p_difference_type,
  &_swigt__p_dim_t,
  &_swigt__p_double,
  &_swigt__p_f_enum_std__ios_base__event_r_std__ios_base_int__void,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__ios_base,
  &_swigt__p_first_type,
  &_swigt__p_float,
  &_swigt__p_fmtflags,
  &_swigt__p_inlib__FILE_reader,
  &_swigt__p_inlib__cmp_colorf,
  &_swigt__p_inlib__colorf,
  &_swigt__p_inlib__csv_time,
  &_swigt__p_inlib__file__reader,
  &_swigt__p_inlib__fits_bit,
  &_swigt__p_inlib__histo__axisT_double_t,
  &_swigt__p_inlib__histo__axisT_double_t__bn_t,
  &_swigt__p_inlib__histo__b1T_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__b2T_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__b3T_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__base_histoT_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__h1T_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__h1d,
  &_swigt__p_inlib__histo__h2T_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__h2d,
  &_swigt__p_inlib__histo__h3T_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__histo__h3d,
  &_swigt__p_inlib__histo__histo_dataT_double_unsigned_int_double_t,
  &_swigt__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t,
  &_swigt__p_inlib__histo__p1d,
  &_swigt__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t,
  &_swigt__p_inlib__histo__p2d,
  &_swigt__p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t,
  &_swigt__p_inlib__imgT_unsigned_char_t,
  &_swigt__p_inlib__io__irbuf,
  &_swigt__p_inlib__io__iwbuf,
  &_swigt__p_inlib__mat4T_float_t,
  &_swigt__p_inlib__mat4f,
  &_swigt__p_inlib__matT_float_4_t,
  &_swigt__p_inlib__qrotT_float_t,
  &_swigt__p_inlib__random__bw,
  &_swigt__p_inlib__random__exp,
  &_swigt__p_inlib__random__flat,
  &_swigt__p_inlib__random__gauss,
  &_swigt__p_inlib__rotf,
  &_swigt__p_inlib__sg__action,
  &_swigt__p_inlib__sg__anim_event,
  &_swigt__p_inlib__sg__area_style,
  &_swigt__p_inlib__sg__base_colormap,
  &_swigt__p_inlib__sg__bbox_action,
  &_swigt__p_inlib__sg__bmfT_std__string_t,
  &_swigt__p_inlib__sg__bsfT_bool_t,
  &_swigt__p_inlib__sg__bsfT_float_t,
  &_swigt__p_inlib__sg__bsfT_inlib__colorf_t,
  &_swigt__p_inlib__sg__bsfT_inlib__rotf_t,
  &_swigt__p_inlib__sg__bsfT_inlib__sg__winding_type_t,
  &_swigt__p_inlib__sg__bsfT_std__string_t,
  &_swigt__p_inlib__sg__by_value_colormap,
  &_swigt__p_inlib__sg__const_colormap,
  &_swigt__p_inlib__sg__devrot_event,
  &_swigt__p_inlib__sg__down_event,
  &_swigt__p_inlib__sg__event,
  &_swigt__p_inlib__sg__event_action,
  &_swigt__p_inlib__sg__field,
  &_swigt__p_inlib__sg__grey_scale_colormap,
  &_swigt__p_inlib__sg__grey_scale_inverse_colormap,
  &_swigt__p_inlib__sg__group,
  &_swigt__p_inlib__sg__hatching_policy,
  &_swigt__p_inlib__sg__hjust,
  &_swigt__p_inlib__sg__line_style,
  &_swigt__p_inlib__sg__marker_style,
  &_swigt__p_inlib__sg__matrix_action,
  &_swigt__p_inlib__sg__mf_string,
  &_swigt__p_inlib__sg__move_event,
  &_swigt__p_inlib__sg__node,
  &_swigt__p_inlib__sg__painting_policy,
  &_swigt__p_inlib__sg__pick_action,
  &_swigt__p_inlib__sg__pick_element,
  &_swigt__p_inlib__sg__primitive_visitor,
  &_swigt__p_inlib__sg__projection_type,
  &_swigt__p_inlib__sg__render_action,
  &_swigt__p_inlib__sg__search_action,
  &_swigt__p_inlib__sg__sfT_bool_t,
  &_swigt__p_inlib__sg__sfT_float_t,
  &_swigt__p_inlib__sg__sfT_int_t,
  &_swigt__p_inlib__sg__sfT_unsigned_int_t,
  &_swigt__p_inlib__sg__sfT_unsigned_short_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__area_style_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__hjust_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__marker_style_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__projection_type_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__vjust_t,
  &_swigt__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t,
  &_swigt__p_inlib__sg__sf_rotf,
  &_swigt__p_inlib__sg__sf_string,
  &_swigt__p_inlib__sg__sf_vecT_inlib__colorf_float_t,
  &_swigt__p_inlib__sg__sf_vecT_inlib__vec3f_float_t,
  &_swigt__p_inlib__sg__size_event,
  &_swigt__p_inlib__sg__state,
  &_swigt__p_inlib__sg__states,
  &_swigt__p_inlib__sg__style,
  &_swigt__p_inlib__sg__style_ROOT_colormap,
  &_swigt__p_inlib__sg__style_color,
  &_swigt__p_inlib__sg__style_colormap,
  &_swigt__p_inlib__sg__style_default_colormap,
  &_swigt__p_inlib__sg__style_parser,
  &_swigt__p_inlib__sg__style_povama_colormap,
  &_swigt__p_inlib__sg__text_style,
  &_swigt__p_inlib__sg__up_event,
  &_swigt__p_inlib__sg__violet_to_red_colormap,
  &_swigt__p_inlib__sg__vjust,
  &_swigt__p_inlib__sg__win_action,
  &_swigt__p_inlib__sg__winding_type,
  &_swigt__p_inlib__sg__write_action,
  &_swigt__p_inlib__vec2T_float_t,
  &_swigt__p_inlib__vec3T_double_t,
  &_swigt__p_inlib__vec3T_float_t,
  &_swigt__p_inlib__vec3f,
  &_swigt__p_inlib__vec4T_float_t,
  &_swigt__p_inlib__vec4f,
  &_swigt__p_inlib__waxml__file,
  &_swigt__p_int,
  &_swigt__p_int_type,
  &_swigt__p_iostate,
  &_swigt__p_it_t,
  &_swigt__p_key_type,
  &_swigt__p_long,
  &_swigt__p_long_double,
  &_swigt__p_long_long,
  &_swigt__p_mapped_type,
  &_swigt__p_num_t,
  &_swigt__p_off_type,
  &_swigt__p_openmode,
  &_swigt__p_p_PyObject,
  &_swigt__p_p_bool,
  &_swigt__p_p_char,
  &_swigt__p_p_double,
  &_swigt__p_p_float,
  &_swigt__p_p_int,
  &_swigt__p_p_long_long,
  &_swigt__p_p_short,
  &_swigt__p_p_unsigned_char,
  &_swigt__p_p_unsigned_int,
  &_swigt__p_p_unsigned_long_long,
  &_swigt__p_p_unsigned_short,
  &_swigt__p_p_void,
  &_swigt__p_path_t,
  &_swigt__p_paths_t,
  &_swigt__p_pick_t,
  &_swigt__p_pos_type,
  &_swigt__p_second_type,
  &_swigt__p_seekdir,
  &_swigt__p_short,
  &_swigt__p_size_t,
  &_swigt__p_size_type,
  &_swigt__p_state_type,
  &_swigt__p_std__allocatorT_double_t,
  &_swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__ios_base,
  &_swigt__p_std__locale,
  &_swigt__p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,
  &_swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,
  &_swigt__p_std__ofstream,
  &_swigt__p_std__string,
  &_swigt__p_std__string__size_type,
  &_swigt__p_std__vectorT_double_std__allocatorT_double_t_t,
  &_swigt__p_std__vectorT_float_std__allocatorT_float_t_t,
  &_swigt__p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t,
  &_swigt__p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t,
  &_swigt__p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t,
  &_swigt__p_std__vectorT_int_std__allocatorT_int_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type,
  &_swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t,
  &_swigt__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t,
  &_swigt__p_std__vectorT_void_p_std__allocatorT_void_p_t_t,
  &_swigt__p_std_vec_vec_float_t,
  &_swigt__p_std_vec_vec_string_t,
  &_swigt__p_std_vec_vec_uint_t,
  &_swigt__p_streamoff,
  &_swigt__p_streampos,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_traits_type,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_FILE[] = {  {&_swigt__p_FILE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_annotations_t[] = {  {&_swigt__p_annotations_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_axis_t[] = {  {&_swigt__p_axis_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bn_t[] = {  {&_swigt__p_bn_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char_type[] = {  {&_swigt__p_char_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dim_t[] = {  {&_swigt__p_dim_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_enum_std__ios_base__event_r_std__ios_base_int__void[] = {  {&_swigt__p_f_enum_std__ios_base__event_r_std__ios_base_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__ios_base[] = {  {&_swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__ios_base, 0, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_first_type[] = {  {&_swigt__p_first_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fmtflags[] = {  {&_swigt__p_fmtflags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__FILE_reader[] = {  {&_swigt__p_inlib__FILE_reader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__cmp_colorf[] = {  {&_swigt__p_inlib__cmp_colorf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__colorf[] = {  {&_swigt__p_inlib__colorf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__csv_time[] = {  {&_swigt__p_inlib__csv_time, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__file__reader[] = {  {&_swigt__p_inlib__file__reader, 0, 0, 0},  {&_swigt__p_inlib__FILE_reader, _p_inlib__FILE_readerTo_p_inlib__file__reader, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__fits_bit[] = {  {&_swigt__p_inlib__fits_bit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__axisT_double_t[] = {  {&_swigt__p_inlib__histo__axisT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__axisT_double_t__bn_t[] = {  {&_swigt__p_inlib__histo__axisT_double_t__bn_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__b1T_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__h1d, _p_inlib__histo__h1dTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p1d, _p_inlib__histo__p1dTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0, 0, 0},  {&_swigt__p_inlib__histo__h1T_double_unsigned_int_double_double_t, _p_inlib__histo__h1T_double_unsigned_int_double_double_tTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, _p_inlib__histo__p1T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__b1T_double_unsigned_int_double_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__b2T_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__p2d, _p_inlib__histo__p2dTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0, 0, 0},  {&_swigt__p_inlib__histo__h2T_double_unsigned_int_double_double_t, _p_inlib__histo__h2T_double_unsigned_int_double_double_tTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h2d, _p_inlib__histo__h2dTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, _p_inlib__histo__p2T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__b2T_double_unsigned_int_double_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__b3T_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__h3d, _p_inlib__histo__h3dTo_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0, 0, 0},  {&_swigt__p_inlib__histo__h3T_double_unsigned_int_double_double_t, _p_inlib__histo__h3T_double_unsigned_int_double_double_tTo_p_inlib__histo__b3T_double_unsigned_int_double_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__base_histoT_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__b1T_double_unsigned_int_double_double_t, _p_inlib__histo__b1T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__b2T_double_unsigned_int_double_double_t, _p_inlib__histo__b2T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__b3T_double_unsigned_int_double_double_t, _p_inlib__histo__b3T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h1T_double_unsigned_int_double_double_t, _p_inlib__histo__h1T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h2T_double_unsigned_int_double_double_t, _p_inlib__histo__h2T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h3T_double_unsigned_int_double_double_t, _p_inlib__histo__h3T_double_unsigned_int_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, _p_inlib__histo__p1T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, _p_inlib__histo__p2T_double_unsigned_int_double_double_double_tTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h3d, _p_inlib__histo__h3dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p2d, _p_inlib__histo__p2dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h2d, _p_inlib__histo__h2dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p1d, _p_inlib__histo__p1dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0, 0},  {&_swigt__p_inlib__histo__h1d, _p_inlib__histo__h1dTo_p_inlib__histo__base_histoT_double_unsigned_int_double_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__h1T_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__h1d, _p_inlib__histo__h1dTo_p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h1T_double_unsigned_int_double_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__h1d[] = {  {&_swigt__p_inlib__histo__h1d, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__h2T_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0, 0, 0},  {&_swigt__p_inlib__histo__h2d, _p_inlib__histo__h2dTo_p_inlib__histo__h2T_double_unsigned_int_double_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__h2d[] = {  {&_swigt__p_inlib__histo__h2d, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__h3T_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__h3d, _p_inlib__histo__h3dTo_p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__h3T_double_unsigned_int_double_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__h3d[] = {  {&_swigt__p_inlib__histo__h3d, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__histo_dataT_double_unsigned_int_double_t[] = {  {&_swigt__p_inlib__histo__histo_dataT_double_unsigned_int_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t[] = {  {&_swigt__p_inlib__histo__p1d, _p_inlib__histo__p1dTo_p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__p1d[] = {  {&_swigt__p_inlib__histo__p1d, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t[] = {  {&_swigt__p_inlib__histo__p2d, _p_inlib__histo__p2dTo_p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0, 0},  {&_swigt__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__p2d[] = {  {&_swigt__p_inlib__histo__p2d, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t[] = {  {&_swigt__p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__imgT_unsigned_char_t[] = {  {&_swigt__p_inlib__imgT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__io__irbuf[] = {  {&_swigt__p_inlib__io__irbuf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__io__iwbuf[] = {  {&_swigt__p_inlib__io__iwbuf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__mat4T_float_t[] = {  {&_swigt__p_inlib__mat4f, _p_inlib__mat4fTo_p_inlib__mat4T_float_t, 0, 0},  {&_swigt__p_inlib__mat4T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__mat4f[] = {  {&_swigt__p_inlib__mat4f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__matT_float_4_t[] = {  {&_swigt__p_inlib__mat4f, _p_inlib__mat4fTo_p_inlib__matT_float_4_t, 0, 0},  {&_swigt__p_inlib__matT_float_4_t, 0, 0, 0},  {&_swigt__p_inlib__mat4T_float_t, _p_inlib__mat4T_float_tTo_p_inlib__matT_float_4_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__qrotT_float_t[] = {  {&_swigt__p_inlib__rotf, _p_inlib__rotfTo_p_inlib__qrotT_float_t, 0, 0},  {&_swigt__p_inlib__qrotT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__random__bw[] = {  {&_swigt__p_inlib__random__bw, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__random__exp[] = {  {&_swigt__p_inlib__random__exp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__random__flat[] = {  {&_swigt__p_inlib__random__flat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__random__gauss[] = {  {&_swigt__p_inlib__random__gauss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__rotf[] = {  {&_swigt__p_inlib__rotf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__action[] = {  {&_swigt__p_inlib__sg__action, 0, 0, 0},  {&_swigt__p_inlib__sg__search_action, _p_inlib__sg__search_actionTo_p_inlib__sg__action, 0, 0},  {&_swigt__p_inlib__sg__win_action, _p_inlib__sg__win_actionTo_p_inlib__sg__action, 0, 0},  {&_swigt__p_inlib__sg__matrix_action, _p_inlib__sg__matrix_actionTo_p_inlib__sg__action, 0, 0},  {&_swigt__p_inlib__sg__write_action, _p_inlib__sg__write_actionTo_p_inlib__sg__action, 0, 0},  {&_swigt__p_inlib__sg__pick_action, _p_inlib__sg__pick_actionTo_p_inlib__sg__action, 0, 0},  {&_swigt__p_inlib__sg__event_action, _p_inlib__sg__event_actionTo_p_inlib__sg__action, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__anim_event[] = {  {&_swigt__p_inlib__sg__anim_event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__area_style[] = {  {&_swigt__p_inlib__sg__area_style, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__base_colormap[] = {  {&_swigt__p_inlib__sg__base_colormap, 0, 0, 0},  {&_swigt__p_inlib__sg__by_value_colormap, _p_inlib__sg__by_value_colormapTo_p_inlib__sg__base_colormap, 0, 0},  {&_swigt__p_inlib__sg__grey_scale_colormap, _p_inlib__sg__grey_scale_colormapTo_p_inlib__sg__base_colormap, 0, 0},  {&_swigt__p_inlib__sg__grey_scale_inverse_colormap, _p_inlib__sg__grey_scale_inverse_colormapTo_p_inlib__sg__base_colormap, 0, 0},  {&_swigt__p_inlib__sg__violet_to_red_colormap, _p_inlib__sg__violet_to_red_colormapTo_p_inlib__sg__base_colormap, 0, 0},  {&_swigt__p_inlib__sg__const_colormap, _p_inlib__sg__const_colormapTo_p_inlib__sg__base_colormap, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bbox_action[] = {  {&_swigt__p_inlib__sg__bbox_action, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bmfT_std__string_t[] = {  {&_swigt__p_inlib__sg__bmfT_std__string_t, 0, 0, 0},  {&_swigt__p_inlib__sg__mf_string, _p_inlib__sg__mf_stringTo_p_inlib__sg__bmfT_std__string_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bsfT_bool_t[] = {  {&_swigt__p_inlib__sg__bsfT_bool_t, 0, 0, 0},  {&_swigt__p_inlib__sg__sfT_bool_t, _p_inlib__sg__sfT_bool_tTo_p_inlib__sg__bsfT_bool_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bsfT_float_t[] = {  {&_swigt__p_inlib__sg__bsfT_float_t, 0, 0, 0},  {&_swigt__p_inlib__sg__sfT_float_t, _p_inlib__sg__sfT_float_tTo_p_inlib__sg__bsfT_float_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bsfT_inlib__colorf_t[] = {  {&_swigt__p_inlib__sg__bsfT_inlib__colorf_t, 0, 0, 0},  {&_swigt__p_inlib__sg__sf_vecT_inlib__colorf_float_t, _p_inlib__sg__sf_vecT_inlib__colorf_float_tTo_p_inlib__sg__bsfT_inlib__colorf_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bsfT_inlib__rotf_t[] = {  {&_swigt__p_inlib__sg__bsfT_inlib__rotf_t, 0, 0, 0},  {&_swigt__p_inlib__sg__sf_rotf, _p_inlib__sg__sf_rotfTo_p_inlib__sg__bsfT_inlib__rotf_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bsfT_inlib__sg__winding_type_t[] = {  {&_swigt__p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0, 0, 0},  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, _p_inlib__sg__sf_enumT_inlib__sg__winding_type_tTo_p_inlib__sg__bsfT_inlib__sg__winding_type_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__bsfT_std__string_t[] = {  {&_swigt__p_inlib__sg__bsfT_std__string_t, 0, 0, 0},  {&_swigt__p_inlib__sg__sf_string, _p_inlib__sg__sf_stringTo_p_inlib__sg__bsfT_std__string_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__by_value_colormap[] = {  {&_swigt__p_inlib__sg__by_value_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__const_colormap[] = {  {&_swigt__p_inlib__sg__const_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__devrot_event[] = {  {&_swigt__p_inlib__sg__devrot_event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__down_event[] = {  {&_swigt__p_inlib__sg__down_event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__event[] = {  {&_swigt__p_inlib__sg__event, 0, 0, 0},  {&_swigt__p_inlib__sg__size_event, _p_inlib__sg__size_eventTo_p_inlib__sg__event, 0, 0},  {&_swigt__p_inlib__sg__move_event, _p_inlib__sg__move_eventTo_p_inlib__sg__event, 0, 0},  {&_swigt__p_inlib__sg__anim_event, _p_inlib__sg__anim_eventTo_p_inlib__sg__event, 0, 0},  {&_swigt__p_inlib__sg__devrot_event, _p_inlib__sg__devrot_eventTo_p_inlib__sg__event, 0, 0},  {&_swigt__p_inlib__sg__down_event, _p_inlib__sg__down_eventTo_p_inlib__sg__event, 0, 0},  {&_swigt__p_inlib__sg__up_event, _p_inlib__sg__up_eventTo_p_inlib__sg__event, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__event_action[] = {  {&_swigt__p_inlib__sg__event_action, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__field[] = {  {&_swigt__p_inlib__sg__field, 0, 0, 0},  {&_swigt__p_inlib__sg__sfT_bool_t, _p_inlib__sg__sfT_bool_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bsfT_bool_t, _p_inlib__sg__bsfT_bool_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__mf_string, _p_inlib__sg__mf_stringTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__sf_string, _p_inlib__sg__sf_stringTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bsfT_inlib__rotf_t, _p_inlib__sg__bsfT_inlib__rotf_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bmfT_std__string_t, _p_inlib__sg__bmfT_std__string_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bsfT_std__string_t, _p_inlib__sg__bsfT_std__string_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bsfT_inlib__colorf_t, _p_inlib__sg__bsfT_inlib__colorf_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__sfT_float_t, _p_inlib__sg__sfT_float_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bsfT_float_t, _p_inlib__sg__bsfT_float_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__sf_vecT_inlib__colorf_float_t, _p_inlib__sg__sf_vecT_inlib__colorf_float_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__sf_rotf, _p_inlib__sg__sf_rotfTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__bsfT_inlib__sg__winding_type_t, _p_inlib__sg__bsfT_inlib__sg__winding_type_tTo_p_inlib__sg__field, 0, 0},  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, _p_inlib__sg__sf_enumT_inlib__sg__winding_type_tTo_p_inlib__sg__field, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__grey_scale_colormap[] = {  {&_swigt__p_inlib__sg__grey_scale_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__grey_scale_inverse_colormap[] = {  {&_swigt__p_inlib__sg__grey_scale_inverse_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__group[] = {  {&_swigt__p_inlib__sg__group, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__hatching_policy[] = {  {&_swigt__p_inlib__sg__hatching_policy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__hjust[] = {  {&_swigt__p_inlib__sg__hjust, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__line_style[] = {  {&_swigt__p_inlib__sg__line_style, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__marker_style[] = {  {&_swigt__p_inlib__sg__marker_style, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__matrix_action[] = {  {&_swigt__p_inlib__sg__matrix_action, 0, 0, 0},  {&_swigt__p_inlib__sg__write_action, _p_inlib__sg__write_actionTo_p_inlib__sg__matrix_action, 0, 0},  {&_swigt__p_inlib__sg__pick_action, _p_inlib__sg__pick_actionTo_p_inlib__sg__matrix_action, 0, 0},  {&_swigt__p_inlib__sg__event_action, _p_inlib__sg__event_actionTo_p_inlib__sg__matrix_action, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__mf_string[] = {  {&_swigt__p_inlib__sg__mf_string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__move_event[] = {  {&_swigt__p_inlib__sg__move_event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__node[] = {  {&_swigt__p_inlib__sg__node, 0, 0, 0},  {&_swigt__p_inlib__sg__group, _p_inlib__sg__groupTo_p_inlib__sg__node, 0, 0},  {&_swigt__p_inlib__sg__style, _p_inlib__sg__styleTo_p_inlib__sg__node, 0, 0},  {&_swigt__p_inlib__sg__line_style, _p_inlib__sg__line_styleTo_p_inlib__sg__node, 0, 0},  {&_swigt__p_inlib__sg__text_style, _p_inlib__sg__text_styleTo_p_inlib__sg__node, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__painting_policy[] = {  {&_swigt__p_inlib__sg__painting_policy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__pick_action[] = {  {&_swigt__p_inlib__sg__pick_action, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__pick_element[] = {  {&_swigt__p_inlib__sg__pick_element, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__primitive_visitor[] = {  {&_swigt__p_inlib__sg__primitive_visitor, 0, 0, 0},  {&_swigt__p_inlib__sg__write_action, _p_inlib__sg__write_actionTo_p_inlib__sg__primitive_visitor, 0, 0},  {&_swigt__p_inlib__sg__pick_action, _p_inlib__sg__pick_actionTo_p_inlib__sg__primitive_visitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__projection_type[] = {  {&_swigt__p_inlib__sg__projection_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__render_action[] = {  {&_swigt__p_inlib__sg__render_action, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__search_action[] = {  {&_swigt__p_inlib__sg__search_action, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sfT_bool_t[] = {  {&_swigt__p_inlib__sg__sfT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sfT_float_t[] = {  {&_swigt__p_inlib__sg__sfT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sfT_int_t[] = {  {&_swigt__p_inlib__sg__sfT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sfT_unsigned_int_t[] = {  {&_swigt__p_inlib__sg__sfT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sfT_unsigned_short_t[] = {  {&_swigt__p_inlib__sg__sfT_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__area_style_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__area_style_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__hjust_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__hjust_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__marker_style_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__marker_style_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__projection_type_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__projection_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__vjust_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__vjust_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t[] = {  {&_swigt__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_rotf[] = {  {&_swigt__p_inlib__sg__sf_rotf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_string[] = {  {&_swigt__p_inlib__sg__sf_string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_vecT_inlib__colorf_float_t[] = {  {&_swigt__p_inlib__sg__sf_vecT_inlib__colorf_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__sf_vecT_inlib__vec3f_float_t[] = {  {&_swigt__p_inlib__sg__sf_vecT_inlib__vec3f_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__size_event[] = {  {&_swigt__p_inlib__sg__size_event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__state[] = {  {&_swigt__p_inlib__sg__state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__states[] = {  {&_swigt__p_inlib__sg__matrix_action, _p_inlib__sg__matrix_actionTo_p_inlib__sg__states, 0, 0},  {&_swigt__p_inlib__sg__write_action, _p_inlib__sg__write_actionTo_p_inlib__sg__states, 0, 0},  {&_swigt__p_inlib__sg__pick_action, _p_inlib__sg__pick_actionTo_p_inlib__sg__states, 0, 0},  {&_swigt__p_inlib__sg__event_action, _p_inlib__sg__event_actionTo_p_inlib__sg__states, 0, 0},  {&_swigt__p_inlib__sg__states, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style[] = {  {&_swigt__p_inlib__sg__style, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style_ROOT_colormap[] = {  {&_swigt__p_inlib__sg__style_ROOT_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style_color[] = {  {&_swigt__p_inlib__sg__style_color, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style_colormap[] = {  {&_swigt__p_inlib__sg__style_colormap, 0, 0, 0},  {&_swigt__p_inlib__sg__style_default_colormap, _p_inlib__sg__style_default_colormapTo_p_inlib__sg__style_colormap, 0, 0},  {&_swigt__p_inlib__sg__style_ROOT_colormap, _p_inlib__sg__style_ROOT_colormapTo_p_inlib__sg__style_colormap, 0, 0},  {&_swigt__p_inlib__sg__style_povama_colormap, _p_inlib__sg__style_povama_colormapTo_p_inlib__sg__style_colormap, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style_default_colormap[] = {  {&_swigt__p_inlib__sg__style_default_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style_parser[] = {  {&_swigt__p_inlib__sg__style_parser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__style_povama_colormap[] = {  {&_swigt__p_inlib__sg__style_povama_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__text_style[] = {  {&_swigt__p_inlib__sg__text_style, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__up_event[] = {  {&_swigt__p_inlib__sg__up_event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__violet_to_red_colormap[] = {  {&_swigt__p_inlib__sg__violet_to_red_colormap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__vjust[] = {  {&_swigt__p_inlib__sg__vjust, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__win_action[] = {  {&_swigt__p_inlib__sg__win_action, 0, 0, 0},  {&_swigt__p_inlib__sg__matrix_action, _p_inlib__sg__matrix_actionTo_p_inlib__sg__win_action, 0, 0},  {&_swigt__p_inlib__sg__write_action, _p_inlib__sg__write_actionTo_p_inlib__sg__win_action, 0, 0},  {&_swigt__p_inlib__sg__pick_action, _p_inlib__sg__pick_actionTo_p_inlib__sg__win_action, 0, 0},  {&_swigt__p_inlib__sg__event_action, _p_inlib__sg__event_actionTo_p_inlib__sg__win_action, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__winding_type[] = {  {&_swigt__p_inlib__sg__winding_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__sg__write_action[] = {  {&_swigt__p_inlib__sg__write_action, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__vec2T_float_t[] = {  {&_swigt__p_inlib__vec2T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__vec3T_double_t[] = {  {&_swigt__p_inlib__vec3T_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__vec3T_float_t[] = {  {&_swigt__p_inlib__vec3f, _p_inlib__vec3fTo_p_inlib__vec3T_float_t, 0, 0},  {&_swigt__p_inlib__vec3T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__vec3f[] = {  {&_swigt__p_inlib__vec3f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__vec4T_float_t[] = {  {&_swigt__p_inlib__vec4f, _p_inlib__vec4fTo_p_inlib__vec4T_float_t, 0, 0},  {&_swigt__p_inlib__colorf, _p_inlib__colorfTo_p_inlib__vec4T_float_t, 0, 0},  {&_swigt__p_inlib__vec4T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__vec4f[] = {  {&_swigt__p_inlib__vec4f, 0, 0, 0},  {&_swigt__p_inlib__colorf, _p_inlib__colorfTo_p_inlib__vec4f, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_inlib__waxml__file[] = {  {&_swigt__p_inlib__waxml__file, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int_type[] = {  {&_swigt__p_int_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iostate[] = {  {&_swigt__p_iostate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_it_t[] = {  {&_swigt__p_it_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_type[] = {  {&_swigt__p_key_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_double[] = {  {&_swigt__p_long_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapped_type[] = {  {&_swigt__p_mapped_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_num_t[] = {  {&_swigt__p_num_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_off_type[] = {  {&_swigt__p_off_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_openmode[] = {  {&_swigt__p_openmode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_bool[] = {  {&_swigt__p_p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_double[] = {  {&_swigt__p_p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_float[] = {  {&_swigt__p_p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_int[] = {  {&_swigt__p_p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_long_long[] = {  {&_swigt__p_p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_short[] = {  {&_swigt__p_p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_char[] = {  {&_swigt__p_p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_int[] = {  {&_swigt__p_p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_long_long[] = {  {&_swigt__p_p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_short[] = {  {&_swigt__p_p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_path_t[] = {  {&_swigt__p_path_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_paths_t[] = {  {&_swigt__p_paths_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pick_t[] = {  {&_swigt__p_pick_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pos_type[] = {  {&_swigt__p_pos_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_second_type[] = {  {&_swigt__p_second_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_seekdir[] = {  {&_swigt__p_seekdir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_state_type[] = {  {&_swigt__p_state_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_double_t[] = {  {&_swigt__p_std__allocatorT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_iosT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_streambufT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ios_base[] = {  {&_swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t, _p_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},  {&_swigt__p_std__ios_base, 0, 0, 0},  {&_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},  {&_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__locale[] = {  {&_swigt__p_std__locale, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ofstream[] = {  {&_swigt__p_std__ofstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string__size_type[] = {  {&_swigt__p_std__string__size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_double_std__allocatorT_double_t_t[] = {  {&_swigt__p_std__vectorT_double_std__allocatorT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_float_std__allocatorT_float_t_t[] = {  {&_swigt__p_std__vectorT_float_std__allocatorT_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t[] = {  {&_swigt__p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t[] = {  {&_swigt__p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t[] = {  {&_swigt__p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_int_std__allocatorT_int_t_t[] = {  {&_swigt__p_std__vectorT_int_std__allocatorT_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t[] = {  {&_swigt__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_void_p_std__allocatorT_void_p_t_t[] = {  {&_swigt__p_std__vectorT_void_p_std__allocatorT_void_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std_vec_vec_float_t[] = {  {&_swigt__p_std_vec_vec_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std_vec_vec_string_t[] = {  {&_swigt__p_std_vec_vec_string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std_vec_vec_uint_t[] = {  {&_swigt__p_std_vec_vec_uint_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_streamoff[] = {  {&_swigt__p_streamoff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_streampos[] = {  {&_swigt__p_streampos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_traits_type[] = {  {&_swigt__p_traits_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_FILE,
  _swigc__p_allocator_type,
  _swigc__p_annotations_t,
  _swigc__p_axis_t,
  _swigc__p_bn_t,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_char_type,
  _swigc__p_difference_type,
  _swigc__p_dim_t,
  _swigc__p_double,
  _swigc__p_f_enum_std__ios_base__event_r_std__ios_base_int__void,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__ios_base,
  _swigc__p_first_type,
  _swigc__p_float,
  _swigc__p_fmtflags,
  _swigc__p_inlib__FILE_reader,
  _swigc__p_inlib__cmp_colorf,
  _swigc__p_inlib__colorf,
  _swigc__p_inlib__csv_time,
  _swigc__p_inlib__file__reader,
  _swigc__p_inlib__fits_bit,
  _swigc__p_inlib__histo__axisT_double_t,
  _swigc__p_inlib__histo__axisT_double_t__bn_t,
  _swigc__p_inlib__histo__b1T_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__b2T_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__b3T_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__base_histoT_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__h1T_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__h1d,
  _swigc__p_inlib__histo__h2T_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__h2d,
  _swigc__p_inlib__histo__h3T_double_unsigned_int_double_double_t,
  _swigc__p_inlib__histo__h3d,
  _swigc__p_inlib__histo__histo_dataT_double_unsigned_int_double_t,
  _swigc__p_inlib__histo__p1T_double_unsigned_int_double_double_double_t,
  _swigc__p_inlib__histo__p1d,
  _swigc__p_inlib__histo__p2T_double_unsigned_int_double_double_double_t,
  _swigc__p_inlib__histo__p2d,
  _swigc__p_inlib__histo__profile_dataT_double_unsigned_int_double_double_t,
  _swigc__p_inlib__imgT_unsigned_char_t,
  _swigc__p_inlib__io__irbuf,
  _swigc__p_inlib__io__iwbuf,
  _swigc__p_inlib__mat4T_float_t,
  _swigc__p_inlib__mat4f,
  _swigc__p_inlib__matT_float_4_t,
  _swigc__p_inlib__qrotT_float_t,
  _swigc__p_inlib__random__bw,
  _swigc__p_inlib__random__exp,
  _swigc__p_inlib__random__flat,
  _swigc__p_inlib__random__gauss,
  _swigc__p_inlib__rotf,
  _swigc__p_inlib__sg__action,
  _swigc__p_inlib__sg__anim_event,
  _swigc__p_inlib__sg__area_style,
  _swigc__p_inlib__sg__base_colormap,
  _swigc__p_inlib__sg__bbox_action,
  _swigc__p_inlib__sg__bmfT_std__string_t,
  _swigc__p_inlib__sg__bsfT_bool_t,
  _swigc__p_inlib__sg__bsfT_float_t,
  _swigc__p_inlib__sg__bsfT_inlib__colorf_t,
  _swigc__p_inlib__sg__bsfT_inlib__rotf_t,
  _swigc__p_inlib__sg__bsfT_inlib__sg__winding_type_t,
  _swigc__p_inlib__sg__bsfT_std__string_t,
  _swigc__p_inlib__sg__by_value_colormap,
  _swigc__p_inlib__sg__const_colormap,
  _swigc__p_inlib__sg__devrot_event,
  _swigc__p_inlib__sg__down_event,
  _swigc__p_inlib__sg__event,
  _swigc__p_inlib__sg__event_action,
  _swigc__p_inlib__sg__field,
  _swigc__p_inlib__sg__grey_scale_colormap,
  _swigc__p_inlib__sg__grey_scale_inverse_colormap,
  _swigc__p_inlib__sg__group,
  _swigc__p_inlib__sg__hatching_policy,
  _swigc__p_inlib__sg__hjust,
  _swigc__p_inlib__sg__line_style,
  _swigc__p_inlib__sg__marker_style,
  _swigc__p_inlib__sg__matrix_action,
  _swigc__p_inlib__sg__mf_string,
  _swigc__p_inlib__sg__move_event,
  _swigc__p_inlib__sg__node,
  _swigc__p_inlib__sg__painting_policy,
  _swigc__p_inlib__sg__pick_action,
  _swigc__p_inlib__sg__pick_element,
  _swigc__p_inlib__sg__primitive_visitor,
  _swigc__p_inlib__sg__projection_type,
  _swigc__p_inlib__sg__render_action,
  _swigc__p_inlib__sg__search_action,
  _swigc__p_inlib__sg__sfT_bool_t,
  _swigc__p_inlib__sg__sfT_float_t,
  _swigc__p_inlib__sg__sfT_int_t,
  _swigc__p_inlib__sg__sfT_unsigned_int_t,
  _swigc__p_inlib__sg__sfT_unsigned_short_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__area_style_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__hatching_policy_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__hjust_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__marker_style_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__painting_policy_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__projection_type_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__vjust_t,
  _swigc__p_inlib__sg__sf_enumT_inlib__sg__winding_type_t,
  _swigc__p_inlib__sg__sf_rotf,
  _swigc__p_inlib__sg__sf_string,
  _swigc__p_inlib__sg__sf_vecT_inlib__colorf_float_t,
  _swigc__p_inlib__sg__sf_vecT_inlib__vec3f_float_t,
  _swigc__p_inlib__sg__size_event,
  _swigc__p_inlib__sg__state,
  _swigc__p_inlib__sg__states,
  _swigc__p_inlib__sg__style,
  _swigc__p_inlib__sg__style_ROOT_colormap,
  _swigc__p_inlib__sg__style_color,
  _swigc__p_inlib__sg__style_colormap,
  _swigc__p_inlib__sg__style_default_colormap,
  _swigc__p_inlib__sg__style_parser,
  _swigc__p_inlib__sg__style_povama_colormap,
  _swigc__p_inlib__sg__text_style,
  _swigc__p_inlib__sg__up_event,
  _swigc__p_inlib__sg__violet_to_red_colormap,
  _swigc__p_inlib__sg__vjust,
  _swigc__p_inlib__sg__win_action,
  _swigc__p_inlib__sg__winding_type,
  _swigc__p_inlib__sg__write_action,
  _swigc__p_inlib__vec2T_float_t,
  _swigc__p_inlib__vec3T_double_t,
  _swigc__p_inlib__vec3T_float_t,
  _swigc__p_inlib__vec3f,
  _swigc__p_inlib__vec4T_float_t,
  _swigc__p_inlib__vec4f,
  _swigc__p_inlib__waxml__file,
  _swigc__p_int,
  _swigc__p_int_type,
  _swigc__p_iostate,
  _swigc__p_it_t,
  _swigc__p_key_type,
  _swigc__p_long,
  _swigc__p_long_double,
  _swigc__p_long_long,
  _swigc__p_mapped_type,
  _swigc__p_num_t,
  _swigc__p_off_type,
  _swigc__p_openmode,
  _swigc__p_p_PyObject,
  _swigc__p_p_bool,
  _swigc__p_p_char,
  _swigc__p_p_double,
  _swigc__p_p_float,
  _swigc__p_p_int,
  _swigc__p_p_long_long,
  _swigc__p_p_short,
  _swigc__p_p_unsigned_char,
  _swigc__p_p_unsigned_int,
  _swigc__p_p_unsigned_long_long,
  _swigc__p_p_unsigned_short,
  _swigc__p_p_void,
  _swigc__p_path_t,
  _swigc__p_paths_t,
  _swigc__p_pick_t,
  _swigc__p_pos_type,
  _swigc__p_second_type,
  _swigc__p_seekdir,
  _swigc__p_short,
  _swigc__p_size_t,
  _swigc__p_size_type,
  _swigc__p_state_type,
  _swigc__p_std__allocatorT_double_t,
  _swigc__p_std__basic_iosT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_streambufT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__ios_base,
  _swigc__p_std__locale,
  _swigc__p_std__mapT_std__string_inlib__sg__style_colormap_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_inlib__sg__style_colormap_t_t_t,
  _swigc__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,
  _swigc__p_std__ofstream,
  _swigc__p_std__string,
  _swigc__p_std__string__size_type,
  _swigc__p_std__vectorT_double_std__allocatorT_double_t_t,
  _swigc__p_std__vectorT_float_std__allocatorT_float_t_t,
  _swigc__p_std__vectorT_inlib__sg__field_p_std__allocatorT_inlib__sg__field_p_t_t,
  _swigc__p_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t,
  _swigc__p_std__vectorT_inlib__sg__pick_element_std__allocatorT_inlib__sg__pick_element_t_t,
  _swigc__p_std__vectorT_int_std__allocatorT_int_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__iterator,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t__size_type,
  _swigc__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_float_std__allocatorT_float_t_t_std__allocatorT_std__vectorT_float_std__allocatorT_float_t_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_std__allocatorT_std__vectorT_inlib__sg__node_p_std__allocatorT_inlib__sg__node_p_t_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_std__allocatorT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_std__allocatorT_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t_t_t,
  _swigc__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t,
  _swigc__p_std__vectorT_void_p_std__allocatorT_void_p_t_t,
  _swigc__p_std_vec_vec_float_t,
  _swigc__p_std_vec_vec_string_t,
  _swigc__p_std_vec_vec_uint_t,
  _swigc__p_streamoff,
  _swigc__p_streampos,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_traits_type,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_POINTER, "endl_cb_ptr", 0, 0, (void *)((std::basic_ostream< char,std::char_traits< char > > & (*)(std::basic_ostream< char,std::char_traits< char > > &value))(std::endl< char,std::char_traits< char > >)), &SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t },
{ SWIG_PY_POINTER, "ends_cb_ptr", 0, 0, (void *)((std::basic_ostream< char,std::char_traits< char > > & (*)(std::basic_ostream< char,std::char_traits< char > > &value))(std::ends< char,std::char_traits< char > >)), &SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t },
{ SWIG_PY_POINTER, "flush_cb_ptr", 0, 0, (void *)((std::basic_ostream< char,std::char_traits< char > > & (*)(std::basic_ostream< char,std::char_traits< char > > &value))(std::flush< char,std::char_traits< char > >)), &SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t },
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        "swigvarlink",                      /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        0,                                  /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
        0,                                  /* tp_del */
        0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
        0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
        0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
        0,                                  /* tp_prev */
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        memcpy(gv->name, name, size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *globals = 0;
    if (!globals) {
      globals = SWIG_newvarlink();
    }
    return globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  
  // thread safe initialization
  swig::container_owner_attribute();
  
  globals = SWIG_globals();
  if (!globals) {
    PyErr_SetString(PyExc_TypeError, "Failure to create SWIG globals.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  PyDict_SetItemString(md, "cvar", globals);
  Py_DECREF(globals);
  SWIG_addvarlink(globals, "ios_base_boolalpha", Swig_var_ios_base_boolalpha_get, Swig_var_ios_base_boolalpha_set);
  SWIG_addvarlink(globals, "ios_base_dec", Swig_var_ios_base_dec_get, Swig_var_ios_base_dec_set);
  SWIG_addvarlink(globals, "ios_base_fixed", Swig_var_ios_base_fixed_get, Swig_var_ios_base_fixed_set);
  SWIG_addvarlink(globals, "ios_base_hex", Swig_var_ios_base_hex_get, Swig_var_ios_base_hex_set);
  SWIG_addvarlink(globals, "ios_base_internal", Swig_var_ios_base_internal_get, Swig_var_ios_base_internal_set);
  SWIG_addvarlink(globals, "ios_base_left", Swig_var_ios_base_left_get, Swig_var_ios_base_left_set);
  SWIG_addvarlink(globals, "ios_base_oct", Swig_var_ios_base_oct_get, Swig_var_ios_base_oct_set);
  SWIG_addvarlink(globals, "ios_base_right", Swig_var_ios_base_right_get, Swig_var_ios_base_right_set);
  SWIG_addvarlink(globals, "ios_base_scientific", Swig_var_ios_base_scientific_get, Swig_var_ios_base_scientific_set);
  SWIG_addvarlink(globals, "ios_base_showbase", Swig_var_ios_base_showbase_get, Swig_var_ios_base_showbase_set);
  SWIG_addvarlink(globals, "ios_base_showpoint", Swig_var_ios_base_showpoint_get, Swig_var_ios_base_showpoint_set);
  SWIG_addvarlink(globals, "ios_base_showpos", Swig_var_ios_base_showpos_get, Swig_var_ios_base_showpos_set);
  SWIG_addvarlink(globals, "ios_base_skipws", Swig_var_ios_base_skipws_get, Swig_var_ios_base_skipws_set);
  SWIG_addvarlink(globals, "ios_base_unitbuf", Swig_var_ios_base_unitbuf_get, Swig_var_ios_base_unitbuf_set);
  SWIG_addvarlink(globals, "ios_base_uppercase", Swig_var_ios_base_uppercase_get, Swig_var_ios_base_uppercase_set);
  SWIG_addvarlink(globals, "ios_base_adjustfield", Swig_var_ios_base_adjustfield_get, Swig_var_ios_base_adjustfield_set);
  SWIG_addvarlink(globals, "ios_base_basefield", Swig_var_ios_base_basefield_get, Swig_var_ios_base_basefield_set);
  SWIG_addvarlink(globals, "ios_base_floatfield", Swig_var_ios_base_floatfield_get, Swig_var_ios_base_floatfield_set);
  SWIG_addvarlink(globals, "ios_base_badbit", Swig_var_ios_base_badbit_get, Swig_var_ios_base_badbit_set);
  SWIG_addvarlink(globals, "ios_base_eofbit", Swig_var_ios_base_eofbit_get, Swig_var_ios_base_eofbit_set);
  SWIG_addvarlink(globals, "ios_base_failbit", Swig_var_ios_base_failbit_get, Swig_var_ios_base_failbit_set);
  SWIG_addvarlink(globals, "ios_base_goodbit", Swig_var_ios_base_goodbit_get, Swig_var_ios_base_goodbit_set);
  SWIG_addvarlink(globals, "ios_base_app", Swig_var_ios_base_app_get, Swig_var_ios_base_app_set);
  SWIG_addvarlink(globals, "ios_base_ate", Swig_var_ios_base_ate_get, Swig_var_ios_base_ate_set);
  SWIG_addvarlink(globals, "ios_base_binary", Swig_var_ios_base_binary_get, Swig_var_ios_base_binary_set);
  SWIG_addvarlink(globals, "ios_base_ios_base_in", Swig_var_ios_base_ios_base_in_get, Swig_var_ios_base_ios_base_in_set);
  SWIG_addvarlink(globals, "ios_base_out", Swig_var_ios_base_out_get, Swig_var_ios_base_out_set);
  SWIG_addvarlink(globals, "ios_base_trunc", Swig_var_ios_base_trunc_get, Swig_var_ios_base_trunc_set);
  SWIG_addvarlink(globals, "ios_base_beg", Swig_var_ios_base_beg_get, Swig_var_ios_base_beg_set);
  SWIG_addvarlink(globals, "ios_base_cur", Swig_var_ios_base_cur_get, Swig_var_ios_base_cur_set);
  SWIG_addvarlink(globals, "ios_base_end", Swig_var_ios_base_end_get, Swig_var_ios_base_end_set);
  SWIG_Python_SetConstant(d, "ios_base_erase_event",SWIG_From_int(static_cast< int >(std::ios_base::erase_event)));
  SWIG_Python_SetConstant(d, "ios_base_imbue_event",SWIG_From_int(static_cast< int >(std::ios_base::imbue_event)));
  SWIG_Python_SetConstant(d, "ios_base_copyfmt_event",SWIG_From_int(static_cast< int >(std::ios_base::copyfmt_event)));
  SWIG_addvarlink(globals, "cin", Swig_var_cin_get, Swig_var_cin_set);
  SWIG_addvarlink(globals, "cout", Swig_var_cout_get, Swig_var_cout_set);
  SWIG_addvarlink(globals, "cerr", Swig_var_cerr_get, Swig_var_cerr_set);
  SWIG_addvarlink(globals, "clog", Swig_var_clog_get, Swig_var_clog_set);
  
  
  
  SWIG_Python_SetConstant(d, "chmod_user",SWIG_From_int(static_cast< int >(inlib::file::chmod_user)));
  SWIG_Python_SetConstant(d, "chmod_group",SWIG_From_int(static_cast< int >(inlib::file::chmod_group)));
  SWIG_Python_SetConstant(d, "chmod_other",SWIG_From_int(static_cast< int >(inlib::file::chmod_other)));
  SWIG_Python_SetConstant(d, "chmod_all",SWIG_From_int(static_cast< int >(inlib::file::chmod_all)));
  SWIG_Python_SetConstant(d, "chmod_add",SWIG_From_int(static_cast< int >(inlib::file::chmod_add)));
  SWIG_Python_SetConstant(d, "chmod_sub",SWIG_From_int(static_cast< int >(inlib::file::chmod_sub)));
  SWIG_Python_SetConstant(d, "chmod_read",SWIG_From_int(static_cast< int >(inlib::file::chmod_read)));
  SWIG_Python_SetConstant(d, "chmod_write",SWIG_From_int(static_cast< int >(inlib::file::chmod_write)));
  SWIG_Python_SetConstant(d, "chmod_exec",SWIG_From_int(static_cast< int >(inlib::file::chmod_exec)));
  SWIG_Python_SetConstant(d, "INLIB_MAJOR_VERSION",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "INLIB_MINOR_VERSION",SWIG_From_int(static_cast< int >(8)));
  SWIG_Python_SetConstant(d, "INLIB_PATCH_VERSION",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "INLIB_VERSION",SWIG_FromCharPtr("1.8.0"));
  SWIG_Python_SetConstant(d, "INLIB_VERSION_VRP",SWIG_FromCharPtr("v1r8p0"));
  SWIG_Python_SetConstant(d, "line_solid",SWIG_From_int(static_cast< int >(inlib::sg::line_solid)));
  SWIG_Python_SetConstant(d, "line_dashed",SWIG_From_int(static_cast< int >(inlib::sg::line_dashed)));
  SWIG_Python_SetConstant(d, "line_dotted",SWIG_From_int(static_cast< int >(inlib::sg::line_dotted)));
  SWIG_Python_SetConstant(d, "line_dash_dotted",SWIG_From_int(static_cast< int >(inlib::sg::line_dash_dotted)));
  SWIG_Python_SetConstant(d, "marker_dot",SWIG_From_int(static_cast< int >(inlib::sg::marker_dot)));
  SWIG_Python_SetConstant(d, "marker_plus",SWIG_From_int(static_cast< int >(inlib::sg::marker_plus)));
  SWIG_Python_SetConstant(d, "marker_asterisk",SWIG_From_int(static_cast< int >(inlib::sg::marker_asterisk)));
  SWIG_Python_SetConstant(d, "marker_cross",SWIG_From_int(static_cast< int >(inlib::sg::marker_cross)));
  SWIG_Python_SetConstant(d, "marker_star",SWIG_From_int(static_cast< int >(inlib::sg::marker_star)));
  SWIG_Python_SetConstant(d, "marker_circle_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_circle_line)));
  SWIG_Python_SetConstant(d, "marker_circle_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_circle_filled)));
  SWIG_Python_SetConstant(d, "marker_triangle_up_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_triangle_up_line)));
  SWIG_Python_SetConstant(d, "marker_triangle_up_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_triangle_up_filled)));
  SWIG_Python_SetConstant(d, "marker_triangle_down_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_triangle_down_line)));
  SWIG_Python_SetConstant(d, "marker_triangle_down_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_triangle_down_filled)));
  SWIG_Python_SetConstant(d, "marker_david_star_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_david_star_line)));
  SWIG_Python_SetConstant(d, "marker_david_star_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_david_star_filled)));
  SWIG_Python_SetConstant(d, "marker_swiss_cross_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_swiss_cross_line)));
  SWIG_Python_SetConstant(d, "marker_swiss_cross_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_swiss_cross_filled)));
  SWIG_Python_SetConstant(d, "marker_diamond_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_diamond_line)));
  SWIG_Python_SetConstant(d, "marker_diamond_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_diamond_filled)));
  SWIG_Python_SetConstant(d, "marker_square_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_square_line)));
  SWIG_Python_SetConstant(d, "marker_square_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_square_filled)));
  SWIG_Python_SetConstant(d, "marker_penta_star_line",SWIG_From_int(static_cast< int >(inlib::sg::marker_penta_star_line)));
  SWIG_Python_SetConstant(d, "marker_penta_star_filled",SWIG_From_int(static_cast< int >(inlib::sg::marker_penta_star_filled)));
  SWIG_Python_SetConstant(d, "area_solid",SWIG_From_int(static_cast< int >(inlib::sg::area_solid)));
  SWIG_Python_SetConstant(d, "area_hatched",SWIG_From_int(static_cast< int >(inlib::sg::area_hatched)));
  SWIG_Python_SetConstant(d, "area_checker",SWIG_From_int(static_cast< int >(inlib::sg::area_checker)));
  SWIG_Python_SetConstant(d, "area_edged",SWIG_From_int(static_cast< int >(inlib::sg::area_edged)));
  SWIG_Python_SetConstant(d, "projection_none",SWIG_From_int(static_cast< int >(inlib::sg::projection_none)));
  SWIG_Python_SetConstant(d, "projection_rz",SWIG_From_int(static_cast< int >(inlib::sg::projection_rz)));
  SWIG_Python_SetConstant(d, "projection_phiz",SWIG_From_int(static_cast< int >(inlib::sg::projection_phiz)));
  SWIG_Python_SetConstant(d, "projection_zr",SWIG_From_int(static_cast< int >(inlib::sg::projection_zr)));
  SWIG_Python_SetConstant(d, "projection_zphi",SWIG_From_int(static_cast< int >(inlib::sg::projection_zphi)));
  SWIG_Python_SetConstant(d, "painting_uniform",SWIG_From_int(static_cast< int >(inlib::sg::painting_uniform)));
  SWIG_Python_SetConstant(d, "painting_by_value",SWIG_From_int(static_cast< int >(inlib::sg::painting_by_value)));
  SWIG_Python_SetConstant(d, "painting_by_level",SWIG_From_int(static_cast< int >(inlib::sg::painting_by_level)));
  SWIG_Python_SetConstant(d, "painting_grey_scale",SWIG_From_int(static_cast< int >(inlib::sg::painting_grey_scale)));
  SWIG_Python_SetConstant(d, "painting_violet_to_red",SWIG_From_int(static_cast< int >(inlib::sg::painting_violet_to_red)));
  SWIG_Python_SetConstant(d, "painting_grey_scale_inverse",SWIG_From_int(static_cast< int >(inlib::sg::painting_grey_scale_inverse)));
  SWIG_Python_SetConstant(d, "hatching_none",SWIG_From_int(static_cast< int >(inlib::sg::hatching_none)));
  SWIG_Python_SetConstant(d, "hatching_right",SWIG_From_int(static_cast< int >(inlib::sg::hatching_right)));
  SWIG_Python_SetConstant(d, "hatching_left",SWIG_From_int(static_cast< int >(inlib::sg::hatching_left)));
  SWIG_Python_SetConstant(d, "hatching_left_and_right",SWIG_From_int(static_cast< int >(inlib::sg::hatching_left_and_right)));
  SWIG_Python_SetConstant(d, "left",SWIG_From_int(static_cast< int >(inlib::sg::left)));
  SWIG_Python_SetConstant(d, "center",SWIG_From_int(static_cast< int >(inlib::sg::center)));
  SWIG_Python_SetConstant(d, "right",SWIG_From_int(static_cast< int >(inlib::sg::right)));
  SWIG_Python_SetConstant(d, "bottom",SWIG_From_int(static_cast< int >(inlib::sg::bottom)));
  SWIG_Python_SetConstant(d, "middle",SWIG_From_int(static_cast< int >(inlib::sg::middle)));
  SWIG_Python_SetConstant(d, "top",SWIG_From_int(static_cast< int >(inlib::sg::top)));
  SWIG_Python_SetConstant(d, "latin",SWIG_From_int(static_cast< int >(inlib::sg::latin)));
  SWIG_Python_SetConstant(d, "greek",SWIG_From_int(static_cast< int >(inlib::sg::greek)));
  SWIG_Python_SetConstant(d, "special",SWIG_From_int(static_cast< int >(inlib::sg::special)));
  SWIG_Python_SetConstant(d, "font_outline",SWIG_From_int(static_cast< int >(inlib::sg::font_outline)));
  SWIG_Python_SetConstant(d, "font_filled",SWIG_From_int(static_cast< int >(inlib::sg::font_filled)));
  SWIG_Python_SetConstant(d, "arrow_up",SWIG_From_int(static_cast< int >(inlib::sg::arrow_up)));
  SWIG_Python_SetConstant(d, "arrow_down",SWIG_From_int(static_cast< int >(inlib::sg::arrow_down)));
  SWIG_Python_SetConstant(d, "arrow_left",SWIG_From_int(static_cast< int >(inlib::sg::arrow_left)));
  SWIG_Python_SetConstant(d, "arrow_right",SWIG_From_int(static_cast< int >(inlib::sg::arrow_right)));
  SWIG_Python_SetConstant(d, "winding_ccw",SWIG_From_int(static_cast< int >(inlib::sg::winding_ccw)));
  SWIG_Python_SetConstant(d, "winding_cw",SWIG_From_int(static_cast< int >(inlib::sg::winding_cw)));
  SWIG_Python_SetConstant(d, "move_rotate_right",SWIG_From_int(static_cast< int >(inlib::sg::move_rotate_right)));
  SWIG_Python_SetConstant(d, "move_translate_right",SWIG_From_int(static_cast< int >(inlib::sg::move_translate_right)));
  SWIG_Python_SetConstant(d, "move_rotate_left",SWIG_From_int(static_cast< int >(inlib::sg::move_rotate_left)));
  SWIG_Python_SetConstant(d, "move_translate_left",SWIG_From_int(static_cast< int >(inlib::sg::move_translate_left)));
  SWIG_Python_SetConstant(d, "move_up",SWIG_From_int(static_cast< int >(inlib::sg::move_up)));
  SWIG_Python_SetConstant(d, "move_down",SWIG_From_int(static_cast< int >(inlib::sg::move_down)));
  SWIG_Python_SetConstant(d, "move_forward",SWIG_From_int(static_cast< int >(inlib::sg::move_forward)));
  SWIG_Python_SetConstant(d, "move_backward",SWIG_From_int(static_cast< int >(inlib::sg::move_backward)));
  SWIG_Python_SetConstant(d, "move_zoom_in",SWIG_From_int(static_cast< int >(inlib::sg::move_zoom_in)));
  SWIG_Python_SetConstant(d, "move_zoom_out",SWIG_From_int(static_cast< int >(inlib::sg::move_zoom_out)));
  SWIG_Python_SetConstant(d, "move_rotate_around_focal_right",SWIG_From_int(static_cast< int >(inlib::sg::move_rotate_around_focal_right)));
  SWIG_Python_SetConstant(d, "move_rotate_around_focal_left",SWIG_From_int(static_cast< int >(inlib::sg::move_rotate_around_focal_left)));
  SWIG_Python_SetConstant(d, "anim_left",SWIG_From_int(static_cast< int >(inlib::sg::anim_left)));
  SWIG_Python_SetConstant(d, "anim_right",SWIG_From_int(static_cast< int >(inlib::sg::anim_right)));
  SWIG_Python_SetConstant(d, "anim_up",SWIG_From_int(static_cast< int >(inlib::sg::anim_up)));
  SWIG_Python_SetConstant(d, "anim_down",SWIG_From_int(static_cast< int >(inlib::sg::anim_down)));
  SWIG_Python_SetConstant(d, "key_left",SWIG_From_int(static_cast< int >(inlib::sg::key_left)));
  SWIG_Python_SetConstant(d, "key_right",SWIG_From_int(static_cast< int >(inlib::sg::key_right)));
  SWIG_Python_SetConstant(d, "key_up",SWIG_From_int(static_cast< int >(inlib::sg::key_up)));
  SWIG_Python_SetConstant(d, "key_down",SWIG_From_int(static_cast< int >(inlib::sg::key_down)));
  SWIG_Python_SetConstant(d, "number_uint",SWIG_From_int(static_cast< int >(inlib::sg::number_uint)));
  SWIG_Python_SetConstant(d, "number_int",SWIG_From_int(static_cast< int >(inlib::sg::number_int)));
  SWIG_Python_SetConstant(d, "number_real",SWIG_From_int(static_cast< int >(inlib::sg::number_real)));
  SWIG_Python_SetConstant(d, "number_ip",SWIG_From_int(static_cast< int >(inlib::sg::number_ip)));
  SWIG_Python_SetConstant(d, "search_action_search_node_of_class",SWIG_From_int(static_cast< int >(inlib::sg::search_action::search_node_of_class)));
  SWIG_Python_SetConstant(d, "search_action_search_path_to_node",SWIG_From_int(static_cast< int >(inlib::sg::search_action::search_path_to_node)));
  SWIG_Python_SetConstant(d, "search_action_search_path_to_node_of_class",SWIG_From_int(static_cast< int >(inlib::sg::search_action::search_path_to_node_of_class)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

